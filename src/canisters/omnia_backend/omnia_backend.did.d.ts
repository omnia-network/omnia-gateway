// This file is auto-generated by the generate-omnia-backend-types.sh script. Do not edit it manually.

import type { Principal } from '@dfinity/principal';
import type { ActorMethod } from '@dfinity/agent';

export interface DeviceRegistrationInput {
  'device_name' : string,
  'env_uid' : number,
  'gateway_uid' : number,
}
export interface DeviceRegistrationResult {
  'device_name' : string,
  'device_uid' : number,
}
export interface EnvironmentCreationInput { 'env_name' : string }
export interface EnvironmentCreationResult {
  'env_uid' : number,
  'env_name' : string,
}
export interface EnvironmentInfo {
  'env_manager_principal_id' : string,
  'env_uid' : number,
  'env_name' : string,
}
export interface GatewayRegistrationInput {
  'gateway_name' : string,
  'env_uid' : number,
}
export interface GatewayRegistrationResult {
  'gateway_name' : string,
  'gateway_uid' : number,
}
export interface UserProfile {
  'user_principal_id' : string,
  'environment_uid' : [] | [number],
}
export interface _SERVICE {
  'createEnvironment' : ActorMethod<
    [EnvironmentCreationInput],
    EnvironmentCreationResult
  >,
  'getProfile' : ActorMethod<[], UserProfile>,
  'registerDevice' : ActorMethod<
    [DeviceRegistrationInput],
    DeviceRegistrationResult
  >,
  'registerGateway' : ActorMethod<
    [GatewayRegistrationInput],
    GatewayRegistrationResult
  >,
  'resetEnvironment' : ActorMethod<[], EnvironmentInfo>,
  'setEnvironment' : ActorMethod<[number], EnvironmentInfo>,
}
