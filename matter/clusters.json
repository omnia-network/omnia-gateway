{
  "3": {
    "name": {
      "_text": "Identify"
    },
    "domain": {
      "_text": "General"
    },
    "description": {
      "_text": "Attributes and commands for putting a device into Identification mode (e.g. flashing a light)."
    },
    "code": {
      "_text": "0x0003"
    },
    "define": {
      "_text": "IDENTIFY_CLUSTER"
    },
    "client": {
      "_attributes": {
        "tick": "false",
        "init": "false"
      },
      "_text": "true"
    },
    "server": {
      "_attributes": {
        "tick": "false",
        "init": "false"
      },
      "_text": "true"
    },
    "globalAttribute": {
      "_attributes": {
        "side": "either",
        "code": "0xFFFD",
        "value": "4"
      }
    },
    "attribute": [
      {
        "_attributes": {
          "side": "server",
          "code": "0x0000",
          "define": "IDENTIFY_TIME",
          "type": "INT16U",
          "writable": "true",
          "default": "0x0",
          "optional": "false"
        },
        "_text": "IdentifyTime"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0001",
          "define": "IDENTIFY_TYPE",
          "type": "ENUM8",
          "writable": "false",
          "default": "0x0",
          "optional": "false"
        },
        "_text": "IdentifyType"
      }
    ],
    "command": [
      {
        "_attributes": {
          "source": "client",
          "code": "0x00",
          "name": "Identify",
          "optional": "false"
        },
        "description": {
          "_text": "\n        Command description for Identify\n      "
        },
        "arg": {
          "_attributes": {
            "name": "IdentifyTime",
            "type": "INT16U"
          }
        },
        "access": {
          "_attributes": {
            "op": "invoke",
            "privilege": "manage"
          }
        }
      },
      {
        "_attributes": {
          "source": "client",
          "code": "0x40",
          "name": "TriggerEffect",
          "optional": "true"
        },
        "description": {
          "_text": "\n        Command description for TriggerEffect\n      "
        },
        "arg": [
          {
            "_attributes": {
              "name": "EffectIdentifier",
              "type": "IdentifyEffectIdentifier"
            }
          },
          {
            "_attributes": {
              "name": "EffectVariant",
              "type": "IdentifyEffectVariant"
            }
          }
        ],
        "access": {
          "_attributes": {
            "op": "invoke",
            "privilege": "manage"
          }
        }
      }
    ]
  },
  "4": {
    "name": {
      "_text": "Groups"
    },
    "domain": {
      "_text": "General"
    },
    "description": {
      "_text": "Attributes and commands for group configuration and manipulation."
    },
    "code": {
      "_text": "0x0004"
    },
    "define": {
      "_text": "GROUPS_CLUSTER"
    },
    "client": {
      "_attributes": {
        "init": "false",
        "tick": "false"
      },
      "_text": "true"
    },
    "server": {
      "_attributes": {
        "init": "false",
        "tick": "false"
      },
      "_text": "true"
    },
    "globalAttribute": {
      "_attributes": {
        "side": "either",
        "code": "0xFFFD",
        "value": "4"
      }
    },
    "attribute": {
      "_attributes": {
        "side": "server",
        "code": "0x0000",
        "define": "GROUP_NAME_SUPPORT",
        "type": "BITMAP8",
        "min": "0x00",
        "max": "0x80",
        "writable": "false",
        "optional": "false"
      },
      "_text": "NameSupport"
    },
    "_comment": " NAME_SUPPORT ",
    "command": [
      {
        "_attributes": {
          "source": "client",
          "code": "0x00",
          "name": "AddGroup",
          "response": "AddGroupResponse",
          "isFabricScoped": "true",
          "optional": "false",
          "cli": "zcl groups add"
        },
        "description": {
          "_text": "\n        Command description for AddGroup\n      "
        },
        "access": {
          "_attributes": {
            "op": "invoke",
            "role": "manage"
          }
        },
        "arg": [
          {
            "_attributes": {
              "name": "GroupID",
              "type": "group_id"
            }
          },
          {
            "_attributes": {
              "name": "GroupName",
              "type": "CHAR_STRING"
            }
          }
        ]
      },
      {
        "_attributes": {
          "source": "client",
          "code": "0x01",
          "name": "ViewGroup",
          "response": "ViewGroupResponse",
          "isFabricScoped": "true",
          "optional": "false",
          "cli": "zcl groups view"
        },
        "description": {
          "_text": "\n        Command description for ViewGroup\n      "
        },
        "arg": {
          "_attributes": {
            "name": "GroupID",
            "type": "group_id"
          }
        }
      },
      {
        "_attributes": {
          "source": "client",
          "code": "0x02",
          "name": "GetGroupMembership",
          "response": "GetGroupMembershipResponse",
          "cliFunctionName": "zclGroupsGetCommand",
          "isFabricScoped": "true",
          "optional": "false",
          "cli": "zcl groups get"
        },
        "description": {
          "_text": "\n        Command description for GetGroupMembership\n      "
        },
        "arg": {
          "_attributes": {
            "name": "GroupList",
            "type": "group_id",
            "array": "true"
          }
        }
      },
      {
        "_attributes": {
          "source": "client",
          "code": "0x03",
          "name": "RemoveGroup",
          "response": "RemoveGroupResponse",
          "isFabricScoped": "true",
          "optional": "false",
          "cli": "zcl groups remove"
        },
        "description": {
          "_text": "\n        Command description for RemoveGroup\n      "
        },
        "access": {
          "_attributes": {
            "op": "invoke",
            "role": "manage"
          }
        },
        "arg": {
          "_attributes": {
            "name": "GroupID",
            "type": "group_id"
          }
        }
      },
      {
        "_attributes": {
          "source": "client",
          "code": "0x04",
          "name": "RemoveAllGroups",
          "isFabricScoped": "true",
          "optional": "false",
          "cli": "zcl groups rmall"
        },
        "description": {
          "_text": "\n        Command description for RemoveAllGroups\n      "
        },
        "access": {
          "_attributes": {
            "op": "invoke",
            "role": "manage"
          }
        }
      },
      {
        "_attributes": {
          "source": "client",
          "code": "0x05",
          "name": "AddGroupIfIdentifying",
          "isFabricScoped": "true",
          "optional": "false",
          "cli": "zcl groups add-if-id"
        },
        "description": {
          "_text": "\n        Command description for AddGroupIfIdentifying\n      "
        },
        "access": {
          "_attributes": {
            "op": "invoke",
            "role": "manage"
          }
        },
        "arg": [
          {
            "_attributes": {
              "name": "GroupID",
              "type": "group_id"
            }
          },
          {
            "_attributes": {
              "name": "GroupName",
              "type": "CHAR_STRING"
            }
          }
        ]
      },
      {
        "_attributes": {
          "source": "server",
          "code": "0x00",
          "name": "AddGroupResponse",
          "optional": "false",
          "disableDefaultResponse": "true"
        },
        "description": {
          "_text": "\n        Command description for AddGroupResponse\n      "
        },
        "arg": [
          {
            "_attributes": {
              "name": "Status",
              "type": "ENUM8"
            }
          },
          {
            "_attributes": {
              "name": "GroupID",
              "type": "group_id"
            }
          }
        ]
      },
      {
        "_attributes": {
          "source": "server",
          "code": "0x01",
          "name": "ViewGroupResponse",
          "optional": "false",
          "disableDefaultResponse": "true"
        },
        "description": {
          "_text": "\n        Command description for ViewGroupResponse\n      "
        },
        "arg": [
          {
            "_attributes": {
              "name": "Status",
              "type": "ENUM8"
            }
          },
          {
            "_attributes": {
              "name": "GroupID",
              "type": "group_id"
            }
          },
          {
            "_attributes": {
              "name": "GroupName",
              "type": "CHAR_STRING"
            }
          }
        ]
      },
      {
        "_attributes": {
          "source": "server",
          "code": "0x02",
          "name": "GetGroupMembershipResponse",
          "optional": "false",
          "disableDefaultResponse": "true"
        },
        "description": {
          "_text": "\n        Command description for GetGroupMembershipResponse\n      "
        },
        "arg": [
          {
            "_attributes": {
              "name": "Capacity",
              "type": "INT8U",
              "isNullable": "true"
            }
          },
          {
            "_attributes": {
              "name": "GroupList",
              "type": "group_id",
              "array": "true"
            }
          }
        ]
      },
      {
        "_attributes": {
          "source": "server",
          "code": "0x03",
          "name": "RemoveGroupResponse",
          "optional": "false",
          "disableDefaultResponse": "true"
        },
        "description": {
          "_text": "\n        Command description for RemoveGroupResponse\n      "
        },
        "arg": [
          {
            "_attributes": {
              "name": "Status",
              "type": "ENUM8"
            }
          },
          {
            "_attributes": {
              "name": "GroupID",
              "type": "group_id"
            }
          }
        ]
      }
    ]
  },
  "5": {
    "name": {
      "_text": "Scenes"
    },
    "domain": {
      "_text": "General"
    },
    "description": {
      "_text": "Attributes and commands for scene configuration and manipulation."
    },
    "code": {
      "_text": "0x0005"
    },
    "define": {
      "_text": "SCENES_CLUSTER"
    },
    "client": {
      "_attributes": {
        "tick": "false",
        "init": "false"
      },
      "_text": "true"
    },
    "server": {
      "_attributes": {
        "tick": "false",
        "init": "false"
      },
      "_text": "true"
    },
    "globalAttribute": {
      "_attributes": {
        "side": "either",
        "code": "0xFFFD",
        "value": "4"
      }
    },
    "attribute": [
      {
        "_attributes": {
          "side": "server",
          "code": "0x0000",
          "define": "SCENE_COUNT",
          "type": "INT8U",
          "min": "0x00",
          "max": "0xFF",
          "writable": "false",
          "default": "0x00",
          "optional": "false"
        },
        "_text": "SceneCount"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0001",
          "define": "CURRENT_SCENE",
          "type": "INT8U",
          "min": "0x00",
          "max": "0xFF",
          "writable": "false",
          "default": "0x00",
          "optional": "false"
        },
        "_text": "CurrentScene"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0002",
          "define": "CURRENT_GROUP",
          "type": "group_id",
          "min": "0x0000",
          "max": "0xFFF7",
          "writable": "false",
          "default": "0x0000",
          "optional": "false"
        },
        "_text": "CurrentGroup"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0003",
          "define": "SCENE_VALID",
          "type": "BOOLEAN",
          "min": "0x00",
          "max": "0x01",
          "writable": "false",
          "default": "0x00",
          "optional": "false"
        },
        "_text": "SceneValid"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0004",
          "define": "SCENE_NAME_SUPPORT",
          "type": "BITMAP8",
          "min": "0x00",
          "max": "0x80",
          "writable": "false",
          "default": "0x00",
          "optional": "false"
        },
        "_text": "NameSupport"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0005",
          "define": "LAST_CONFIGURED_BY",
          "type": "node_id",
          "writable": "false",
          "isNullable": "true",
          "optional": "true"
        },
        "_text": "LastConfiguredBy"
      }
    ],
    "command": [
      {
        "_attributes": {
          "source": "client",
          "code": "0x00",
          "name": "AddScene",
          "response": "AddSceneResponse",
          "isFabricScoped": "true",
          "optional": "false",
          "cli": "chip scenes add"
        },
        "description": {
          "_text": "\n        Add a scene to the scene table. Extension field sets are supported, and are inputed as '{\"ClusterID\": VALUE, \"AttributeValueList\":[{\"AttributeId\": VALUE, \"AttributeValue\": VALUE}]}'\n      "
        },
        "arg": [
          {
            "_attributes": {
              "name": "GroupID",
              "type": "group_id"
            }
          },
          {
            "_attributes": {
              "name": "SceneID",
              "type": "INT8U"
            }
          },
          {
            "_attributes": {
              "name": "TransitionTime",
              "type": "INT16U"
            }
          },
          {
            "_attributes": {
              "name": "SceneName",
              "type": "CHAR_STRING"
            }
          },
          {
            "_attributes": {
              "name": "ExtensionFieldSets",
              "type": "ExtensionFieldSet",
              "array": "true"
            }
          }
        ],
        "access": {
          "_attributes": {
            "op": "invoke",
            "role": "manage"
          }
        }
      },
      {
        "_attributes": {
          "source": "client",
          "code": "0x01",
          "name": "ViewScene",
          "response": "ViewSceneResponse",
          "isFabricScoped": "true",
          "optional": "false",
          "cli": "chip scenes view"
        },
        "description": {
          "_text": "\n        Retrieves the requested scene entry from its Scene table.\n      "
        },
        "arg": [
          {
            "_attributes": {
              "name": "GroupID",
              "type": "group_id"
            }
          },
          {
            "_attributes": {
              "name": "SceneID",
              "type": "INT8U"
            }
          }
        ]
      },
      {
        "_attributes": {
          "source": "client",
          "code": "0x02",
          "name": "RemoveScene",
          "response": "RemoveSceneResponse",
          "isFabricScoped": "true",
          "optional": "false",
          "cli": "chip scenes remove"
        },
        "description": {
          "_text": "\n        Removes the requested scene entry, corresponding to the value of the GroupID field, from its Scene Table\n      "
        },
        "arg": [
          {
            "_attributes": {
              "name": "GroupID",
              "type": "group_id"
            }
          },
          {
            "_attributes": {
              "name": "SceneID",
              "type": "INT8U"
            }
          }
        ],
        "access": {
          "_attributes": {
            "op": "invoke",
            "role": "manage"
          }
        }
      },
      {
        "_attributes": {
          "source": "client",
          "code": "0x03",
          "name": "RemoveAllScenes",
          "response": "RemoveAllScenesResponse",
          "isFabricScoped": "true",
          "optional": "false",
          "cli": "chip scenes rmall"
        },
        "description": {
          "_text": "\n        Remove all scenes, corresponding to the value of the GroupID field, from its Scene Table\n      "
        },
        "arg": {
          "_attributes": {
            "name": "GroupID",
            "type": "group_id"
          }
        },
        "access": {
          "_attributes": {
            "op": "invoke",
            "role": "manage"
          }
        }
      },
      {
        "_attributes": {
          "source": "client",
          "code": "0x04",
          "name": "StoreScene",
          "response": "StoreSceneResponse",
          "isFabricScoped": "true",
          "optional": "false",
          "cli": "chip scenes store"
        },
        "description": {
          "_text": "\n        Adds the scene entry into its Scene Table along with all extension field sets corresponding to the current state of other clusters on the same endpoint\n      "
        },
        "arg": [
          {
            "_attributes": {
              "name": "GroupID",
              "type": "group_id"
            }
          },
          {
            "_attributes": {
              "name": "SceneID",
              "type": "INT8U"
            }
          }
        ],
        "access": {
          "_attributes": {
            "op": "invoke",
            "role": "manage"
          }
        }
      },
      {
        "_attributes": {
          "source": "client",
          "code": "0x05",
          "name": "RecallScene",
          "isFabricScoped": "true",
          "optional": "false",
          "cli": "chip scenes recall"
        },
        "description": {
          "_text": "\n        Set the attributes and corresponding state for each other cluster implemented on the endpoint accordingly to the resquested scene entry in the Scene Table\n      "
        },
        "arg": [
          {
            "_attributes": {
              "name": "GroupID",
              "type": "group_id"
            }
          },
          {
            "_attributes": {
              "name": "SceneID",
              "type": "INT8U"
            }
          },
          {
            "_attributes": {
              "name": "TransitionTime",
              "type": "INT16U",
              "optional": "true",
              "isNullable": "true"
            }
          }
        ]
      },
      {
        "_attributes": {
          "source": "client",
          "code": "0x06",
          "name": "GetSceneMembership",
          "response": "GetSceneMembershipResponse",
          "isFabricScoped": "true",
          "optional": "false",
          "cli": "chip scenes get"
        },
        "description": {
          "_text": "\n        Get an unused scene identifier when no commissioning tool is in the network, or for a commissioning tool to get the used scene identifiers within a certain group \n      "
        },
        "arg": {
          "_attributes": {
            "name": "GroupID",
            "type": "group_id"
          }
        }
      },
      {
        "_attributes": {
          "source": "client",
          "code": "0x40",
          "name": "EnhancedAddScene",
          "response": "EnhancedAddSceneResponse",
          "isFabricScoped": "true",
          "optional": "true",
          "cli": "chip scenes eadd"
        },
        "description": {
          "_text": "\n        Allows a scene to be added using a finer scene transition time than the AddScene command.\n      "
        },
        "arg": [
          {
            "_attributes": {
              "name": "GroupID",
              "type": "group_id"
            }
          },
          {
            "_attributes": {
              "name": "SceneID",
              "type": "INT8U"
            }
          },
          {
            "_attributes": {
              "name": "TransitionTime",
              "type": "INT16U"
            }
          },
          {
            "_attributes": {
              "name": "SceneName",
              "type": "CHAR_STRING"
            }
          },
          {
            "_attributes": {
              "name": "ExtensionFieldSets",
              "type": "ExtensionFieldSet",
              "array": "true"
            }
          }
        ]
      },
      {
        "_attributes": {
          "source": "client",
          "code": "0x41",
          "name": "EnhancedViewScene",
          "response": "EnhancedViewSceneResponse",
          "isFabricScoped": "true",
          "optional": "true",
          "noDefaultImplementation": "true",
          "cli": "chip scenes eview"
        },
        "description": {
          "_text": "\n        Allows a scene to be retrieved using a finer scene transition time than the ViewScene command\n      "
        },
        "arg": [
          {
            "_attributes": {
              "name": "GroupID",
              "type": "group_id"
            }
          },
          {
            "_attributes": {
              "name": "SceneID",
              "type": "INT8U"
            }
          }
        ]
      },
      {
        "_attributes": {
          "source": "client",
          "code": "0x42",
          "name": "CopyScene",
          "response": "CopySceneResponse",
          "isFabricScoped": "true",
          "optional": "true",
          "cli": "chip scenes copy"
        },
        "description": {
          "_text": "\n        Allows a client to efficiently copy scenes from one group/scene identifier pair to another group/scene identifier pair.\n      "
        },
        "arg": [
          {
            "_attributes": {
              "name": "Mode",
              "type": "ScenesCopyMode"
            }
          },
          {
            "_attributes": {
              "name": "GroupIdentifierFrom",
              "type": "group_id"
            }
          },
          {
            "_attributes": {
              "name": "SceneIdentifierFrom",
              "type": "INT8U"
            }
          },
          {
            "_attributes": {
              "name": "GroupIdentifierTo",
              "type": "group_id"
            }
          },
          {
            "_attributes": {
              "name": "SceneIdentifierTo",
              "type": "INT8U"
            }
          }
        ]
      },
      {
        "_attributes": {
          "source": "server",
          "code": "0x00",
          "name": "AddSceneResponse",
          "optional": "false",
          "disableDefaultResponse": "true"
        },
        "description": {
          "_text": "\n        The command is generated in response to a received unicast AddScene command,\n      "
        },
        "arg": [
          {
            "_attributes": {
              "name": "Status",
              "type": "ENUM8"
            }
          },
          {
            "_attributes": {
              "name": "GroupID",
              "type": "group_id"
            }
          },
          {
            "_attributes": {
              "name": "SceneID",
              "type": "INT8U"
            }
          }
        ]
      },
      {
        "_attributes": {
          "source": "server",
          "code": "0x01",
          "name": "ViewSceneResponse",
          "optional": "false",
          "disableDefaultResponse": "true"
        },
        "description": {
          "_text": "\n        The command is generated in response to a received unicast ViewScene command \n      "
        },
        "arg": [
          {
            "_attributes": {
              "name": "Status",
              "type": "ENUM8"
            }
          },
          {
            "_attributes": {
              "name": "GroupID",
              "type": "group_id"
            }
          },
          {
            "_attributes": {
              "name": "SceneID",
              "type": "INT8U"
            }
          },
          {
            "_attributes": {
              "name": "TransitionTime",
              "type": "INT16U",
              "optional": "true"
            }
          },
          {
            "_attributes": {
              "name": "SceneName",
              "type": "CHAR_STRING",
              "optional": "true"
            }
          },
          {
            "_attributes": {
              "name": "ExtensionFieldSets",
              "type": "ExtensionFieldSet",
              "array": "true",
              "optional": "true"
            }
          }
        ]
      },
      {
        "_attributes": {
          "source": "server",
          "code": "0x02",
          "name": "RemoveSceneResponse",
          "optional": "false",
          "disableDefaultResponse": "true"
        },
        "description": {
          "_text": "\n        The command is generated in response to a received unicast RemoveScene command\n      "
        },
        "arg": [
          {
            "_attributes": {
              "name": "Status",
              "type": "ENUM8"
            }
          },
          {
            "_attributes": {
              "name": "GroupID",
              "type": "group_id"
            }
          },
          {
            "_attributes": {
              "name": "SceneID",
              "type": "INT8U"
            }
          }
        ]
      },
      {
        "_attributes": {
          "source": "server",
          "code": "0x03",
          "name": "RemoveAllScenesResponse",
          "optional": "false",
          "disableDefaultResponse": "true"
        },
        "description": {
          "_text": "\n        The command is generated in response to a received unicast RemoveAllScenes command\n      "
        },
        "arg": [
          {
            "_attributes": {
              "name": "Status",
              "type": "ENUM8"
            }
          },
          {
            "_attributes": {
              "name": "GroupID",
              "type": "group_id"
            }
          }
        ]
      },
      {
        "_attributes": {
          "source": "server",
          "code": "0x04",
          "name": "StoreSceneResponse",
          "optional": "false",
          "disableDefaultResponse": "true"
        },
        "description": {
          "_text": "\n        The command is generated in response to a received unicast StoreScene command\n      "
        },
        "arg": [
          {
            "_attributes": {
              "name": "Status",
              "type": "ENUM8"
            }
          },
          {
            "_attributes": {
              "name": "GroupID",
              "type": "group_id"
            }
          },
          {
            "_attributes": {
              "name": "SceneID",
              "type": "INT8U"
            }
          }
        ]
      },
      {
        "_attributes": {
          "source": "server",
          "code": "0x06",
          "name": "GetSceneMembershipResponse",
          "optional": "false",
          "disableDefaultResponse": "true"
        },
        "description": {
          "_text": "\n        The command is generated in response to a received unicast GetSceneMembership command\n      "
        },
        "arg": [
          {
            "_attributes": {
              "name": "Status",
              "type": "ENUM8"
            }
          },
          {
            "_attributes": {
              "name": "Capacity",
              "type": "INT8U",
              "isNullable": "true"
            }
          },
          {
            "_attributes": {
              "name": "GroupID",
              "type": "group_id"
            }
          },
          {
            "_attributes": {
              "name": "SceneList",
              "type": "INT8U",
              "array": "true",
              "optional": "true"
            }
          }
        ]
      },
      {
        "_attributes": {
          "source": "server",
          "code": "0x40",
          "name": "EnhancedAddSceneResponse",
          "optional": "true",
          "disableDefaultResponse": "true"
        },
        "description": {
          "_text": "\n        The command is generated in response to a received unicast EnhancedAddScene command\n      "
        },
        "arg": [
          {
            "_attributes": {
              "name": "Status",
              "type": "ENUM8"
            }
          },
          {
            "_attributes": {
              "name": "GroupID",
              "type": "group_id"
            }
          },
          {
            "_attributes": {
              "name": "SceneID",
              "type": "INT8U"
            }
          }
        ]
      },
      {
        "_attributes": {
          "source": "server",
          "code": "0x41",
          "name": "EnhancedViewSceneResponse",
          "optional": "true",
          "disableDefaultResponse": "true"
        },
        "description": {
          "_text": "\n        The command is generated in response to a received unicast EnhancedViewScene command\n      "
        },
        "arg": [
          {
            "_attributes": {
              "name": "Status",
              "type": "ENUM8"
            }
          },
          {
            "_attributes": {
              "name": "GroupID",
              "type": "group_Id"
            }
          },
          {
            "_attributes": {
              "name": "SceneID",
              "type": "INT8U"
            }
          },
          {
            "_attributes": {
              "name": "TransitionTime",
              "type": "INT16U",
              "optional": "true"
            }
          },
          {
            "_attributes": {
              "name": "SceneName",
              "type": "CHAR_STRING",
              "optional": "true"
            }
          },
          {
            "_attributes": {
              "name": "ExtensionFieldSets",
              "type": "ExtensionFieldSet",
              "array": "true",
              "optional": "true"
            }
          }
        ]
      },
      {
        "_attributes": {
          "source": "server",
          "code": "0x42",
          "name": "CopySceneResponse",
          "optional": "true",
          "disableDefaultResponse": "true"
        },
        "description": {
          "_text": "\n        The command is generated in response to a received unicast CopyScene command\n      "
        },
        "arg": [
          {
            "_attributes": {
              "name": "Status",
              "type": "ENUM8"
            }
          },
          {
            "_attributes": {
              "name": "GroupIdentifierFrom",
              "type": "group_Id"
            }
          },
          {
            "_attributes": {
              "name": "SceneIdentifierFrom",
              "type": "INT8U"
            }
          }
        ]
      }
    ]
  },
  "6": {
    "name": {
      "_text": "On/Off"
    },
    "domain": {
      "_text": "General"
    },
    "code": {
      "_text": "0x0006"
    },
    "define": {
      "_text": "ON_OFF_CLUSTER"
    },
    "description": {
      "_text": "Attributes and commands for switching devices between 'On' and 'Off' states."
    },
    "globalAttribute": {
      "_attributes": {
        "side": "either",
        "code": "0xFFFD",
        "value": "4"
      }
    },
    "attribute": [
      {
        "_attributes": {
          "side": "server",
          "code": "0x0000",
          "define": "ON_OFF",
          "type": "boolean",
          "default": "0",
          "reportable": "true"
        },
        "_text": "OnOff"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x4000",
          "define": "GLOBAL_SCENE_CONTROL",
          "type": "boolean",
          "default": "1",
          "optional": "true"
        },
        "_text": "GlobalSceneControl"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x4001",
          "define": "ON_TIME",
          "type": "int16u",
          "default": "0",
          "writable": "true",
          "optional": "true"
        },
        "_text": "OnTime"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x4002",
          "define": "OFF_WAIT_TIME",
          "type": "int16u",
          "default": "0",
          "writable": "true",
          "optional": "true"
        },
        "_text": "OffWaitTime"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x4003",
          "define": "START_UP_ON_OFF",
          "type": "OnOffStartUpOnOff",
          "min": "0",
          "max": "2",
          "isNullable": "true",
          "writable": "true",
          "optional": "true"
        },
        "description": {
          "_text": "StartUpOnOff"
        },
        "access": [
          {
            "_attributes": {
              "op": "read",
              "privilege": "view"
            }
          },
          {
            "_attributes": {
              "op": "write",
              "privilege": "manage"
            }
          }
        ]
      }
    ],
    "command": [
      {
        "_attributes": {
          "source": "client",
          "code": "0x00",
          "name": "Off",
          "optional": "false"
        },
        "description": {
          "_text": "On receipt of this command, a device SHALL enter its ‘Off’ state. This state is device dependent, but it is recommended that it is used for power off or similar functions. On receipt of the Off command, the OnTime attribute SHALL be set to 0."
        }
      },
      {
        "_attributes": {
          "source": "client",
          "code": "0x01",
          "name": "On",
          "optional": "false"
        },
        "description": {
          "_text": "On receipt of this command, a device SHALL enter its ‘On’ state. This state is device dependent, but it is recommended that it is used for power on or similar functions. On receipt of the On command, if the value of the OnTime attribute is equal to 0, the device SHALL set the OffWaitTime attribute to 0."
        }
      },
      {
        "_attributes": {
          "source": "client",
          "code": "0x02",
          "name": "Toggle",
          "optional": "false"
        },
        "description": {
          "_text": "On receipt of this command, if a device is in its ‘Off’ state it SHALL enter its ‘On’ state. Otherwise, if it is in its ‘On’ state it SHALL enter its ‘Off’ state. On receipt of the Toggle command, if the value of the OnOff attribute is equal to FALSE and if the value of the OnTime attribute is equal to 0, the device SHALL set the OffWaitTime attribute to 0. If the value of the OnOff attribute is equal to TRUE, the OnTime attribute SHALL be set to 0."
        }
      },
      {
        "_attributes": {
          "source": "client",
          "code": "0x40",
          "name": "OffWithEffect",
          "optional": "true"
        },
        "description": {
          "_text": "The OffWithEffect command allows devices to be turned off using enhanced ways of fading."
        },
        "arg": [
          {
            "_attributes": {
              "name": "EffectIdentifier",
              "type": "OnOffEffectIdentifier"
            }
          },
          {
            "_attributes": {
              "name": "EffectVariant",
              "type": "OnOffDelayedAllOffEffectVariant"
            }
          }
        ]
      },
      {
        "_attributes": {
          "source": "client",
          "code": "0x41",
          "name": "OnWithRecallGlobalScene",
          "optional": "true"
        },
        "description": {
          "_text": "The OnWithRecallGlobalScene command allows the recall of the settings when the device was turned off."
        }
      },
      {
        "_attributes": {
          "source": "client",
          "code": "0x42",
          "name": "OnWithTimedOff",
          "optional": "true"
        },
        "description": {
          "_text": "The OnWithTimedOff command allows devices to be turned on for a specific duration with a guarded off duration so that SHOULD the device be subsequently switched off, further OnWithTimedOff commands, received during this time, are prevented from turning the devices back on."
        },
        "arg": [
          {
            "_attributes": {
              "name": "OnOffControl",
              "type": "OnOffControl"
            }
          },
          {
            "_attributes": {
              "name": "OnTime",
              "type": "int16u"
            }
          },
          {
            "_attributes": {
              "name": "OffWaitTime",
              "type": "int16u"
            }
          }
        ],
        "_comment": [" min:0 max:0xfe ", " min:0 max:0xfe "]
      }
    ]
  },
  "8": {
    "name": {
      "_text": "Level Control"
    },
    "domain": {
      "_text": "General"
    },
    "description": {
      "_text": "Attributes and commands for controlling devices that can be set to a level between fully 'On' and fully 'Off.'"
    },
    "code": {
      "_text": "0x0008"
    },
    "define": {
      "_text": "LEVEL_CONTROL_CLUSTER"
    },
    "client": {
      "_attributes": {
        "tick": "false",
        "init": "false"
      },
      "_text": "true"
    },
    "server": {
      "_attributes": {
        "tick": "false",
        "init": "false"
      },
      "_text": "true"
    },
    "globalAttribute": {
      "_attributes": {
        "side": "either",
        "code": "0xFFFD",
        "value": "5"
      }
    },
    "attribute": [
      {
        "_attributes": {
          "side": "server",
          "code": "0x0000",
          "define": "CURRENT_LEVEL",
          "type": "INT8U",
          "isNullable": "true",
          "writable": "false",
          "default": "0x00",
          "optional": "false"
        },
        "_text": "CurrentLevel"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0001",
          "define": "LEVEL_CONTROL_REMAINING_TIME",
          "type": "INT16U",
          "min": "0x0000",
          "max": "0xFFFF",
          "writable": "false",
          "default": "0x0000",
          "optional": "true"
        },
        "_text": "RemainingTime"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0002",
          "define": "MINIMUM_LEVEL",
          "type": "INT8U",
          "min": "0x00",
          "max": "0xFF",
          "writable": "false",
          "default": "0x00",
          "optional": "true"
        },
        "_text": "MinLevel"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0003",
          "define": "MAXIMUM_LEVEL",
          "type": "INT8U",
          "min": "0x00",
          "max": "0xFF",
          "writable": "false",
          "default": "0xFE",
          "optional": "true"
        },
        "_text": "MaxLevel"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0004",
          "define": "CURRENT_FREQUENCY",
          "type": "INT16U",
          "min": "0x0000",
          "max": "0xFFFF",
          "writable": "false",
          "default": "0x0000",
          "optional": "true"
        },
        "_text": "CurrentFrequency"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0005",
          "define": "MIN_FREQUENCY",
          "type": "INT16U",
          "min": "0x0000",
          "max": "0xFFFF",
          "writable": "false",
          "default": "0x0000",
          "optional": "true"
        },
        "_text": "MinFrequency"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0006",
          "define": "MAX_FREQUENCY",
          "type": "INT16U",
          "min": "0x0000",
          "max": "0xFFFF",
          "writable": "false",
          "default": "0x0000",
          "optional": "true"
        },
        "_text": "MaxFrequency"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0010",
          "define": "ON_OFF_TRANSITION_TIME",
          "type": "INT16U",
          "writable": "true",
          "default": "0x0000",
          "optional": "true"
        },
        "_text": "OnOffTransitionTime"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0011",
          "define": "ON_LEVEL",
          "type": "INT8U",
          "isNullable": "true",
          "writable": "true",
          "optional": "false"
        },
        "_text": "OnLevel"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0012",
          "define": "ON_TRANSITION_TIME",
          "type": "INT16U",
          "isNullable": "true",
          "writable": "true",
          "optional": "true"
        },
        "_text": "OnTransitionTime"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0013",
          "define": "OFF_TRANSITION_TIME",
          "type": "INT16U",
          "isNullable": "true",
          "writable": "true",
          "optional": "true"
        },
        "_text": "OffTransitionTime"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0014",
          "define": "DEFAULT_MOVE_RATE",
          "type": "INT8U",
          "isNullable": "true",
          "writable": "true",
          "optional": "true"
        },
        "_text": "DefaultMoveRate"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x000F",
          "define": "OPTIONS",
          "type": "LevelControlOptions",
          "min": "0x00",
          "max": "0x03",
          "writable": "true",
          "default": "0x00",
          "optional": "false"
        },
        "_text": "Options"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x4000",
          "define": "START_UP_CURRENT_LEVEL",
          "type": "INT8U",
          "isNullable": "true",
          "writable": "true",
          "optional": "true"
        },
        "description": {
          "_text": "StartUpCurrentLevel"
        },
        "access": [
          {
            "_attributes": {
              "op": "read",
              "role": "view"
            }
          },
          {
            "_attributes": {
              "op": "write",
              "role": "manage"
            }
          }
        ]
      }
    ],
    "command": [
      {
        "_attributes": {
          "source": "client",
          "code": "0x00",
          "name": "MoveToLevel",
          "optional": "false",
          "cli": "zcl level-control mv-to-level"
        },
        "description": {
          "_text": "\n        Command description for MoveToLevel\n      "
        },
        "arg": [
          {
            "_attributes": {
              "name": "Level",
              "type": "INT8U"
            }
          },
          {
            "_attributes": {
              "name": "TransitionTime",
              "type": "INT16U",
              "isNullable": "true"
            }
          },
          {
            "_attributes": {
              "name": "OptionsMask",
              "type": "LevelControlOptions"
            }
          },
          {
            "_attributes": {
              "name": "OptionsOverride",
              "type": "LevelControlOptions"
            }
          }
        ]
      },
      {
        "_attributes": {
          "source": "client",
          "code": "0x01",
          "name": "Move",
          "optional": "false",
          "cli": "zcl level-control move"
        },
        "description": {
          "_text": "\n        Command description for Move\n      "
        },
        "arg": [
          {
            "_attributes": {
              "name": "MoveMode",
              "type": "MoveMode"
            }
          },
          {
            "_attributes": {
              "name": "Rate",
              "type": "INT8U",
              "isNullable": "true"
            }
          },
          {
            "_attributes": {
              "name": "OptionsMask",
              "type": "LevelControlOptions"
            }
          },
          {
            "_attributes": {
              "name": "OptionsOverride",
              "type": "LevelControlOptions"
            }
          }
        ]
      },
      {
        "_attributes": {
          "source": "client",
          "code": "0x02",
          "name": "Step",
          "optional": "false",
          "cli": "zcl level-control step"
        },
        "description": {
          "_text": "\n        Command description for Step\n      "
        },
        "arg": [
          {
            "_attributes": {
              "name": "StepMode",
              "type": "StepMode"
            }
          },
          {
            "_attributes": {
              "name": "StepSize",
              "type": "INT8U"
            }
          },
          {
            "_attributes": {
              "name": "TransitionTime",
              "type": "INT16U",
              "isNullable": "true"
            }
          },
          {
            "_attributes": {
              "name": "OptionsMask",
              "type": "LevelControlOptions"
            }
          },
          {
            "_attributes": {
              "name": "OptionsOverride",
              "type": "LevelControlOptions"
            }
          }
        ]
      },
      {
        "_attributes": {
          "source": "client",
          "code": "0x03",
          "name": "Stop",
          "optional": "false",
          "cli": "zcl level-control stop"
        },
        "description": {
          "_text": "\n        Command description for Stop\n      "
        },
        "arg": [
          {
            "_attributes": {
              "name": "OptionsMask",
              "type": "LevelControlOptions"
            }
          },
          {
            "_attributes": {
              "name": "OptionsOverride",
              "type": "LevelControlOptions"
            }
          }
        ]
      },
      {
        "_attributes": {
          "source": "client",
          "code": "0x04",
          "name": "MoveToLevelWithOnOff",
          "optional": "false",
          "cli": "zcl level-control o-mv-to-level"
        },
        "description": {
          "_text": "\n        Command description for MoveToLevelWithOnOff\n      "
        },
        "arg": [
          {
            "_attributes": {
              "name": "Level",
              "type": "INT8U"
            }
          },
          {
            "_attributes": {
              "name": "TransitionTime",
              "type": "INT16U",
              "isNullable": "true"
            }
          },
          {
            "_attributes": {
              "name": "OptionsMask",
              "type": "LevelControlOptions"
            }
          },
          {
            "_attributes": {
              "name": "OptionsOverride",
              "type": "LevelControlOptions"
            }
          }
        ]
      },
      {
        "_attributes": {
          "source": "client",
          "code": "0x05",
          "name": "MoveWithOnOff",
          "optional": "false",
          "cli": "zcl level-control o-move"
        },
        "description": {
          "_text": "\n        Command description for MoveWithOnOff\n      "
        },
        "arg": [
          {
            "_attributes": {
              "name": "MoveMode",
              "type": "MoveMode"
            }
          },
          {
            "_attributes": {
              "name": "Rate",
              "type": "INT8U",
              "isNullable": "true"
            }
          },
          {
            "_attributes": {
              "name": "OptionsMask",
              "type": "LevelControlOptions"
            }
          },
          {
            "_attributes": {
              "name": "OptionsOverride",
              "type": "LevelControlOptions"
            }
          }
        ]
      },
      {
        "_attributes": {
          "source": "client",
          "code": "0x06",
          "name": "StepWithOnOff",
          "optional": "false",
          "cli": "zcl level-control o-step"
        },
        "description": {
          "_text": "\n        Command description for StepWithOnOff\n      "
        },
        "arg": [
          {
            "_attributes": {
              "name": "StepMode",
              "type": "StepMode"
            }
          },
          {
            "_attributes": {
              "name": "StepSize",
              "type": "INT8U"
            }
          },
          {
            "_attributes": {
              "name": "TransitionTime",
              "type": "INT16U",
              "isNullable": "true"
            }
          },
          {
            "_attributes": {
              "name": "OptionsMask",
              "type": "LevelControlOptions"
            }
          },
          {
            "_attributes": {
              "name": "OptionsOverride",
              "type": "LevelControlOptions"
            }
          }
        ]
      },
      {
        "_attributes": {
          "source": "client",
          "code": "0x07",
          "name": "StopWithOnOff",
          "optional": "false",
          "cli": "zcl level-control o-stop"
        },
        "description": {
          "_text": "\n        Command description for StopWithOnOff\n      "
        },
        "arg": [
          {
            "_attributes": {
              "name": "OptionsMask",
              "type": "LevelControlOptions"
            }
          },
          {
            "_attributes": {
              "name": "OptionsOverride",
              "type": "LevelControlOptions"
            }
          }
        ]
      },
      {
        "_attributes": {
          "source": "client",
          "code": "0x08",
          "name": "MoveToClosestFrequency",
          "optional": "true"
        },
        "description": {
          "_text": "\n        Change the currrent frequency to the provided one, or a close\n        approximation if the exact provided one is not possible.\n      "
        },
        "arg": {
          "_attributes": {
            "name": "Frequency",
            "type": "INT16U"
          }
        }
      }
    ]
  },
  "28": {
    "domain": {
      "_text": "General"
    },
    "name": {
      "_text": "Pulse Width Modulation"
    },
    "code": {
      "_text": "0x001c"
    },
    "define": {
      "_text": "PWM_CLUSTER"
    },
    "description": {
      "_text": "Cluster to control pulse width modulation"
    }
  },
  "29": {
    "domain": {
      "_text": "General"
    },
    "name": {
      "_text": "Descriptor"
    },
    "code": {
      "_text": "0x001d"
    },
    "define": {
      "_text": "DESCRIPTOR_CLUSTER"
    },
    "description": {
      "_text": "The Descriptor Cluster is meant to replace the support from the Zigbee Device Object (ZDO) for describing a node, its endpoints and clusters."
    },
    "attribute": [
      {
        "_attributes": {
          "side": "server",
          "code": "0x0000",
          "define": "DEVICE_LIST",
          "type": "ARRAY",
          "entryType": "DeviceTypeStruct",
          "writable": "false",
          "optional": "false"
        },
        "_text": "DeviceTypeList"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0001",
          "define": "SERVER_LIST",
          "type": "ARRAY",
          "entryType": "CLUSTER_ID",
          "writable": "false",
          "optional": "false"
        },
        "_text": "ServerList"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0002",
          "define": "CLIENT_LIST",
          "type": "ARRAY",
          "entryType": "CLUSTER_ID",
          "writable": "false",
          "optional": "false"
        },
        "_text": "ClientList"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0003",
          "define": "PARTS_LIST",
          "type": "ARRAY",
          "entryType": "ENDPOINT_NO",
          "writable": "false",
          "optional": "false"
        },
        "_text": "PartsList"
      }
    ]
  },
  "30": {
    "domain": {
      "_text": "General"
    },
    "name": {
      "_text": "Binding"
    },
    "code": {
      "_text": "0x001e"
    },
    "define": {
      "_text": "BINDING_CLUSTER"
    },
    "description": {
      "_text": "The Binding Cluster is meant to replace the support from the Zigbee Device Object (ZDO) for supporting the binding table."
    },
    "attribute": {
      "_attributes": {
        "side": "server",
        "code": "0x0000",
        "define": "BINDING_LIST",
        "type": "ARRAY",
        "entryType": "TargetStruct",
        "writable": "true",
        "optional": "false"
      },
      "_text": "Binding"
    }
  },
  "31": {
    "domain": {
      "_text": "General"
    },
    "name": {
      "_text": "Access Control"
    },
    "code": {
      "_text": "0x001F"
    },
    "define": {
      "_text": "ACCESS_CONTROL_CLUSTER"
    },
    "client": {
      "_attributes": {
        "init": "false",
        "tick": "false"
      },
      "_text": "true"
    },
    "server": {
      "_attributes": {
        "init": "false",
        "tick": "false"
      },
      "_text": "true"
    },
    "description": {
      "_text": "The Access Control Cluster exposes a data model view of a\n      Node's Access Control List (ACL), which codifies the rules used to manage\n      and enforce Access Control for the Node's endpoints and their associated\n      cluster instances."
    },
    "attribute": [
      {
        "_attributes": {
          "side": "server",
          "code": "0x0000",
          "define": "ACL",
          "type": "ARRAY",
          "entryType": "AccessControlEntryStruct",
          "writable": "true"
        },
        "description": {
          "_text": "ACL"
        },
        "access": [
          {
            "_attributes": {
              "op": "read",
              "privilege": "administer"
            }
          },
          {
            "_attributes": {
              "op": "write",
              "privilege": "administer"
            }
          },
          {
            "_attributes": {
              "modifier": "fabric-scoped"
            }
          }
        ]
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0001",
          "define": "EXTENSION",
          "type": "ARRAY",
          "entryType": "AccessControlExtensionStruct",
          "writable": "true",
          "optional": "true"
        },
        "description": {
          "_text": "Extension"
        },
        "access": [
          {
            "_attributes": {
              "op": "read",
              "privilege": "administer"
            }
          },
          {
            "_attributes": {
              "op": "write",
              "privilege": "administer"
            }
          },
          {
            "_attributes": {
              "modifier": "fabric-scoped"
            }
          }
        ]
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0002",
          "define": "SUBJECTS_PER_ACCESS_CONTROL_ENTRY",
          "type": "int16u",
          "writable": "false"
        },
        "description": {
          "_text": "SubjectsPerAccessControlEntry"
        },
        "access": {
          "_attributes": {
            "op": "read",
            "privilege": "view"
          }
        }
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0003",
          "define": "TARGETS_PER_ACCESS_CONTROL_ENTRY",
          "type": "int16u",
          "writable": "false"
        },
        "description": {
          "_text": "TargetsPerAccessControlEntry"
        },
        "access": {
          "_attributes": {
            "op": "read",
            "privilege": "view"
          }
        }
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0004",
          "define": "ACCESS_CONTROL_ENTRIES_PER_FABRIC",
          "type": "int16u",
          "writable": "false"
        },
        "description": {
          "_text": "AccessControlEntriesPerFabric"
        },
        "access": {
          "_attributes": {
            "op": "read",
            "privilege": "view"
          }
        }
      }
    ],
    "event": [
      {
        "_attributes": {
          "side": "server",
          "code": "0x0000",
          "name": "AccessControlEntryChanged",
          "priority": "info",
          "isFabricSensitive": "true",
          "optional": "false"
        },
        "description": {
          "_text": "The cluster SHALL send AccessControlEntryChanged events whenever its ACL attribute data is changed by an Administrator."
        },
        "field": [
          {
            "_attributes": {
              "id": "1",
              "name": "AdminNodeID",
              "type": "node_id",
              "isNullable": "true"
            }
          },
          {
            "_attributes": {
              "id": "2",
              "name": "AdminPasscodeID",
              "type": "INT16U",
              "isNullable": "true"
            }
          },
          {
            "_attributes": {
              "id": "3",
              "name": "ChangeType",
              "type": "ChangeTypeEnum"
            }
          },
          {
            "_attributes": {
              "id": "4",
              "name": "LatestValue",
              "type": "AccessControlEntryStruct",
              "isNullable": "true"
            }
          }
        ],
        "access": {
          "_attributes": {
            "op": "read",
            "privilege": "administer"
          }
        }
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0001",
          "name": "AccessControlExtensionChanged",
          "priority": "info",
          "isFabricSensitive": "true",
          "optional": "false"
        },
        "description": {
          "_text": "The cluster SHALL send AccessControlExtensionChanged events whenever its extension attribute data is changed by an Administrator."
        },
        "field": [
          {
            "_attributes": {
              "id": "1",
              "name": "AdminNodeID",
              "type": "node_id",
              "isNullable": "true"
            }
          },
          {
            "_attributes": {
              "id": "2",
              "name": "AdminPasscodeID",
              "type": "INT16U",
              "isNullable": "true"
            }
          },
          {
            "_attributes": {
              "id": "3",
              "name": "ChangeType",
              "type": "ChangeTypeEnum"
            }
          },
          {
            "_attributes": {
              "id": "4",
              "name": "LatestValue",
              "type": "AccessControlExtensionStruct",
              "isNullable": "true"
            }
          }
        ],
        "access": {
          "_attributes": {
            "op": "read",
            "privilege": "administer"
          }
        }
      }
    ]
  },
  "37": {
    "domain": {
      "_text": "General"
    },
    "name": {
      "_text": "Actions"
    },
    "code": {
      "_text": "0x0025"
    },
    "define": {
      "_text": "ACTIONS_CLUSTER"
    },
    "description": {
      "_text": "This cluster provides a standardized way for a Node (typically a Bridge, but could be any Node) to expose action information."
    },
    "attribute": [
      {
        "_attributes": {
          "side": "server",
          "code": "0x0000",
          "define": "ACTION_LIST",
          "type": "ARRAY",
          "entryType": "ActionStruct",
          "length": "256",
          "writable": "false",
          "optional": "false"
        },
        "_text": "ActionList"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0001",
          "define": "ENDPOINT_LIST",
          "type": "ARRAY",
          "entryType": "EndpointListStruct",
          "length": "256",
          "writable": "false",
          "optional": "false"
        },
        "_text": "EndpointLists"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0002",
          "define": "SETUP_URL",
          "type": "LONG_CHAR_STRING",
          "length": "512",
          "writable": "false",
          "optional": "true"
        },
        "_text": "SetupURL"
      }
    ],
    "command": [
      {
        "_attributes": {
          "source": "client",
          "code": "0x00",
          "name": "InstantAction",
          "optional": "true"
        },
        "description": {
          "_text": "This command triggers an action (state change) on the involved endpoints."
        },
        "arg": [
          {
            "_attributes": {
              "name": "ActionID",
              "type": "INT16U"
            }
          },
          {
            "_attributes": {
              "name": "InvokeID",
              "type": "INT32U",
              "optional": "true"
            }
          }
        ]
      },
      {
        "_attributes": {
          "source": "client",
          "code": "0x01",
          "name": "InstantActionWithTransition",
          "optional": "true"
        },
        "description": {
          "_text": "This command triggers an action (state change) on the involved endpoints, with a specified time to transition from the current state to the new state."
        },
        "arg": [
          {
            "_attributes": {
              "name": "ActionID",
              "type": "INT16U"
            }
          },
          {
            "_attributes": {
              "name": "InvokeID",
              "type": "INT32U",
              "optional": "true"
            }
          },
          {
            "_attributes": {
              "name": "TransitionTime",
              "type": "INT16U"
            }
          }
        ]
      },
      {
        "_attributes": {
          "source": "client",
          "code": "0x02",
          "name": "StartAction",
          "optional": "true"
        },
        "description": {
          "_text": "This command triggers the commencement of an action on the involved endpoints."
        },
        "arg": [
          {
            "_attributes": {
              "name": "ActionID",
              "type": "INT16U"
            }
          },
          {
            "_attributes": {
              "name": "InvokeID",
              "type": "INT32U",
              "optional": "true"
            }
          }
        ]
      },
      {
        "_attributes": {
          "source": "client",
          "code": "0x03",
          "name": "StartActionWithDuration",
          "optional": "true"
        },
        "description": {
          "_text": "This command triggers the commencement of an action (with a duration) on the involved endpoints."
        },
        "arg": [
          {
            "_attributes": {
              "name": "ActionID",
              "type": "INT16U"
            }
          },
          {
            "_attributes": {
              "name": "InvokeID",
              "type": "INT32U",
              "optional": "true"
            }
          },
          {
            "_attributes": {
              "name": "Duration",
              "type": "INT32U"
            }
          }
        ]
      },
      {
        "_attributes": {
          "source": "client",
          "code": "0x04",
          "name": "StopAction",
          "optional": "true"
        },
        "description": {
          "_text": "This command stops the ongoing action on the involved endpoints."
        },
        "arg": [
          {
            "_attributes": {
              "name": "ActionID",
              "type": "INT16U"
            }
          },
          {
            "_attributes": {
              "name": "InvokeID",
              "type": "INT32U",
              "optional": "true"
            }
          }
        ]
      },
      {
        "_attributes": {
          "source": "client",
          "code": "0x05",
          "name": "PauseAction",
          "optional": "true"
        },
        "description": {
          "_text": "This command pauses an ongoing action."
        },
        "arg": [
          {
            "_attributes": {
              "name": "ActionID",
              "type": "INT16U"
            }
          },
          {
            "_attributes": {
              "name": "InvokeID",
              "type": "INT32U",
              "optional": "true"
            }
          }
        ]
      },
      {
        "_attributes": {
          "source": "client",
          "code": "0x06",
          "name": "PauseActionWithDuration",
          "optional": "true"
        },
        "description": {
          "_text": "This command pauses an ongoing action with a duration."
        },
        "arg": [
          {
            "_attributes": {
              "name": "ActionID",
              "type": "INT16U"
            }
          },
          {
            "_attributes": {
              "name": "InvokeID",
              "type": "INT32U",
              "optional": "true"
            }
          },
          {
            "_attributes": {
              "name": "Duration",
              "type": "INT32U"
            }
          }
        ]
      },
      {
        "_attributes": {
          "source": "client",
          "code": "0x07",
          "name": "ResumeAction",
          "optional": "true"
        },
        "description": {
          "_text": "This command resumes a previously paused action."
        },
        "arg": [
          {
            "_attributes": {
              "name": "ActionID",
              "type": "INT16U"
            }
          },
          {
            "_attributes": {
              "name": "InvokeID",
              "type": "INT32U",
              "optional": "true"
            }
          }
        ]
      },
      {
        "_attributes": {
          "source": "client",
          "code": "0x08",
          "name": "EnableAction",
          "optional": "true"
        },
        "description": {
          "_text": "This command enables a certain action or automation."
        },
        "arg": [
          {
            "_attributes": {
              "name": "ActionID",
              "type": "INT16U"
            }
          },
          {
            "_attributes": {
              "name": "InvokeID",
              "type": "INT32U",
              "optional": "true"
            }
          }
        ]
      },
      {
        "_attributes": {
          "source": "client",
          "code": "0x09",
          "name": "EnableActionWithDuration",
          "optional": "true"
        },
        "description": {
          "_text": "This command enables a certain action or automation with a duration."
        },
        "arg": [
          {
            "_attributes": {
              "name": "ActionID",
              "type": "INT16U"
            }
          },
          {
            "_attributes": {
              "name": "InvokeID",
              "type": "INT32U",
              "optional": "true"
            }
          },
          {
            "_attributes": {
              "name": "Duration",
              "type": "INT32U"
            }
          }
        ]
      },
      {
        "_attributes": {
          "source": "client",
          "code": "0x0A",
          "name": "DisableAction",
          "optional": "true"
        },
        "description": {
          "_text": "This command disables a certain action or automation."
        },
        "arg": [
          {
            "_attributes": {
              "name": "ActionID",
              "type": "INT16U"
            }
          },
          {
            "_attributes": {
              "name": "InvokeID",
              "type": "INT32U",
              "optional": "true"
            }
          }
        ]
      },
      {
        "_attributes": {
          "source": "client",
          "code": "0x0B",
          "name": "DisableActionWithDuration",
          "optional": "true"
        },
        "description": {
          "_text": "This command disables a certain action or automation with a duration."
        },
        "arg": [
          {
            "_attributes": {
              "name": "ActionID",
              "type": "INT16U"
            }
          },
          {
            "_attributes": {
              "name": "InvokeID",
              "type": "INT32U",
              "optional": "true"
            }
          },
          {
            "_attributes": {
              "name": "Duration",
              "type": "INT32U"
            }
          }
        ]
      }
    ],
    "event": [
      {
        "_attributes": {
          "side": "server",
          "code": "0x00",
          "priority": "info",
          "name": "StateChanged",
          "optional": "false"
        },
        "description": {
          "_text": "This event SHALL be generated when there is a change in the Status of an ActionID."
        },
        "field": [
          {
            "_attributes": {
              "id": "0",
              "name": "ActionID",
              "type": "INT16U"
            }
          },
          {
            "_attributes": {
              "id": "1",
              "name": "InvokeID",
              "type": "INT32U"
            }
          },
          {
            "_attributes": {
              "id": "2",
              "name": "NewState",
              "type": "ActionStateEnum"
            }
          }
        ]
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x01",
          "priority": "info",
          "name": "ActionFailed",
          "optional": "false"
        },
        "description": {
          "_text": "This event SHALL be generated when there is some error which prevents the action from its normal planned execution."
        },
        "field": [
          {
            "_attributes": {
              "id": "0",
              "name": "ActionID",
              "type": "INT16U"
            }
          },
          {
            "_attributes": {
              "id": "1",
              "name": "InvokeID",
              "type": "INT32U"
            }
          },
          {
            "_attributes": {
              "id": "2",
              "name": "NewState",
              "type": "ActionStateEnum"
            }
          },
          {
            "_attributes": {
              "id": "3",
              "name": "Error",
              "type": "ActionErrorEnum"
            }
          }
        ]
      }
    ]
  },
  "40": {
    "_attributes": {
      "singleton": "true"
    },
    "name": {
      "_text": "Basic Information"
    },
    "domain": {
      "_text": "CHIP"
    },
    "code": {
      "_text": "0x0028"
    },
    "define": {
      "_text": "BASIC_INFORMATION_CLUSTER"
    },
    "description": {
      "_text": "This cluster provides attributes and events for determining basic information about Nodes, which supports both\n      Commissioning and operational determination of Node characteristics, such as Vendor ID, Product ID and serial number,\n      which apply to the whole Node. Also allows setting user device information such as location."
    },
    "globalAttribute": {
      "_attributes": {
        "side": "either",
        "code": "0xFFFD",
        "value": "1"
      }
    },
    "attribute": [
      {
        "_attributes": {
          "side": "server",
          "code": "0",
          "define": "DATA_MODEL_REVISION",
          "type": "int16u"
        },
        "_text": "DataModelRevision"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "1",
          "define": "VENDOR_NAME",
          "type": "char_string",
          "length": "32"
        },
        "_text": "VendorName"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "2",
          "define": "VENDOR_ID",
          "type": "vendor_id"
        },
        "_text": "VendorID"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "3",
          "define": "PRODUCT_NAME",
          "type": "char_string",
          "length": "32"
        },
        "_text": "ProductName"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "4",
          "define": "PRODUCT_ID",
          "type": "int16u"
        },
        "_text": "ProductID"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "5",
          "define": "NODE_LABEL",
          "type": "char_string",
          "length": "32",
          "default": "",
          "writable": "true"
        },
        "description": {
          "_text": "NodeLabel"
        },
        "access": [
          {
            "_attributes": {
              "op": "read",
              "privilege": "view"
            }
          },
          {
            "_attributes": {
              "op": "write",
              "privilege": "manage"
            }
          }
        ]
      },
      {
        "_attributes": {
          "side": "server",
          "code": "6",
          "define": "LOCATION",
          "type": "char_string",
          "length": "2",
          "default": "XX",
          "writable": "true"
        },
        "description": {
          "_text": "Location"
        },
        "access": [
          {
            "_attributes": {
              "op": "read",
              "privilege": "view"
            }
          },
          {
            "_attributes": {
              "op": "write",
              "privilege": "administer"
            }
          }
        ]
      },
      {
        "_attributes": {
          "side": "server",
          "code": "7",
          "define": "HARDWARE_VERSION",
          "type": "int16u",
          "default": "0"
        },
        "_text": "HardwareVersion"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "8",
          "define": "HARDWARE_VERSION_STRING",
          "type": "char_string",
          "minLength": "1",
          "length": "64"
        },
        "_text": "HardwareVersionString"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "9",
          "define": "SOFTWARE_VERSION",
          "type": "int32u",
          "default": "0"
        },
        "_text": "SoftwareVersion"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "10",
          "define": "SOFTWARE_VERSION_STRING",
          "type": "char_string",
          "minLength": "1",
          "length": "64"
        },
        "_text": "SoftwareVersionString"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "11",
          "define": "MANUFACTURING_DATE",
          "type": "char_string",
          "minLength": "8",
          "length": "16",
          "optional": "true"
        },
        "_text": "ManufacturingDate"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "12",
          "define": "PART_NUMBER",
          "type": "char_string",
          "length": "32",
          "optional": "true"
        },
        "_text": "PartNumber"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "13",
          "define": "PRODUCT_URL",
          "type": "long_char_string",
          "length": "256",
          "optional": "true"
        },
        "_text": "ProductURL"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "14",
          "define": "PRODUCT_LABEL",
          "type": "char_string",
          "length": "64",
          "optional": "true"
        },
        "_text": "ProductLabel"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "15",
          "define": "SERIAL_NUMBER",
          "type": "char_string",
          "length": "32",
          "optional": "true"
        },
        "_text": "SerialNumber"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "16",
          "define": "LOCAL_CONFIG_DISABLED",
          "type": "boolean",
          "default": "0",
          "writable": "true",
          "optional": "true"
        },
        "description": {
          "_text": "LocalConfigDisabled"
        },
        "access": [
          {
            "_attributes": {
              "op": "read",
              "privilege": "view"
            }
          },
          {
            "_attributes": {
              "op": "write",
              "privilege": "manage"
            }
          }
        ]
      },
      {
        "_attributes": {
          "side": "server",
          "code": "17",
          "define": "REACHABLE",
          "type": "boolean",
          "default": "1",
          "optional": "true"
        },
        "_text": "Reachable"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "18",
          "define": "UNIQUE_ID",
          "type": "char_string",
          "length": "32",
          "optional": "true"
        },
        "_text": "UniqueID"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "19",
          "define": "CAPABILITY_MINIMA",
          "type": "CapabilityMinimaStruct",
          "writable": "false"
        },
        "_text": "CapabilityMinima"
      }
    ],
    "event": [
      {
        "_attributes": {
          "side": "server",
          "code": "0x00",
          "name": "StartUp",
          "priority": "critical",
          "optional": "false"
        },
        "description": {
          "_text": "The StartUp event SHALL be emitted by a Node as soon as reasonable after completing a boot or reboot process."
        },
        "field": {
          "_attributes": {
            "id": "0",
            "name": "SoftwareVersion",
            "type": "INT32U"
          }
        }
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x01",
          "name": "ShutDown",
          "priority": "critical",
          "optional": "true"
        },
        "description": {
          "_text": "The ShutDown event SHOULD be emitted by a Node prior to any orderly shutdown sequence on a best-effort basis."
        }
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x02",
          "name": "Leave",
          "priority": "info",
          "optional": "true"
        },
        "description": {
          "_text": "The Leave event SHOULD be emitted by a Node prior to permanently leaving the Fabric."
        },
        "field": {
          "_attributes": {
            "id": "0",
            "name": "FabricIndex",
            "type": "fabric_idx"
          }
        }
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x03",
          "name": "ReachableChanged",
          "priority": "info",
          "optional": "true"
        },
        "description": {
          "_text": "This event (when supported) SHALL be generated when there is a change in the Reachable attribute."
        },
        "field": {
          "_attributes": {
            "id": "0",
            "name": "ReachableNewValue",
            "type": "boolean"
          }
        }
      }
    ]
  },
  "43": {
    "domain": {
      "_text": "General"
    },
    "name": {
      "_text": "Localization Configuration"
    },
    "code": {
      "_text": "0x002b"
    },
    "define": {
      "_text": "LOCALIZATION_CONFIGURATION_CLUSTER"
    },
    "client": {
      "_attributes": {
        "init": "false",
        "tick": "false"
      },
      "_text": "true"
    },
    "server": {
      "_attributes": {
        "init": "false",
        "tick": "false"
      },
      "_text": "true"
    },
    "description": {
      "_text": "Nodes should be expected to be deployed to any and all regions of the world. These global regions\n      may have differing common languages, units of measurements, and numerical formatting\n      standards. As such, Nodes that visually or audibly convey information need a mechanism by which\n      they can be configured to use a user’s preferred language, units, etc"
    },
    "_comment": " Base data types ",
    "attribute": [
      {
        "_attributes": {
          "side": "server",
          "code": "0x00",
          "define": "ACTIVE_LOCALE",
          "type": "CHAR_STRING",
          "length": "35",
          "writable": "true",
          "optional": "false"
        },
        "_text": "ActiveLocale"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x01",
          "define": "SUPPORTED_LOCALES",
          "type": "ARRAY",
          "entryType": "CHAR_STRING",
          "length": "254",
          "writable": "false",
          "optional": "false"
        },
        "_text": "SupportedLocales"
      }
    ]
  },
  "44": {
    "domain": {
      "_text": "General"
    },
    "name": {
      "_text": "Time Format Localization"
    },
    "code": {
      "_text": "0x002c"
    },
    "define": {
      "_text": "TIME_FORMAT_LOCALIZATION_CLUSTER"
    },
    "client": {
      "_attributes": {
        "init": "false",
        "tick": "false"
      },
      "_text": "true"
    },
    "server": {
      "_attributes": {
        "init": "false",
        "tick": "false"
      },
      "_text": "true"
    },
    "description": {
      "_text": "Nodes should be expected to be deployed to any and all regions of the world. These global regions\n      may have differing preferences for how dates and times are conveyed. As such, Nodes that visually\n      or audibly convey time information need a mechanism by which they can be configured to use a\n      user’s preferred format."
    },
    "_comment": " Base data types ",
    "attribute": [
      {
        "_attributes": {
          "side": "server",
          "code": "0x00",
          "define": "HOUR_FORMAT",
          "type": "HourFormat",
          "min": "0x00",
          "max": "0x01",
          "writable": "true",
          "optional": "false"
        },
        "_text": "HourFormat"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x01",
          "define": "ACTIVE_CALENDAR_TYPE",
          "type": "CalendarType",
          "writable": "true",
          "optional": "true"
        },
        "_text": "ActiveCalendarType"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x02",
          "define": "SUPPORTED_CALENDAR_TYPES",
          "type": "ARRAY",
          "entryType": "CalendarType",
          "writable": "false",
          "optional": "true"
        },
        "_text": "SupportedCalendarTypes"
      }
    ]
  },
  "45": {
    "domain": {
      "_text": "CHIP"
    },
    "name": {
      "_text": "Unit Localization"
    },
    "code": {
      "_text": "0x002d"
    },
    "define": {
      "_text": "UNIT_LOCALIZATION_CLUSTER"
    },
    "client": {
      "_attributes": {
        "init": "false",
        "tick": "false"
      },
      "_text": "true"
    },
    "server": {
      "_attributes": {
        "init": "false",
        "tick": "false"
      },
      "_text": "true"
    },
    "description": {
      "_text": "Nodes should be expected to be deployed to any and all regions of the world. These global regions\n      may have differing preferences for the units in which values are conveyed in communication to a\n      user. As such, Nodes that visually or audibly convey measurable values to the user need a\n      mechanism by which they can be configured to use a user’s preferred unit."
    },
    "globalAttribute": {
      "_attributes": {
        "side": "either",
        "code": "0xFFFD",
        "value": "1"
      }
    },
    "_comment": " Base data types ",
    "attribute": {
      "_attributes": {
        "side": "server",
        "code": "0x00",
        "define": "TEMPERATURE_UNIT",
        "type": "TempUnit",
        "min": "0",
        "max": "2",
        "writable": "true",
        "optional": "true"
      },
      "_text": "TemperatureUnit"
    }
  },
  "46": {
    "name": {
      "_text": "Power Source Configuration"
    },
    "domain": {
      "_text": "CHIP"
    },
    "description": {
      "_text": "This cluster is used to describe the configuration and capabilities of a Device's power system."
    },
    "code": {
      "_text": "0x002E"
    },
    "define": {
      "_text": "POWER_SOURCE_CONFIGURATION_CLUSTER"
    },
    "client": {
      "_attributes": {
        "init": "false",
        "tick": "false"
      },
      "_text": "true"
    },
    "server": {
      "_attributes": {
        "init": "false",
        "tick": "false"
      },
      "_text": "true"
    },
    "globalAttribute": {
      "_attributes": {
        "side": "either",
        "code": "0xFFFD",
        "value": "1"
      }
    },
    "attribute": {
      "_attributes": {
        "side": "server",
        "code": "0x0000",
        "define": "SOURCES",
        "type": "ARRAY",
        "entryType": "INT8U",
        "length": "6",
        "writable": "false",
        "optional": "false"
      },
      "_text": "Sources"
    }
  },
  "47": {
    "domain": {
      "_text": "CHIP"
    },
    "name": {
      "_text": "Power Source"
    },
    "code": {
      "_text": "0x002F"
    },
    "define": {
      "_text": "POWER_SOURCE_CLUSTER"
    },
    "client": {
      "_attributes": {
        "init": "false",
        "tick": "false"
      },
      "_text": "true"
    },
    "server": {
      "_attributes": {
        "init": "false",
        "tick": "false"
      },
      "_text": "true"
    },
    "description": {
      "_text": "This cluster is used to describe the configuration and capabilities of a physical power source that provides power to the Node."
    },
    "attribute": [
      {
        "_attributes": {
          "side": "server",
          "code": "0x0000",
          "define": "POWER_SOURCE_STATUS",
          "type": "PowerSourceStatus",
          "writable": "false"
        },
        "_text": "Status"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0001",
          "define": "POWER_SOURCE_ORDER",
          "type": "INT8U",
          "min": "0x00",
          "max": "0xFF",
          "writable": "false"
        },
        "_text": "Order"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0002",
          "define": "POWER_SOURCE_DESCRIPTION",
          "type": "CHAR_STRING",
          "length": "60",
          "writable": "false"
        },
        "_text": "Description"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0003",
          "define": "POWER_SOURCE_WIRED_ASSESSED_INPUT_VOLTAGE",
          "type": "INT32U",
          "min": "0x00000000",
          "max": "0xFFFFFFFF",
          "writable": "false",
          "optional": "true",
          "isNullable": "true"
        },
        "_text": "WiredAssessedInputVoltage"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0004",
          "define": "POWER_SOURCE_WIRED_ASSESSED_INPUT_FREQUENCY",
          "type": "INT16U",
          "min": "0x0000",
          "max": "0xFFFF",
          "writable": "false",
          "optional": "true",
          "isNullable": "true"
        },
        "_text": "WiredAssessedInputFrequency"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0005",
          "define": "POWER_SOURCE_WIRED_CURRENT_TYPE",
          "type": "WiredCurrentType",
          "writable": "false",
          "optional": "true"
        },
        "_text": "WiredCurrentType"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0006",
          "define": "POWER_SOURCE_WIRED_ASSESSED_CURRENT",
          "type": "INT32U",
          "min": "0x00000000",
          "max": "0xFFFFFFFF",
          "writable": "false",
          "optional": "true",
          "isNullable": "true"
        },
        "_text": "WiredAssessedCurrent"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0007",
          "define": "POWER_SOURCE_WIRED_NOMINAL_VOLTAGE",
          "type": "INT32U",
          "min": "0x00000000",
          "max": "0xFFFFFFFF",
          "writable": "false",
          "optional": "true"
        },
        "_text": "WiredNominalVoltage"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0008",
          "define": "POWER_SOURCE_WIRED_MAXIMUM_CURRENT",
          "type": "INT32U",
          "min": "0x00000000",
          "max": "0xFFFFFFFF",
          "writable": "false",
          "optional": "true"
        },
        "_text": "WiredMaximumCurrent"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0009",
          "define": "POWER_SOURCE_WIRED_PRESENT",
          "type": "BOOLEAN",
          "writable": "false",
          "optional": "true"
        },
        "_text": "WiredPresent"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x000A",
          "define": "POWER_SOURCE_ACTIVE_WIRED_FAULTS",
          "type": "ARRAY",
          "entryType": "WiredFault",
          "length": "8",
          "writable": "false",
          "optional": "true"
        },
        "_text": "ActiveWiredFaults"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x000B",
          "define": "POWER_SOURCE_BAT_VOLTAGE",
          "type": "INT32U",
          "min": "0x00000000",
          "max": "0xFFFFFFFF",
          "writable": "false",
          "optional": "true",
          "isNullable": "true"
        },
        "_text": "BatVoltage"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x000C",
          "define": "POWER_SOURCE_BAT_PERCENT_REMAINING",
          "type": "INT8U",
          "min": "0x00",
          "max": "0xC8",
          "writable": "false",
          "optional": "true",
          "isNullable": "true"
        },
        "_text": "BatPercentRemaining"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x000D",
          "define": "POWER_SOURCE_BAT_TIME_REMAINING",
          "type": "INT32U",
          "min": "0x00000000",
          "max": "0xFFFFFFFF",
          "writable": "false",
          "optional": "true",
          "isNullable": "true"
        },
        "_text": "BatTimeRemaining"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x000E",
          "define": "POWER_SOURCE_BAT_CHARGE_LEVEL",
          "type": "BatChargeLevel",
          "writable": "false",
          "optional": "true"
        },
        "_text": "BatChargeLevel"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x000F",
          "define": "POWER_SOURCE_BAT_REPLACEMENT_NEEDED",
          "type": "BOOLEAN",
          "writable": "false",
          "optional": "true"
        },
        "_text": "BatReplacementNeeded"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0010",
          "define": "POWER_SOURCE_BAT_REPLACEABILITY",
          "type": "BatReplaceability",
          "writable": "false",
          "optional": "true"
        },
        "_text": "BatReplaceability"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0011",
          "define": "POWER_SOURCE_BAT_PRESENT",
          "type": "BOOLEAN",
          "writable": "false",
          "optional": "true"
        },
        "_text": "BatPresent"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0012",
          "define": "POWER_SOURCE_ACTIVE_BAT_FAULTS",
          "type": "ARRAY",
          "entryType": "BatFault",
          "length": "8",
          "writable": "false",
          "optional": "true"
        },
        "_text": "ActiveBatFaults"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0013",
          "define": "POWER_SOURCE_BAT_REPLACEMENT_DESCRIPTION",
          "type": "CHAR_STRING",
          "length": "60",
          "writable": "false",
          "optional": "true"
        },
        "_text": "BatReplacementDescription"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0014",
          "define": "POWER_SOURCE_BAT_COMMON_DESIGNATION",
          "type": "INT32U",
          "min": "0x00000000",
          "max": "0xFFFFFFFF",
          "writable": "false",
          "optional": "true"
        },
        "_text": "BatCommonDesignation"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0015",
          "define": "POWER_SOURCE_BAT_ANSI_DESIGNATION",
          "type": "CHAR_STRING",
          "length": "20",
          "writable": "false",
          "optional": "true"
        },
        "_text": "BatANSIDesignation"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0016",
          "define": "POWER_SOURCE_BAT_IEC_DESIGNATION",
          "type": "CHAR_STRING",
          "length": "20",
          "writable": "false",
          "optional": "true"
        },
        "_text": "BatIECDesignation"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0017",
          "define": "POWER_SOURCE_BAT_APPROVED_CHEMISTRY",
          "type": "INT32U",
          "min": "0x00000000",
          "max": "0xFFFFFFFF",
          "writable": "false",
          "optional": "true"
        },
        "_text": "BatApprovedChemistry"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0018",
          "define": "POWER_SOURCE_BAT_CAPACITY",
          "type": "INT32U",
          "min": "0x00000000",
          "max": "0xFFFFFFFF",
          "writable": "false",
          "optional": "true"
        },
        "_text": "BatCapacity"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0019",
          "define": "POWER_SOURCE_BAT_QUANTITY",
          "type": "INT8U",
          "min": "0x00",
          "max": "0xFF",
          "writable": "false",
          "optional": "true"
        },
        "_text": "BatQuantity"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x001A",
          "define": "POWER_SOURCE_BAT_CHARGE_STATE",
          "type": "BatChargeState",
          "writable": "false",
          "optional": "true"
        },
        "_text": "BatChargeState"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x001B",
          "define": "POWER_SOURCE_BAT_TIME_TO_FULL_CHARGE",
          "type": "INT32U",
          "min": "0x00000000",
          "max": "0xFFFFFFFF",
          "writable": "false",
          "optional": "true",
          "isNullable": "true"
        },
        "_text": "BatTimeToFullCharge"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x001C",
          "define": "POWER_SOURCE_BAT_FUNCTIONAL_WHILE_CHARGING",
          "type": "BOOLEAN",
          "writable": "false",
          "optional": "true"
        },
        "_text": "BatFunctionalWhileCharging"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x001D",
          "define": "POWER_SOURCE_BAT_CHARGING_CURRENT",
          "type": "INT32U",
          "min": "0x00000000",
          "max": "0xFFFFFFFF",
          "writable": "false",
          "optional": "true",
          "isNullable": "true"
        },
        "_text": "BatChargingCurrent"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x001E",
          "define": "POWER_SOURCE_ACTIVE_BAT_CHARGE_FAULTS",
          "type": "ARRAY",
          "entryType": "BatChargeFault",
          "length": "16",
          "writable": "false",
          "optional": "true"
        },
        "_text": "ActiveBatChargeFaults"
      }
    ],
    "event": [
      {
        "_attributes": {
          "code": "0x0000",
          "name": "WiredFaultChange",
          "priority": "info",
          "side": "server",
          "optional": "true"
        },
        "description": {
          "_text": "The WiredFaultChange Event SHALL indicate a change in the set of wired faults currently detected by the Node on this wired power source."
        },
        "field": [
          {
            "_attributes": {
              "id": "0",
              "name": "Current",
              "type": "WiredFault",
              "array": "true",
              "length": "8"
            }
          },
          {
            "_attributes": {
              "id": "1",
              "name": "Previous",
              "type": "WiredFault",
              "array": "true",
              "length": "8"
            }
          }
        ]
      },
      {
        "_attributes": {
          "code": "0x0001",
          "name": "BatFaultChange",
          "priority": "info",
          "side": "server",
          "optional": "true"
        },
        "description": {
          "_text": "The BatFaultChange Event SHALL indicate a change in the set of battery faults currently detected by the Node on this battery power source."
        },
        "field": [
          {
            "_attributes": {
              "id": "0",
              "name": "Current",
              "type": "BatFault",
              "array": "true",
              "length": "8"
            }
          },
          {
            "_attributes": {
              "id": "1",
              "name": "Previous",
              "type": "BatFault",
              "array": "true",
              "length": "8"
            }
          }
        ]
      },
      {
        "_attributes": {
          "code": "0x0002",
          "name": "BatChargeFaultChange",
          "priority": "info",
          "side": "server",
          "optional": "true"
        },
        "description": {
          "_text": "The BatChargeFaultChange Event SHALL indicate a change in the set of charge faults currently detected by the Node on this battery power source."
        },
        "field": [
          {
            "_attributes": {
              "id": "0",
              "name": "Current",
              "type": "BatChargeFault",
              "array": "true",
              "length": "16"
            }
          },
          {
            "_attributes": {
              "id": "1",
              "name": "Previous",
              "type": "BatChargeFault",
              "array": "true",
              "length": "16"
            }
          }
        ]
      }
    ]
  },
  "48": {
    "domain": {
      "_text": "General"
    },
    "name": {
      "_text": "General Commissioning"
    },
    "code": {
      "_text": "0x0030"
    },
    "define": {
      "_text": "GENERAL_COMMISSIONING_CLUSTER"
    },
    "description": {
      "_text": "This cluster is used to manage global aspects of the Commissioning flow."
    },
    "attribute": [
      {
        "_attributes": {
          "side": "server",
          "code": "0x00",
          "define": "BREADCRUMB",
          "type": "INT64U",
          "writable": "true",
          "default": "0x0000000000000000",
          "optional": "false"
        },
        "description": {
          "_text": "Breadcrumb"
        },
        "access": [
          {
            "_attributes": {
              "op": "read",
              "privilege": "view"
            }
          },
          {
            "_attributes": {
              "op": "write",
              "privilege": "administer"
            }
          }
        ]
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x01",
          "define": "BASIC_COMMISSIONING_INFO",
          "type": "BasicCommissioningInfo",
          "writable": "false",
          "optional": "false"
        },
        "_text": "BasicCommissioningInfo"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x02",
          "define": "REGULATORY_CONFIG",
          "type": "RegulatoryLocationType",
          "writable": "false",
          "optional": "false"
        },
        "_text": "RegulatoryConfig"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x03",
          "define": "LOCATION_CAPABILITY",
          "type": "RegulatoryLocationType",
          "writable": "false",
          "optional": "false"
        },
        "_text": "LocationCapability"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x04",
          "define": "SUPPORTS_CONCURRENT_CONNECTION",
          "type": "boolean",
          "writable": "false",
          "default": "1",
          "optional": "false"
        },
        "_text": "SupportsConcurrentConnection"
      }
    ],
    "command": [
      {
        "_attributes": {
          "source": "client",
          "code": "0x00",
          "name": "ArmFailSafe",
          "response": "ArmFailSafeResponse",
          "optional": "false",
          "cli": "chip fabric_commissioning armfailsafe"
        },
        "description": {
          "_text": "Arm the persistent fail-safe timer with an expiry time of now + ExpiryLengthSeconds using device clock"
        },
        "arg": [
          {
            "_attributes": {
              "name": "ExpiryLengthSeconds",
              "type": "INT16U"
            }
          },
          {
            "_attributes": {
              "name": "Breadcrumb",
              "type": "INT64U"
            }
          }
        ],
        "access": {
          "_attributes": {
            "op": "invoke",
            "privilege": "administer"
          }
        }
      },
      {
        "_attributes": {
          "source": "server",
          "code": "0x01",
          "name": "ArmFailSafeResponse",
          "optional": "false",
          "cli": "chip fabric_commissioning armfailsaferesponse"
        },
        "description": {
          "_text": "Success/failure response for ArmFailSafe command"
        },
        "arg": [
          {
            "_attributes": {
              "name": "ErrorCode",
              "type": "CommissioningError"
            }
          },
          {
            "_attributes": {
              "name": "DebugText",
              "type": "CHAR_STRING"
            }
          }
        ]
      },
      {
        "_attributes": {
          "source": "client",
          "code": "0x02",
          "name": "SetRegulatoryConfig",
          "response": "SetRegulatoryConfigResponse",
          "cli": "chip fabric_commissioning setregulatoryconfig"
        },
        "description": {
          "_text": "Set the regulatory configuration to be used during commissioning"
        },
        "arg": [
          {
            "_attributes": {
              "name": "NewRegulatoryConfig",
              "type": "RegulatoryLocationType"
            }
          },
          {
            "_attributes": {
              "name": "CountryCode",
              "type": "CHAR_STRING"
            }
          },
          {
            "_attributes": {
              "name": "Breadcrumb",
              "type": "INT64U"
            }
          }
        ],
        "access": {
          "_attributes": {
            "op": "invoke",
            "privilege": "administer"
          }
        }
      },
      {
        "_attributes": {
          "source": "server",
          "code": "0x03",
          "name": "SetRegulatoryConfigResponse",
          "cli": "chip fabric_commissioning setregulatoryconfigresponse"
        },
        "description": {
          "_text": "Success/failure response for SetRegulatoryConfig command"
        },
        "arg": [
          {
            "_attributes": {
              "name": "ErrorCode",
              "type": "CommissioningError"
            }
          },
          {
            "_attributes": {
              "name": "DebugText",
              "type": "CHAR_STRING"
            }
          }
        ]
      },
      {
        "_attributes": {
          "source": "client",
          "code": "0x04",
          "name": "CommissioningComplete",
          "response": "CommissioningCompleteResponse",
          "isFabricScoped": "true",
          "optional": "false",
          "cli": "chip fabric_commissioning commissioningcomplete"
        },
        "description": {
          "_text": "Signals the Server that the Client has successfully completed all steps of Commissioning/Recofiguration needed during fail-safe period."
        },
        "access": {
          "_attributes": {
            "op": "invoke",
            "privilege": "administer"
          }
        }
      },
      {
        "_attributes": {
          "source": "server",
          "code": "0x05",
          "name": "CommissioningCompleteResponse",
          "optional": "false",
          "cli": "chip fabric_commissioning commissioningcompleteresponse"
        },
        "description": {
          "_text": "Indicates to client whether CommissioningComplete command succeeded"
        },
        "arg": [
          {
            "_attributes": {
              "name": "ErrorCode",
              "type": "CommissioningError"
            }
          },
          {
            "_attributes": {
              "name": "DebugText",
              "type": "CHAR_STRING"
            }
          }
        ]
      }
    ]
  },
  "49": {
    "name": {
      "_text": "Network Commissioning"
    },
    "domain": {
      "_text": "CHIP"
    },
    "description": {
      "_text": "Functionality to configure, enable, disable network credentials and access on a Matter device."
    },
    "code": {
      "_text": "0x0031"
    },
    "define": {
      "_text": "NETWORK_COMMISSIONING_CLUSTER"
    },
    "client": {
      "_attributes": {
        "tick": "false",
        "init": "false"
      },
      "_text": "true"
    },
    "server": {
      "_attributes": {
        "tick": "false",
        "init": "false"
      },
      "_text": "true"
    },
    "attribute": [
      {
        "_attributes": {
          "side": "server",
          "code": "0x0000",
          "define": "MAX_NETWORKS",
          "type": "INT8U",
          "writable": "false",
          "optional": "false"
        },
        "description": {
          "_text": "MaxNetworks"
        },
        "access": {
          "_attributes": {
            "op": "read",
            "privilege": "administer"
          }
        }
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0001",
          "define": "NETWORKS",
          "type": "ARRAY",
          "entryType": "NetworkInfo",
          "length": "12",
          "writable": "false",
          "optional": "false"
        },
        "description": {
          "_text": "Networks"
        },
        "access": {
          "_attributes": {
            "op": "read",
            "privilege": "administer"
          }
        }
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0002",
          "define": "SCAN_MAX_TIME_SECONDS",
          "type": "INT8U",
          "writable": "false",
          "optional": "true"
        },
        "_text": "ScanMaxTimeSeconds"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0003",
          "define": "CONNECT_MAX_TIME_SECONDS",
          "type": "INT8U",
          "writable": "false",
          "optional": "true"
        },
        "_text": "ConnectMaxTimeSeconds"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0004",
          "define": "INTERFACE_ENABLED",
          "type": "BOOLEAN",
          "writable": "true",
          "optional": "false"
        },
        "description": {
          "_text": "InterfaceEnabled"
        },
        "access": [
          {
            "_attributes": {
              "op": "read",
              "privilege": "view"
            }
          },
          {
            "_attributes": {
              "op": "write",
              "privilege": "administer"
            }
          }
        ]
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0005",
          "define": "LAST_NETWORKING_STATUS",
          "type": "NetworkCommissioningStatus",
          "writable": "false",
          "optional": "false",
          "isNullable": "true"
        },
        "description": {
          "_text": "LastNetworkingStatus"
        },
        "access": {
          "_attributes": {
            "op": "read",
            "privilege": "administer"
          }
        }
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0006",
          "define": "LAST_NETWORK_ID",
          "type": "OCTET_STRING",
          "length": "32",
          "writable": "false",
          "optional": "false",
          "isNullable": "true"
        },
        "description": {
          "_text": "LastNetworkID"
        },
        "access": {
          "_attributes": {
            "op": "read",
            "privilege": "administer"
          }
        }
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0007",
          "define": "LAST_CONNECT_ERROR_VALUE",
          "type": "INT32S",
          "writable": "false",
          "optional": "false",
          "isNullable": "true"
        },
        "description": {
          "_text": "LastConnectErrorValue"
        },
        "access": {
          "_attributes": {
            "op": "read",
            "privilege": "administer"
          }
        }
      }
    ],
    "command": [
      {
        "_attributes": {
          "source": "client",
          "code": "0x00",
          "name": "ScanNetworks",
          "optional": "false",
          "response": "ScanNetworksResponse",
          "cli": "chip network_commissioning scannetworks"
        },
        "description": {
          "_text": "Detemine the set of networks the device sees as available."
        },
        "arg": [
          {
            "_attributes": {
              "name": "SSID",
              "type": "OCTET_STRING",
              "length": "32",
              "isNullable": "true",
              "optional": "true"
            }
          },
          {
            "_attributes": {
              "name": "Breadcrumb",
              "type": "INT64U",
              "optional": "true"
            }
          }
        ],
        "access": {
          "_attributes": {
            "op": "invoke",
            "privilege": "administer"
          }
        }
      },
      {
        "_attributes": {
          "source": "server",
          "code": "0x01",
          "name": "ScanNetworksResponse",
          "optional": "false",
          "cli": "chip network_commissioning scannetworksresponse"
        },
        "description": {
          "_text": "Relay the set of networks the device sees as available back to the client."
        },
        "arg": [
          {
            "_attributes": {
              "name": "NetworkingStatus",
              "type": "NetworkCommissioningStatus"
            }
          },
          {
            "_attributes": {
              "name": "DebugText",
              "type": "CHAR_STRING",
              "optional": "true"
            }
          },
          {
            "_attributes": {
              "name": "WiFiScanResults",
              "type": "WiFiInterfaceScanResult",
              "array": "true",
              "optional": "true"
            }
          },
          {
            "_attributes": {
              "name": "ThreadScanResults",
              "type": "ThreadInterfaceScanResult",
              "array": "true",
              "optional": "true"
            }
          }
        ]
      },
      {
        "_attributes": {
          "source": "client",
          "code": "0x02",
          "name": "AddOrUpdateWiFiNetwork",
          "optional": "true",
          "response": "NetworkConfigResponse",
          "cli": "chip network_commissioning addorupdatewifinetwork"
        },
        "description": {
          "_text": "Add or update the credentials for a given Wi-Fi network."
        },
        "arg": [
          {
            "_attributes": {
              "name": "SSID",
              "type": "OCTET_STRING",
              "length": "32"
            }
          },
          {
            "_attributes": {
              "name": "Credentials",
              "type": "OCTET_STRING",
              "length": "64"
            }
          },
          {
            "_attributes": {
              "name": "breadcrumb",
              "type": "INT64U",
              "optional": "true"
            }
          }
        ],
        "access": {
          "_attributes": {
            "op": "invoke",
            "privilege": "administer"
          }
        }
      },
      {
        "_attributes": {
          "source": "client",
          "code": "0x03",
          "name": "AddOrUpdateThreadNetwork",
          "optional": "true",
          "response": "NetworkConfigResponse",
          "cli": "chip network_commissioning addorupdatethreadnetwork"
        },
        "description": {
          "_text": "Add or update the credentials for a given Thread network."
        },
        "arg": [
          {
            "_attributes": {
              "name": "OperationalDataset",
              "type": "OCTET_STRING",
              "length": "254"
            }
          },
          {
            "_attributes": {
              "name": "Breadcrumb",
              "type": "INT64U",
              "optional": "true"
            }
          }
        ],
        "access": {
          "_attributes": {
            "op": "invoke",
            "privilege": "administer"
          }
        }
      },
      {
        "_attributes": {
          "source": "client",
          "code": "0x04",
          "name": "RemoveNetwork",
          "optional": "false",
          "response": "NetworkConfigResponse",
          "cli": "chip network_commissioning removenetwork"
        },
        "description": {
          "_text": "Remove the definition of a given network (including its credentials)."
        },
        "arg": [
          {
            "_attributes": {
              "name": "NetworkID",
              "type": "OCTET_STRING",
              "length": "32"
            }
          },
          {
            "_attributes": {
              "name": "Breadcrumb",
              "type": "INT64U",
              "optional": "true"
            }
          }
        ],
        "access": {
          "_attributes": {
            "op": "invoke",
            "privilege": "administer"
          }
        }
      },
      {
        "_attributes": {
          "source": "server",
          "code": "0x05",
          "name": "NetworkConfigResponse",
          "optional": "true",
          "cli": "chip network_commissioning addwifiresponse"
        },
        "description": {
          "_text": "Response command for various commands that add/remove/modify network credentials."
        },
        "arg": [
          {
            "_attributes": {
              "name": "NetworkingStatus",
              "type": "NetworkCommissioningStatus"
            }
          },
          {
            "_attributes": {
              "name": "DebugText",
              "type": "CHAR_STRING",
              "length": "512",
              "optional": "true"
            }
          },
          {
            "_attributes": {
              "name": "NetworkIndex",
              "type": "INT8U",
              "optional": "true"
            }
          }
        ]
      },
      {
        "_attributes": {
          "source": "client",
          "code": "0x06",
          "name": "ConnectNetwork",
          "optional": "false",
          "response": "ConnectNetworkResponse",
          "cli": "chip network_commissioning connectnetwork"
        },
        "description": {
          "_text": "Connect to the specified network, using previously-defined credentials."
        },
        "arg": [
          {
            "_attributes": {
              "name": "NetworkID",
              "type": "OCTET_STRING",
              "length": "32"
            }
          },
          {
            "_attributes": {
              "name": "Breadcrumb",
              "type": "INT64U",
              "optional": "true"
            }
          }
        ],
        "access": {
          "_attributes": {
            "op": "invoke",
            "privilege": "administer"
          }
        }
      },
      {
        "_attributes": {
          "source": "server",
          "code": "0x07",
          "name": "ConnectNetworkResponse",
          "optional": "false",
          "cli": "chip network_commissioning connectnetworkresponse"
        },
        "description": {
          "_text": "Command that indicates whether we have succcessfully connected to a network."
        },
        "arg": [
          {
            "_attributes": {
              "name": "NetworkingStatus",
              "type": "NetworkCommissioningStatus"
            }
          },
          {
            "_attributes": {
              "name": "DebugText",
              "type": "CHAR_STRING",
              "optional": "true"
            }
          },
          {
            "_attributes": {
              "name": "ErrorValue",
              "type": "INT32S",
              "isNullable": "true"
            }
          }
        ]
      },
      {
        "_attributes": {
          "source": "client",
          "code": "0x08",
          "name": "ReorderNetwork",
          "optional": "false",
          "response": "NetworkConfigResponse",
          "cli": "chip network_commissioning connectnetwork"
        },
        "description": {
          "_text": "Modify the order in which networks will be presented in the Networks attribute."
        },
        "arg": [
          {
            "_attributes": {
              "name": "NetworkID",
              "type": "OCTET_STRING",
              "length": "32"
            }
          },
          {
            "_attributes": {
              "name": "NetworkIndex",
              "type": "INT8U"
            }
          },
          {
            "_attributes": {
              "name": "Breadcrumb",
              "type": "INT64U",
              "optional": "true"
            }
          }
        ],
        "access": {
          "_attributes": {
            "op": "invoke",
            "privilege": "administer"
          }
        }
      }
    ]
  },
  "50": {
    "name": {
      "_text": "Diagnostic Logs"
    },
    "domain": {
      "_text": "CHIP"
    },
    "description": {
      "_text": "The cluster provides commands for retrieving unstructured diagnostic logs from a Node that may be used to aid in diagnostics."
    },
    "code": {
      "_text": "0x0032"
    },
    "define": {
      "_text": "DIAGNOSTIC_LOGS_CLUSTER"
    },
    "client": {
      "_attributes": {
        "tick": "false",
        "init": "false"
      },
      "_text": "true"
    },
    "server": {
      "_attributes": {
        "tick": "false",
        "init": "false"
      },
      "_text": "true"
    },
    "command": [
      {
        "_attributes": {
          "source": "client",
          "code": "0x00",
          "name": "RetrieveLogsRequest",
          "response": "RetrieveLogsResponse",
          "optional": "false",
          "cli": "chip logs retrieve"
        },
        "description": {
          "_text": "Retrieving diagnostic logs from a Node"
        },
        "arg": [
          {
            "_attributes": {
              "name": "Intent",
              "type": "LogsIntent"
            }
          },
          {
            "_attributes": {
              "name": "RequestedProtocol",
              "type": "LogsTransferProtocol"
            }
          },
          {
            "_attributes": {
              "name": "TransferFileDesignator",
              "type": "OCTET_STRING",
              "length": "32"
            }
          }
        ]
      },
      {
        "_attributes": {
          "source": "server",
          "code": "0x01",
          "name": "RetrieveLogsResponse",
          "optional": "false",
          "cli": "chip logs response"
        },
        "description": {
          "_text": "Response to the RetrieveLogsRequest"
        },
        "arg": [
          {
            "_attributes": {
              "name": "Status",
              "type": "LogsStatus"
            }
          },
          {
            "_attributes": {
              "name": "LogContent",
              "type": "OCTET_STRING"
            }
          },
          {
            "_attributes": {
              "name": "UTCTimeStamp",
              "type": "epoch_s"
            }
          },
          {
            "_attributes": {
              "name": "TimeSinceBoot",
              "type": "INT32U"
            }
          }
        ]
      }
    ]
  },
  "51": {
    "domain": {
      "_text": "General"
    },
    "name": {
      "_text": "General Diagnostics"
    },
    "code": {
      "_text": "0x0033"
    },
    "define": {
      "_text": "GENERAL_DIAGNOSTICS_CLUSTER"
    },
    "description": {
      "_text": "The General Diagnostics Cluster, along with other diagnostics clusters, provide a means to acquire standardized diagnostics metrics that MAY be used by a Node to assist a user or Administrative Node in diagnosing potential problems."
    },
    "attribute": [
      {
        "_attributes": {
          "side": "server",
          "code": "0x00",
          "define": "NETWORK_INTERFACES",
          "type": "ARRAY",
          "entryType": "NetworkInterface",
          "length": "254",
          "writable": "false",
          "optional": "false"
        },
        "_text": "NetworkInterfaces"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x01",
          "define": "REBOOT_COUNT",
          "type": "INT16U",
          "min": "0x0000",
          "max": "0xFFFF",
          "writable": "false",
          "default": "0x0000",
          "optional": "false"
        },
        "_text": "RebootCount"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x02",
          "define": "UP_TIME",
          "type": "INT64U",
          "min": "0x0000000000000000",
          "max": "0xFFFFFFFFFFFFFFFF",
          "writable": "false",
          "default": "0x0000000000000000",
          "optional": "true"
        },
        "_text": "UpTime"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x03",
          "define": "TOTAL_OPERATIONAL_HOURS",
          "type": "INT32U",
          "min": "0x00000000",
          "max": "0xFFFFFFFF",
          "writable": "false",
          "default": "0x00000000",
          "optional": "true"
        },
        "_text": "TotalOperationalHours"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x04",
          "define": "BOOT_REASONS",
          "type": "BootReasonEnum",
          "writable": "false",
          "optional": "true"
        },
        "_text": "BootReason"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x05",
          "define": "ACTIVE_HARDWARE_FAULTS",
          "type": "ARRAY",
          "entryType": "HardwareFaultEnum",
          "writable": "false",
          "optional": "true"
        },
        "_text": "ActiveHardwareFaults"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x06",
          "define": "ACTIVE_RADIO_FAULTS",
          "type": "ARRAY",
          "entryType": "RadioFaultEnum",
          "writable": "false",
          "optional": "true"
        },
        "_text": "ActiveRadioFaults"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x07",
          "define": "ACTIVE_NETWORK_FAULTS",
          "type": "ARRAY",
          "entryType": "NetworkFaultEnum",
          "writable": "false",
          "optional": "true"
        },
        "_text": "ActiveNetworkFaults"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x08",
          "define": "TEST_EVENT_TRIGGERS_ENABLED",
          "type": "BOOLEAN",
          "writable": "false",
          "optional": "false"
        },
        "_text": "TestEventTriggersEnabled"
      }
    ],
    "command": {
      "_attributes": {
        "source": "client",
        "code": "0x00",
        "name": "TestEventTrigger",
        "optional": "false"
      },
      "description": {
        "_text": "Provide a means for certification tests to trigger some test-plan-specific events"
      },
      "arg": [
        {
          "_attributes": {
            "name": "EnableKey",
            "type": "OCTET_STRING",
            "length": "16"
          }
        },
        {
          "_attributes": {
            "name": "EventTrigger",
            "type": "INT64U"
          }
        }
      ],
      "access": {
        "_attributes": {
          "op": "invoke",
          "role": "manage"
        }
      }
    },
    "event": [
      {
        "_attributes": {
          "side": "server",
          "code": "0x00",
          "name": "HardwareFaultChange",
          "priority": "critical",
          "optional": "true"
        },
        "description": {
          "_text": "Indicate a change in the set of hardware faults currently detected by the Node."
        },
        "field": [
          {
            "_attributes": {
              "id": "0",
              "name": "Current",
              "type": "HardwareFaultEnum",
              "array": "true"
            }
          },
          {
            "_attributes": {
              "id": "1",
              "name": "Previous",
              "type": "HardwareFaultEnum",
              "array": "true"
            }
          }
        ]
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x01",
          "name": "RadioFaultChange",
          "priority": "critical",
          "optional": "true"
        },
        "description": {
          "_text": "Indicate a change in the set of radio faults currently detected by the Node."
        },
        "field": [
          {
            "_attributes": {
              "id": "0",
              "name": "Current",
              "type": "RadioFaultEnum",
              "array": "true"
            }
          },
          {
            "_attributes": {
              "id": "1",
              "name": "Previous",
              "type": "RadioFaultEnum",
              "array": "true"
            }
          }
        ]
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x02",
          "name": "NetworkFaultChange",
          "priority": "critical",
          "optional": "true"
        },
        "description": {
          "_text": "Indicate a change in the set of network faults currently detected by the Node."
        },
        "field": [
          {
            "_attributes": {
              "id": "0",
              "name": "Current",
              "type": "NetworkFaultEnum",
              "array": "true"
            }
          },
          {
            "_attributes": {
              "id": "1",
              "name": "Previous",
              "type": "NetworkFaultEnum",
              "array": "true"
            }
          }
        ]
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x03",
          "name": "BootReason",
          "priority": "critical",
          "optional": "false"
        },
        "description": {
          "_text": "Indicate the reason that caused the device to start-up."
        },
        "field": {
          "_attributes": {
            "id": "0",
            "name": "BootReason",
            "type": "BootReasonEnum"
          }
        }
      }
    ]
  },
  "52": {
    "domain": {
      "_text": "General"
    },
    "name": {
      "_text": "Software Diagnostics"
    },
    "code": {
      "_text": "0x0034"
    },
    "define": {
      "_text": "SOFTWARE_DIAGNOSTICS_CLUSTER"
    },
    "description": {
      "_text": "The Software Diagnostics Cluster provides a means to acquire standardized diagnostics metrics that MAY be used by a Node to assist a user or Administrative Node in diagnosing potential problems."
    },
    "attribute": [
      {
        "_attributes": {
          "side": "server",
          "code": "0x00",
          "define": "THREAD_METRICS",
          "type": "ARRAY",
          "entryType": "ThreadMetricsStruct",
          "length": "254",
          "writable": "false",
          "optional": "true"
        },
        "_text": "ThreadMetrics"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x01",
          "define": "CURRENT_HEAP_FREE",
          "type": "INT64U",
          "min": "0x0000000000000000",
          "max": "0xFFFFFFFFFFFFFFFF",
          "writable": "false",
          "default": "0x0000000000000000",
          "optional": "true"
        },
        "_text": "CurrentHeapFree"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x02",
          "define": "CURRENT_HEAP_USED",
          "type": "INT64U",
          "min": "0x0000000000000000",
          "max": "0xFFFFFFFFFFFFFFFF",
          "writable": "false",
          "default": "0x0000000000000000",
          "optional": "true"
        },
        "_text": "CurrentHeapUsed"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x03",
          "define": "CURRENT_HEAP_HIGH_WATERMARK",
          "type": "INT64U",
          "min": "0x0000000000000000",
          "max": "0xFFFFFFFFFFFFFFFF",
          "writable": "false",
          "default": "0x0000000000000000",
          "optional": "true"
        },
        "_text": "CurrentHeapHighWatermark"
      }
    ],
    "command": {
      "_attributes": {
        "source": "client",
        "code": "0x00",
        "name": "ResetWatermarks",
        "optional": "true",
        "cli": "chip software_diagnostics resetwatermarks"
      },
      "description": {
        "_text": "Reception of this command SHALL reset the values: The StackFreeMinimum field of the ThreadMetrics attribute, CurrentHeapHighWaterMark attribute."
      }
    },
    "event": {
      "_attributes": {
        "side": "server",
        "code": "0x00",
        "name": "SoftwareFault",
        "priority": "info",
        "optional": "true"
      },
      "description": {
        "_text": "Indicate the last software fault that has taken place on the Node."
      },
      "field": [
        {
          "_attributes": {
            "id": "0",
            "name": "ID",
            "type": "INT64U"
          }
        },
        {
          "_attributes": {
            "id": "1",
            "name": "Name",
            "type": "CHAR_STRING",
            "length": "8",
            "optional": "true"
          }
        },
        {
          "_attributes": {
            "id": "2",
            "name": "FaultRecording",
            "type": "OCTET_STRING",
            "length": "1024",
            "optional": "true"
          }
        }
      ]
    }
  },
  "53": {
    "domain": {
      "_text": "General"
    },
    "name": {
      "_text": "Thread Network Diagnostics"
    },
    "code": {
      "_text": "0x0035"
    },
    "define": {
      "_text": "THREAD_NETWORK_DIAGNOSTICS_CLUSTER"
    },
    "description": {
      "_text": "The Thread Network Diagnostics Cluster provides a means to acquire standardized diagnostics metrics that MAY be used by a Node to assist a user or Administrative Node in diagnosing potential problems"
    },
    "attribute": [
      {
        "_attributes": {
          "side": "server",
          "code": "0x00",
          "define": "CHANNEL",
          "type": "INT16U",
          "min": "0x00",
          "max": "0xFFFF",
          "writable": "false",
          "isNullable": "true",
          "optional": "false"
        },
        "_text": "Channel"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x01",
          "define": "ROUTING_ROLE",
          "type": "RoutingRole",
          "writable": "false",
          "isNullable": "true",
          "optional": "false"
        },
        "_text": "RoutingRole"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x02",
          "define": "NETWORK_NAME",
          "type": "CHAR_STRING",
          "length": "16",
          "writable": "false",
          "default": "",
          "isNullable": "true",
          "optional": "false"
        },
        "_text": "NetworkName"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x03",
          "define": "DIAG_PAN_ID",
          "type": "INT16U",
          "min": "0x0000",
          "max": "0xFFFF",
          "writable": "false",
          "default": "0x0000",
          "isNullable": "true",
          "optional": "false"
        },
        "_text": "PanId"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x04",
          "define": "DIAG_EXTENDED_PAN_ID",
          "type": "INT64U",
          "min": "0x0000000000000000",
          "max": "0xFFFFFFFFFFFFFFFF",
          "writable": "false",
          "default": "0x0000000000000000",
          "isNullable": "true",
          "optional": "false"
        },
        "_text": "ExtendedPanId"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x05",
          "define": "MESH_LOCAL_PREFIX",
          "type": "OCTET_STRING",
          "length": "17",
          "writable": "false",
          "isNullable": "true",
          "optional": "false"
        },
        "_text": "MeshLocalPrefix"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x06",
          "define": "DIAG_OVERRUN_COUNT",
          "type": "INT64U",
          "min": "0x0000000000000000",
          "max": "0xFFFFFFFFFFFFFFFF",
          "writable": "false",
          "default": "0x0000000000000000",
          "optional": "true"
        },
        "_text": "OverrunCount"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x07",
          "define": "NEIGHBOR_TABLE",
          "type": "ARRAY",
          "entryType": "NeighborTable",
          "length": "254",
          "writable": "false",
          "optional": "false"
        },
        "_text": "NeighborTable"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x08",
          "define": "ROUTE_TABLE",
          "type": "ARRAY",
          "entryType": "RouteTable",
          "length": "254",
          "writable": "false",
          "optional": "false"
        },
        "_text": "RouteTable"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x09",
          "define": "PARTITION_ID",
          "type": "INT32U",
          "min": "0x00000000",
          "max": "0xFFFFFFFF",
          "writable": "false",
          "isNullable": "true",
          "optional": "false"
        },
        "_text": "PartitionId"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0A",
          "define": "WEIGHTING",
          "type": "INT8U",
          "min": "0x00",
          "max": "0xFF",
          "writable": "false",
          "isNullable": "true",
          "optional": "false"
        },
        "_text": "Weighting"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0B",
          "define": "DATA_VERSION",
          "type": "INT8U",
          "min": "0x00",
          "max": "0xFF",
          "writable": "false",
          "isNullable": "true",
          "optional": "false"
        },
        "_text": "DataVersion"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0C",
          "define": "STABLE_DATA_VERSION",
          "type": "INT8U",
          "min": "0x00",
          "max": "0xFF",
          "writable": "false",
          "isNullable": "true",
          "optional": "false"
        },
        "_text": "StableDataVersion"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0D",
          "define": "LEADER_ROUTER_ID",
          "type": "INT8U",
          "min": "0x00",
          "max": "0xFF",
          "writable": "false",
          "isNullable": "true",
          "optional": "false"
        },
        "_text": "LeaderRouterId"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0E",
          "define": "DETACHED_ROLE_COUNT",
          "type": "INT16U",
          "min": "0x0000",
          "max": "0xFFFF",
          "writable": "false",
          "default": "0x0000",
          "optional": "true"
        },
        "_text": "DetachedRoleCount"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0F",
          "define": "CHILD_ROLE_COUNT",
          "type": "INT16U",
          "min": "0x0000",
          "max": "0xFFFF",
          "writable": "false",
          "default": "0x0000",
          "optional": "true"
        },
        "_text": "ChildRoleCount"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x10",
          "define": "ROUTER_ROLE_COUNT",
          "type": "INT16U",
          "min": "0x0000",
          "max": "0xFFFF",
          "writable": "false",
          "default": "0x0000",
          "optional": "true"
        },
        "_text": "RouterRoleCount"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x11",
          "define": "LEADER_ROLE_COUNT",
          "type": "INT16U",
          "min": "0x0000",
          "max": "0xFFFF",
          "writable": "false",
          "default": "0x0000",
          "optional": "true"
        },
        "_text": "LeaderRoleCount"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x12",
          "define": "ATTACH_ATTEMPT_COUNT",
          "type": "INT16U",
          "min": "0x0000",
          "max": "0xFFFF",
          "writable": "false",
          "default": "0x0000",
          "optional": "true"
        },
        "_text": "AttachAttemptCount"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x13",
          "define": "PARTITION_ID_CHANGE_COUNT",
          "type": "INT16U",
          "min": "0x0000",
          "max": "0xFFFF",
          "writable": "false",
          "default": "0x0000",
          "optional": "true"
        },
        "_text": "PartitionIdChangeCount"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x14",
          "define": "BETTER_PARTITION_ATTACH_ATTEMPT_COUNT",
          "type": "INT16U",
          "min": "0x0000",
          "max": "0xFFFF",
          "writable": "false",
          "default": "0x0000",
          "optional": "true"
        },
        "_text": "BetterPartitionAttachAttemptCount"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x15",
          "define": "PARENT_CHANGE_COUNT",
          "type": "INT16U",
          "min": "0x0000",
          "max": "0xFFFF",
          "writable": "false",
          "default": "0x0000",
          "optional": "true"
        },
        "_text": "ParentChangeCount"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x16",
          "define": "TX_TOTAL_COUNT",
          "type": "INT32U",
          "min": "0x00000000",
          "max": "0xFFFFFFFF",
          "writable": "false",
          "default": "0x0000",
          "optional": "true"
        },
        "_text": "TxTotalCount"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x17",
          "define": "TX_UNICAST_COUNT",
          "type": "INT32U",
          "min": "0x00000000",
          "max": "0xFFFFFFFF",
          "writable": "false",
          "default": "0x0000",
          "optional": "true"
        },
        "_text": "TxUnicastCount"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x18",
          "define": "TX_BROADCAST_COUNT",
          "type": "INT32U",
          "min": "0x00000000",
          "max": "0xFFFFFFFF",
          "writable": "false",
          "default": "0x0000",
          "optional": "true"
        },
        "_text": "TxBroadcastCount"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x19",
          "define": "TX_ACK_REQUESTED_COUNT",
          "type": "INT32U",
          "min": "0x00000000",
          "max": "0xFFFFFFFF",
          "writable": "false",
          "default": "0x0000",
          "optional": "true"
        },
        "_text": "TxAckRequestedCount"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x1A",
          "define": "TX_ACKED_COUNT",
          "type": "INT32U",
          "min": "0x00000000",
          "max": "0xFFFFFFFF",
          "writable": "false",
          "default": "0x0000",
          "optional": "true"
        },
        "_text": "TxAckedCount"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x1B",
          "define": "TX_NO_ACK_REQUESTED_COUNT",
          "type": "INT32U",
          "min": "0x00000000",
          "max": "0xFFFFFFFF",
          "writable": "false",
          "default": "0x0000",
          "optional": "true"
        },
        "_text": "TxNoAckRequestedCount"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x1C",
          "define": "TX_DATA_COUNT",
          "type": "INT32U",
          "min": "0x00000000",
          "max": "0xFFFFFFFF",
          "writable": "false",
          "default": "0x0000",
          "optional": "true"
        },
        "_text": "TxDataCount"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x1D",
          "define": "TX_DATA_POLL_COUNT",
          "type": "INT32U",
          "min": "0x00000000",
          "max": "0xFFFFFFFF",
          "writable": "false",
          "default": "0x0000",
          "optional": "true"
        },
        "_text": "TxDataPollCount"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x1E",
          "define": "TX_BEACON_COUNT",
          "type": "INT32U",
          "min": "0x00000000",
          "max": "0xFFFFFFFF",
          "writable": "false",
          "default": "0x0000",
          "optional": "true"
        },
        "_text": "TxBeaconCount"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x1F",
          "define": "TX_BEACON_REQUEST_COUNT",
          "type": "INT32U",
          "min": "0x00000000",
          "max": "0xFFFFFFFF",
          "writable": "false",
          "default": "0x0000",
          "optional": "true"
        },
        "_text": "TxBeaconRequestCount"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x20",
          "define": "TX_OTHER_COUNT",
          "type": "INT32U",
          "min": "0x00000000",
          "max": "0xFFFFFFFF",
          "writable": "false",
          "default": "0x0000",
          "optional": "true"
        },
        "_text": "TxOtherCount"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x21",
          "define": "TX_RETRY_COUNT",
          "type": "INT32U",
          "min": "0x00000000",
          "max": "0xFFFFFFFF",
          "writable": "false",
          "default": "0x0000",
          "optional": "true"
        },
        "_text": "TxRetryCount"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x22",
          "define": "TX_DIRECT_MAX_RETRY_EXPIRY_COUNT",
          "type": "INT32U",
          "min": "0x00000000",
          "max": "0xFFFFFFFF",
          "writable": "false",
          "default": "0x0000",
          "optional": "true"
        },
        "_text": "TxDirectMaxRetryExpiryCount"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x23",
          "define": "TX_INDIRECT_MAX_RETRY_EXPIRY_COUNT",
          "type": "INT32U",
          "min": "0x00000000",
          "max": "0xFFFFFFFF",
          "writable": "false",
          "default": "0x0000",
          "optional": "true"
        },
        "_text": "TxIndirectMaxRetryExpiryCount"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x24",
          "define": "TX_ERR_CCA_COUNT",
          "type": "INT32U",
          "min": "0x00000000",
          "max": "0xFFFFFFFF",
          "writable": "false",
          "default": "0x0000",
          "optional": "true"
        },
        "_text": "TxErrCcaCount"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x25",
          "define": "TX_ERR_ABORT_COUNT",
          "type": "INT32U",
          "min": "0x00000000",
          "max": "0xFFFFFFFF",
          "writable": "false",
          "default": "0x0000",
          "optional": "true"
        },
        "_text": "TxErrAbortCount"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x26",
          "define": "TX_ERR_BUSY_CHANNEL_COUNT",
          "type": "INT32U",
          "min": "0x00000000",
          "max": "0xFFFFFFFF",
          "writable": "false",
          "default": "0x0000",
          "optional": "true"
        },
        "_text": "TxErrBusyChannelCount"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x27",
          "define": "RX_TOTAL_COUNT",
          "type": "INT32U",
          "min": "0x00000000",
          "max": "0xFFFFFFFF",
          "writable": "false",
          "default": "0x0000",
          "optional": "true"
        },
        "_text": "RxTotalCount"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x28",
          "define": "RX_UNICAST_COUNT",
          "type": "INT32U",
          "min": "0x00000000",
          "max": "0xFFFFFFFF",
          "writable": "false",
          "default": "0x0000",
          "optional": "true"
        },
        "_text": "RxUnicastCount"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x29",
          "define": "RX_BROADCAST_COUNT",
          "type": "INT32U",
          "min": "0x00000000",
          "max": "0xFFFFFFFF",
          "writable": "false",
          "default": "0x0000",
          "optional": "true"
        },
        "_text": "RxBroadcastCount"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x2A",
          "define": "RX_DATA_COUNT",
          "type": "INT32U",
          "min": "0x00000000",
          "max": "0xFFFFFFFF",
          "writable": "false",
          "default": "0x0000",
          "optional": "true"
        },
        "_text": "RxDataCount"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x2B",
          "define": "RX_DATA_POLL_COUNT",
          "type": "INT32U",
          "min": "0x00000000",
          "max": "0xFFFFFFFF",
          "writable": "false",
          "default": "0x0000",
          "optional": "true"
        },
        "_text": "RxDataPollCount"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x2C",
          "define": "RX_BEACON_COUNT",
          "type": "INT32U",
          "min": "0x00000000",
          "max": "0xFFFFFFFF",
          "writable": "false",
          "default": "0x0000",
          "optional": "true"
        },
        "_text": "RxBeaconCount"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x2D",
          "define": "RX_BEACON_REQUEST_COUNT",
          "type": "INT32U",
          "min": "0x00000000",
          "max": "0xFFFFFFFF",
          "writable": "false",
          "default": "0x0000",
          "optional": "true"
        },
        "_text": "RxBeaconRequestCount"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x2E",
          "define": "RX_OTHER_COUNT",
          "type": "INT32U",
          "min": "0x00000000",
          "max": "0xFFFFFFFF",
          "writable": "false",
          "default": "0x0000",
          "optional": "true"
        },
        "_text": "RxOtherCount"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x2F",
          "define": "RX_ADDRESS_FILTERED_COUNT",
          "type": "INT32U",
          "min": "0x00000000",
          "max": "0xFFFFFFFF",
          "writable": "false",
          "default": "0x0000",
          "optional": "true"
        },
        "_text": "RxAddressFilteredCount"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x30",
          "define": "RX_DESTADDR_FILTERED_COUNT",
          "type": "INT32U",
          "min": "0x00000000",
          "max": "0xFFFFFFFF",
          "writable": "false",
          "default": "0x0000",
          "optional": "true"
        },
        "_text": "RxDestAddrFilteredCount"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x31",
          "define": "RX_DUPLICATED_COUNT",
          "type": "INT32U",
          "min": "0x00000000",
          "max": "0xFFFFFFFF",
          "writable": "false",
          "default": "0x0000",
          "optional": "true"
        },
        "_text": "RxDuplicatedCount"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x32",
          "define": "RX_ERR_NO_FRAME_COUNT",
          "type": "INT32U",
          "min": "0x00000000",
          "max": "0xFFFFFFFF",
          "writable": "false",
          "default": "0x0000",
          "optional": "true"
        },
        "_text": "RxErrNoFrameCount"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x33",
          "define": "RX_ERR_UNKNOWN_NEIGHBOR_COUNT",
          "type": "INT32U",
          "min": "0x00000000",
          "max": "0xFFFFFFFF",
          "writable": "false",
          "default": "0x0000",
          "optional": "true"
        },
        "_text": "RxErrUnknownNeighborCount"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x34",
          "define": "RX_ERR_INVALID_SRC_ADDR_COUNT",
          "type": "INT32U",
          "min": "0x00000000",
          "max": "0xFFFFFFFF",
          "writable": "false",
          "default": "0x0000",
          "optional": "true"
        },
        "_text": "RxErrInvalidSrcAddrCount"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x35",
          "define": "RX_ERR_SEC_COUNT",
          "type": "INT32U",
          "min": "0x00000000",
          "max": "0xFFFFFFFF",
          "writable": "false",
          "default": "0x0000",
          "optional": "true"
        },
        "_text": "RxErrSecCount"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x36",
          "define": "RX_ERR_FCS_COUNT",
          "type": "INT32U",
          "min": "0x00000000",
          "max": "0xFFFFFFFF",
          "writable": "false",
          "default": "0x0000",
          "optional": "true"
        },
        "_text": "RxErrFcsCount"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x37",
          "define": "RX_ERR_OTHER_COUNT",
          "type": "INT32U",
          "min": "0x00000000",
          "max": "0xFFFFFFFF",
          "writable": "false",
          "default": "0x0000",
          "optional": "true"
        },
        "_text": "RxErrOtherCount"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x38",
          "define": "ACTIVE_TIMESTAMP",
          "type": "INT64U",
          "min": "0x0000000000000000",
          "max": "0xFFFFFFFFFFFFFFFF",
          "writable": "false",
          "default": "0x0000000000000000",
          "isNullable": "true",
          "optional": "true"
        },
        "_text": "ActiveTimestamp"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x39",
          "define": "PENDING_TIMESTAMP",
          "type": "INT64U",
          "min": "0x0000000000000000",
          "max": "0xFFFFFFFFFFFFFFFF",
          "writable": "false",
          "default": "0x0000000000000000",
          "isNullable": "true",
          "optional": "true"
        },
        "_text": "PendingTimestamp"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x3A",
          "define": "DELAY",
          "type": "INT32U",
          "min": "0x00000000",
          "max": "0xFFFFFFFF",
          "writable": "false",
          "default": "0x0000",
          "isNullable": "true",
          "optional": "true"
        },
        "_text": "Delay"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x3B",
          "define": "SECURITY_POLICY",
          "type": "SecurityPolicy",
          "writable": "false",
          "isNullable": "true",
          "optional": "false"
        },
        "_text": "SecurityPolicy"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x3C",
          "define": "DIAG_CHANNEL_MASK",
          "type": "OCTET_STRING",
          "length": "4",
          "writable": "false",
          "isNullable": "true",
          "optional": "false"
        },
        "_text": "ChannelPage0Mask"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x3D",
          "define": "OPERATIONAL_DATASET_COMPONENTS",
          "type": "OperationalDatasetComponents",
          "writable": "false",
          "isNullable": "true",
          "optional": "false"
        },
        "_text": "OperationalDatasetComponents"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x3E",
          "define": "ACTIVE_THREAD_NETWORK_FAULTS",
          "type": "ARRAY",
          "entryType": "NetworkFault",
          "length": "4",
          "writable": "false",
          "optional": "false"
        },
        "_text": "ActiveNetworkFaultsList"
      }
    ],
    "command": {
      "_attributes": {
        "source": "client",
        "code": "0x00",
        "name": "ResetCounts",
        "optional": "true",
        "cli": "chip thread_network_diagnostics resetcounts"
      },
      "description": {
        "_text": "Reception of this command SHALL reset the OverrunCount attributes to 0"
      }
    },
    "event": [
      {
        "_attributes": {
          "side": "server",
          "code": "0x00",
          "name": "ConnectionStatus",
          "priority": "info",
          "optional": "true"
        },
        "description": {
          "_text": "Indicate that a Node’s connection status to a Thread network has changed"
        },
        "field": {
          "_attributes": {
            "id": "0",
            "name": "ConnectionStatus",
            "type": "ConnectionStatusEnum"
          }
        }
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x01",
          "name": "NetworkFaultChange",
          "priority": "info",
          "optional": "true"
        },
        "description": {
          "_text": "Indicate a change in the set of network faults currently detected by the Node"
        },
        "field": [
          {
            "_attributes": {
              "id": "0",
              "name": "Current",
              "type": "NetworkFault",
              "array": "true"
            }
          },
          {
            "_attributes": {
              "id": "1",
              "name": "Previous",
              "type": "NetworkFault",
              "array": "true"
            }
          }
        ]
      }
    ]
  },
  "54": {
    "domain": {
      "_text": "General"
    },
    "name": {
      "_text": "WiFi Network Diagnostics"
    },
    "code": {
      "_text": "0x0036"
    },
    "define": {
      "_text": "WIFI_NETWORK_DIAGNOSTICS_CLUSTER"
    },
    "description": {
      "_text": "The Wi-Fi Network Diagnostics Cluster provides a means to acquire standardized diagnostics metrics that MAY be used by a Node to assist a user or Administrative Node in diagnosing potential problems."
    },
    "attribute": [
      {
        "_attributes": {
          "side": "server",
          "code": "0x00",
          "define": "BSSID",
          "type": "OCTET_STRING",
          "length": "6",
          "writable": "false",
          "isNullable": "true",
          "optional": "false"
        },
        "_text": "BSSID"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x01",
          "define": "SECURITY_TYPE",
          "type": "SecurityType",
          "writable": "false",
          "isNullable": "true",
          "optional": "false"
        },
        "_text": "SecurityType"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x02",
          "define": "WIFI_VERSION",
          "type": "WiFiVersionType",
          "writable": "false",
          "isNullable": "true",
          "optional": "false"
        },
        "_text": "WiFiVersion"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x03",
          "define": "CHANNEL_NUMBER",
          "type": "INT16U",
          "min": "0x0000",
          "max": "0xFFFF",
          "writable": "false",
          "default": "0x0000",
          "isNullable": "true",
          "optional": "false"
        },
        "_text": "ChannelNumber"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x04",
          "define": "RSSI",
          "type": "INT8S",
          "min": "-120",
          "max": "0",
          "writable": "false",
          "isNullable": "true",
          "optional": "false"
        },
        "_text": "RSSI"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x05",
          "define": "BEACON_LOST_COUNT",
          "type": "INT32U",
          "min": "0x00000000",
          "max": "0xFFFFFFFF",
          "writable": "false",
          "default": "0x00000000",
          "isNullable": "true",
          "optional": "true"
        },
        "_text": "BeaconLostCount"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x06",
          "define": "BEACON_RX_COUNT",
          "type": "INT32U",
          "min": "0x00000000",
          "max": "0xFFFFFFFF",
          "writable": "false",
          "default": "0x00000000",
          "isNullable": "true",
          "optional": "true"
        },
        "_text": "BeaconRxCount"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x07",
          "define": "PACKET_MULTICAST_RX_COUNT",
          "type": "INT32U",
          "min": "0x00000000",
          "max": "0xFFFFFFFF",
          "writable": "false",
          "default": "0x00000000",
          "isNullable": "true",
          "optional": "true"
        },
        "_text": "PacketMulticastRxCount"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x08",
          "define": "PACKET_MULTICAST_TX_COUNT",
          "type": "INT32U",
          "min": "0x00000000",
          "max": "0xFFFFFFFF",
          "writable": "false",
          "default": "0x00000000",
          "isNullable": "true",
          "optional": "true"
        },
        "_text": "PacketMulticastTxCount"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x09",
          "define": "PACKET_UNICAST_RX_COUNT",
          "type": "INT32U",
          "min": "0x00000000",
          "max": "0xFFFFFFFF",
          "writable": "false",
          "default": "0x00000000",
          "isNullable": "true",
          "optional": "true"
        },
        "_text": "PacketUnicastRxCount"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0A",
          "define": "PACKET_UNICAST_TX_COUNT",
          "type": "INT32U",
          "min": "0x00000000",
          "max": "0xFFFFFFFF",
          "writable": "false",
          "default": "0x00000000",
          "isNullable": "true",
          "optional": "true"
        },
        "_text": "PacketUnicastTxCount"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0B",
          "define": "CURRENT_MAX_RATE",
          "type": "INT64U",
          "min": "0x0000000000000000",
          "max": "0xFFFFFFFFFFFFFFFF",
          "writable": "false",
          "default": "0x0000000000000000",
          "isNullable": "true",
          "optional": "true"
        },
        "_text": "CurrentMaxRate"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0C",
          "define": "OVERRUN_COUNT",
          "type": "INT64U",
          "min": "0x0000000000000000",
          "max": "0xFFFFFFFFFFFFFFFF",
          "writable": "false",
          "default": "0x0000000000000000",
          "isNullable": "true",
          "optional": "true"
        },
        "_text": "OverrunCount"
      }
    ],
    "command": {
      "_attributes": {
        "source": "client",
        "code": "0x00",
        "name": "ResetCounts",
        "optional": "true",
        "cli": "chip wifi_network_diagnostics resetcounts"
      },
      "description": {
        "_text": "Reception of this command SHALL reset the Breacon and Packet related count attributes to 0"
      }
    },
    "event": [
      {
        "_attributes": {
          "side": "server",
          "code": "0x00",
          "name": "Disconnection",
          "priority": "info",
          "optional": "true"
        },
        "description": {
          "_text": "Indicate that a Node’s Wi-Fi connection has been disconnected as a result of de-authenticated or dis-association and indicates the reason."
        },
        "field": {
          "_attributes": {
            "id": "0",
            "name": "ReasonCode",
            "type": "INT16U"
          }
        }
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x01",
          "name": "AssociationFailure",
          "priority": "info",
          "optional": "true"
        },
        "description": {
          "_text": "Indicate that a Node has failed to connect, or reconnect, to a Wi-Fi access point."
        },
        "field": [
          {
            "_attributes": {
              "id": "0",
              "name": "AssociationFailure",
              "type": "AssociationFailureCause"
            }
          },
          {
            "_attributes": {
              "id": "1",
              "name": "Status",
              "type": "INT16U"
            }
          }
        ]
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x02",
          "name": "ConnectionStatus",
          "priority": "info",
          "optional": "true"
        },
        "description": {
          "_text": "Indicate that a Node’s connection status to a Wi-Fi network has changed."
        },
        "field": {
          "_attributes": {
            "id": "0",
            "name": "ConnectionStatus",
            "type": "WiFiConnectionStatus"
          }
        }
      }
    ]
  },
  "55": {
    "domain": {
      "_text": "General"
    },
    "name": {
      "_text": "Ethernet Network Diagnostics"
    },
    "code": {
      "_text": "0x0037"
    },
    "define": {
      "_text": "ETHERNET_NETWORK_DIAGNOSTICS_CLUSTER"
    },
    "description": {
      "_text": "The Ethernet Network Diagnostics Cluster provides a means to acquire standardized diagnostics metrics that MAY be used by a Node to assist a user or Administrative Node in diagnosing potential problems."
    },
    "attribute": [
      {
        "_attributes": {
          "side": "server",
          "code": "0x00",
          "define": "PHY_RATE",
          "type": "PHYRateEnum",
          "writable": "false",
          "isNullable": "true",
          "optional": "true"
        },
        "_text": "PHYRate"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x01",
          "define": "FULL_DUPLEX",
          "type": "BOOLEAN",
          "min": "0x00",
          "max": "0x01",
          "writable": "false",
          "isNullable": "true",
          "optional": "true"
        },
        "_text": "FullDuplex"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x02",
          "define": "PACKET_RX_COUNT",
          "type": "INT64U",
          "min": "0x0000000000000000",
          "max": "0xFFFFFFFFFFFFFFFF",
          "writable": "false",
          "default": "0x0000000000000000",
          "optional": "true"
        },
        "_text": "PacketRxCount"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x03",
          "define": "PACKET_TX_COUNT",
          "type": "INT64U",
          "min": "0x0000000000000000",
          "max": "0xFFFFFFFFFFFFFFFF",
          "writable": "false",
          "default": "0x0000000000000000",
          "optional": "true"
        },
        "_text": "PacketTxCount"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x04",
          "define": "TX_ERR_COUNT",
          "type": "INT64U",
          "min": "0x0000000000000000",
          "max": "0xFFFFFFFFFFFFFFFF",
          "writable": "false",
          "default": "0x0000000000000000",
          "optional": "true"
        },
        "_text": "TxErrCount"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x05",
          "define": "COLLISION_COUNT",
          "type": "INT64U",
          "min": "0x0000000000000000",
          "max": "0xFFFFFFFFFFFFFFFF",
          "writable": "false",
          "default": "0x0000000000000000",
          "optional": "true"
        },
        "_text": "CollisionCount"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x06",
          "define": "ETHERNET_OVERRUN_COUNT",
          "type": "INT64U",
          "min": "0x0000000000000000",
          "max": "0xFFFFFFFFFFFFFFFF",
          "writable": "false",
          "default": "0x0000000000000000",
          "optional": "true"
        },
        "_text": "OverrunCount"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x07",
          "define": "CARRIER_DETECT",
          "type": "BOOLEAN",
          "min": "0x00",
          "max": "0x01",
          "writable": "false",
          "isNullable": "true",
          "optional": "true"
        },
        "_text": "CarrierDetect"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x08",
          "define": "TIME_SINCE_RESET",
          "type": "INT64U",
          "min": "0x0000000000000000",
          "max": "0xFFFFFFFFFFFFFFFF",
          "writable": "false",
          "default": "0x0000000000000000",
          "optional": "true"
        },
        "_text": "TimeSinceReset"
      }
    ],
    "command": {
      "_attributes": {
        "source": "client",
        "code": "0x00",
        "name": "ResetCounts",
        "optional": "false",
        "cli": "chip ethernet_network_diagnostics resetcounts"
      },
      "description": {
        "_text": "Reception of this command SHALL reset the attributes: PacketRxCount, PacketTxCount, TxErrCount, CollisionCount, OverrunCount to 0"
      }
    }
  },
  "56": {
    "domain": {
      "_text": "General"
    },
    "name": {
      "_text": "Time Synchronization"
    },
    "code": {
      "_text": "0x0038"
    },
    "define": {
      "_text": "TIME_SYNCHRONIZATION_CLUSTER"
    },
    "client": {
      "_attributes": {
        "init": "false",
        "tick": "false"
      },
      "_text": "true"
    },
    "server": {
      "_attributes": {
        "init": "false",
        "tick": "false"
      },
      "_text": "true"
    },
    "description": {
      "_text": "Accurate time is required for a number of reasons, including scheduling, display and validating\nsecurity materials."
    },
    "_comment": [" Base data types ", " Test Commands "],
    "attribute": [
      {
        "_attributes": {
          "side": "server",
          "code": "0x0000",
          "define": "UTC_TIME",
          "type": "epoch_us",
          "isNullable": "true",
          "optional": "false"
        },
        "_text": "UTCTime"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0001",
          "define": "GRANULARITY",
          "type": "GranularityEnum",
          "default": "0x00",
          "optional": "false"
        },
        "_text": "Granularity"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0002",
          "define": "TIME_SOURCE",
          "type": "TimeSourceEnum",
          "default": "0x00",
          "optional": "true"
        },
        "_text": "TimeSource"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0003",
          "define": "TRUSTED_TIME_NODE_ID",
          "type": "node_id",
          "writable": "true",
          "isNullable": "true",
          "optional": "false"
        },
        "description": {
          "_text": "TrustedTimeNodeId"
        },
        "access": [
          {
            "_attributes": {
              "op": "read",
              "privilege": "view"
            }
          },
          {
            "_attributes": {
              "op": "write",
              "privilege": "administer"
            }
          }
        ]
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0004",
          "define": "DEFAULT_NTP",
          "type": "CHAR_STRING",
          "length": "128",
          "writable": "true",
          "isNullable": "true",
          "optional": "true"
        },
        "description": {
          "_text": "DefaultNtp"
        },
        "access": [
          {
            "_attributes": {
              "op": "read",
              "privilege": "view"
            }
          },
          {
            "_attributes": {
              "op": "write",
              "privilege": "administer"
            }
          }
        ]
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0005",
          "define": "TIME_ZONE",
          "type": "ARRAY",
          "entryType": "TimeZoneType",
          "min": "1",
          "max": "2",
          "writable": "true",
          "optional": "true"
        },
        "description": {
          "_text": "TimeZone"
        },
        "access": [
          {
            "_attributes": {
              "op": "read",
              "privilege": "view"
            }
          },
          {
            "_attributes": {
              "op": "write",
              "privilege": "manage"
            }
          }
        ]
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0006",
          "define": "DST_OFFSET",
          "type": "ARRAY",
          "entryType": "DstOffsetType",
          "max": "20",
          "writable": "true",
          "optional": "true"
        },
        "description": {
          "_text": "DstOffset"
        },
        "access": [
          {
            "_attributes": {
              "op": "read",
              "privilege": "view"
            }
          },
          {
            "_attributes": {
              "op": "write",
              "privilege": "manage"
            }
          }
        ]
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0007",
          "define": "LOCAL_TIME",
          "type": "epoch_us",
          "default": "0x00",
          "isNullable": "true",
          "optional": "true"
        },
        "_text": "LocalTime"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0008",
          "define": "TIME_ZONE_DATABASE",
          "type": "boolean",
          "default": "0",
          "optional": "true"
        },
        "_text": "TimeZoneDatabase"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0009",
          "define": "NTP_SERVER_PORT",
          "type": "INT16U",
          "isNullable": "true",
          "optional": "true"
        },
        "_text": "NtpServerPort"
      }
    ],
    "command": {
      "_attributes": {
        "source": "client",
        "code": "0x00",
        "name": "SetUtcTime",
        "optional": "false"
      },
      "description": {
        "_text": "Upon receipt of this command, the server MAY update its UTCTime Attribute to match the time specified in the command"
      },
      "arg": [
        {
          "_attributes": {
            "name": "UtcTime",
            "type": "epoch_us"
          }
        },
        {
          "_attributes": {
            "name": "Granularity",
            "type": "GranularityEnum"
          }
        },
        {
          "_attributes": {
            "name": "TimeSource",
            "type": "TimeSourceEnum",
            "optional": "true"
          }
        }
      ]
    }
  },
  "57": {
    "name": {
      "_text": "Bridged Device Basic Information"
    },
    "domain": {
      "_text": "CHIP"
    },
    "description": {
      "_text": "This Cluster serves two purposes towards a Node communicating with a Bridge: indicate that the functionality on\n          the Endpoint where it is placed (and its Parts) is bridged from a non-CHIP technology; and provide a centralized\n          collection of attributes that the Node MAY collect to aid in conveying information regarding the Bridged Device to a user,\n          such as the vendor name, the model name, or user-assigned name."
    },
    "code": {
      "_text": "0x0039"
    },
    "define": {
      "_text": "BRIDGED_DEVICE_BASIC_INFORMATION_CLUSTER"
    },
    "client": {
      "_attributes": {
        "tick": "false",
        "init": "false"
      },
      "_text": "true"
    },
    "server": {
      "_attributes": {
        "tick": "false",
        "init": "false"
      },
      "_text": "true"
    },
    "globalAttribute": {
      "_attributes": {
        "side": "either",
        "code": "0xFFFD",
        "value": "1"
      }
    },
    "attribute": [
      {
        "_attributes": {
          "side": "server",
          "code": "1",
          "define": "VENDOR_NAME",
          "type": "char_string",
          "length": "32",
          "optional": "true"
        },
        "_text": "VendorName"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "2",
          "define": "VENDOR_ID",
          "type": "vendor_id",
          "optional": "true"
        },
        "_text": "VendorID"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "3",
          "define": "PRODUCT_NAME",
          "type": "char_string",
          "length": "32",
          "optional": "true"
        },
        "_text": "ProductName"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "5",
          "define": "NODE_LABEL",
          "type": "char_string",
          "length": "32",
          "default": "",
          "writable": "true",
          "optional": "true"
        },
        "_text": "NodeLabel"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "7",
          "define": "HARDWARE_VERSION",
          "type": "int16u",
          "default": "0",
          "optional": "true"
        },
        "_text": "HardwareVersion"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "8",
          "define": "HARDWARE_VERSION_STRING",
          "type": "char_string",
          "minLength": "1",
          "length": "64",
          "optional": "true"
        },
        "_text": "HardwareVersionString"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "9",
          "define": "SOFTWARE_VERSION",
          "type": "int32u",
          "default": "0",
          "optional": "true"
        },
        "_text": "SoftwareVersion"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "10",
          "define": "SOFTWARE_VERSION_STRING",
          "type": "char_string",
          "minLength": "1",
          "length": "64",
          "optional": "true"
        },
        "_text": "SoftwareVersionString"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "11",
          "define": "MANUFACTURING_DATE",
          "type": "char_string",
          "minLength": "8",
          "length": "16",
          "optional": "true"
        },
        "_text": "ManufacturingDate"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "12",
          "define": "PART_NUMBER",
          "type": "char_string",
          "length": "32",
          "optional": "true"
        },
        "_text": "PartNumber"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "13",
          "define": "PRODUCT_URL",
          "type": "long_char_string",
          "length": "256",
          "optional": "true"
        },
        "_text": "ProductURL"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "14",
          "define": "PRODUCT_LABEL",
          "type": "char_string",
          "length": "64",
          "optional": "true"
        },
        "_text": "ProductLabel"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "15",
          "define": "SERIAL_NUMBER",
          "type": "char_string",
          "length": "32",
          "optional": "true"
        },
        "_text": "SerialNumber"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "17",
          "define": "REACHABLE",
          "type": "boolean",
          "default": "1",
          "optional": "false"
        },
        "_text": "Reachable"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "18",
          "define": "UNIQUE_ID",
          "type": "char_string",
          "length": "32",
          "optional": "true"
        },
        "_text": "UniqueID"
      }
    ],
    "event": [
      {
        "_attributes": {
          "side": "server",
          "code": "0x00",
          "name": "StartUp",
          "priority": "critical",
          "optional": "true"
        },
        "description": {
          "_text": "The StartUp event SHALL be emitted by a Node as soon as reasonable after completing a boot or reboot process."
        },
        "field": {
          "_attributes": {
            "id": "0",
            "name": "SoftwareVersion",
            "type": "INT32U"
          }
        }
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x01",
          "name": "ShutDown",
          "priority": "critical",
          "optional": "true"
        },
        "description": {
          "_text": "The ShutDown event SHOULD be emitted by a Node prior to any orderly shutdown sequence on a best-effort basis."
        }
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x02",
          "name": "Leave",
          "priority": "info",
          "optional": "true"
        },
        "description": {
          "_text": "The Leave event SHOULD be emitted by a Node prior to permanently leaving the Fabric."
        }
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x03",
          "name": "ReachableChanged",
          "priority": "info",
          "optional": "false"
        },
        "description": {
          "_text": "This event SHALL be generated when there is a change in the Reachable attribute."
        },
        "field": {
          "_attributes": {
            "id": "0",
            "name": "ReachableNewValue",
            "type": "boolean"
          }
        }
      }
    ]
  },
  "59": {
    "domain": {
      "_text": "CHIP"
    },
    "name": {
      "_text": "Switch"
    },
    "code": {
      "_text": "0x003b"
    },
    "define": {
      "_text": "SWITCH_CLUSTER"
    },
    "client": {
      "_attributes": {
        "init": "false",
        "tick": "false"
      },
      "_text": "true"
    },
    "server": {
      "_attributes": {
        "init": "false",
        "tick": "false"
      },
      "_text": "true"
    },
    "description": {
      "_text": "This cluster exposes interactions with a switch device, for the purpose of using those interactions by other devices.\nTwo types of switch devices are supported: latching switch (e.g. rocker switch) and momentary switch (e.g. push button), distinguished with their feature flags.\nInteractions with the switch device are exposed as attributes (for the latching switch) and as events (for both types of switches). An interested party MAY subscribe to these attributes/events and thus be informed of the interactions, and can perform actions based on this, for example by sending commands to perform an action such as controlling a light or a window shade."
    },
    "globalAttribute": [
      {
        "_attributes": {
          "side": "server",
          "code": "0xFFFC",
          "value": "0"
        }
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0xFFFD",
          "value": "1"
        }
      }
    ],
    "attribute": [
      {
        "_attributes": {
          "side": "server",
          "code": "0x0000",
          "define": "NUMBER_OF_POSITIONS",
          "type": "INT8U",
          "writable": "false",
          "optional": "false",
          "default": "2",
          "min": "2"
        },
        "_text": "NumberOfPositions"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0001",
          "define": "CURRENT_POSITION",
          "type": "INT8U",
          "writable": "false",
          "reportable": "true",
          "optional": "false"
        },
        "_text": "CurrentPosition"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0002",
          "define": "MULTI_PRESS_MAX",
          "type": "INT8U",
          "writable": "false",
          "optional": "true",
          "default": "2",
          "min": "2"
        },
        "_text": "MultiPressMax"
      }
    ],
    "event": [
      {
        "_attributes": {
          "side": "server",
          "code": "0x00",
          "priority": "info",
          "name": "SwitchLatched",
          "optional": "true"
        },
        "description": {
          "_text": "SwitchLatched"
        },
        "field": {
          "_attributes": {
            "id": "0",
            "name": "NewPosition",
            "type": "INT8U"
          }
        }
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x01",
          "priority": "info",
          "name": "InitialPress",
          "optional": "true"
        },
        "description": {
          "_text": "InitialPress"
        },
        "field": {
          "_attributes": {
            "id": "0",
            "name": "NewPosition",
            "type": "INT8U"
          }
        }
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x02",
          "priority": "info",
          "name": "LongPress",
          "optional": "true"
        },
        "description": {
          "_text": "LongPress"
        },
        "field": {
          "_attributes": {
            "id": "0",
            "name": "NewPosition",
            "type": "INT8U"
          }
        }
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x03",
          "priority": "info",
          "name": "ShortRelease",
          "optional": "true"
        },
        "description": {
          "_text": "ShortRelease"
        },
        "field": {
          "_attributes": {
            "id": "0",
            "name": "PreviousPosition",
            "type": "INT8U"
          }
        }
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x04",
          "priority": "info",
          "name": "LongRelease",
          "optional": "true"
        },
        "description": {
          "_text": "LongRelease"
        },
        "field": {
          "_attributes": {
            "id": "0",
            "name": "PreviousPosition",
            "type": "INT8U"
          }
        }
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x05",
          "priority": "info",
          "name": "MultiPressOngoing",
          "optional": "true"
        },
        "description": {
          "_text": "MultiPressOngoing"
        },
        "field": [
          {
            "_attributes": {
              "id": "0",
              "name": "NewPosition",
              "type": "INT8U"
            }
          },
          {
            "_attributes": {
              "id": "1",
              "name": "CurrentNumberOfPressesCounted",
              "type": "INT8U"
            }
          }
        ]
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x06",
          "priority": "info",
          "name": "MultiPressComplete",
          "optional": "true"
        },
        "description": {
          "_text": "MultiPressComplete"
        },
        "field": [
          {
            "_attributes": {
              "id": "0",
              "name": "PreviousPosition",
              "type": "INT8U"
            }
          },
          {
            "_attributes": {
              "id": "1",
              "name": "TotalNumberOfPressesCounted",
              "type": "INT8U"
            }
          }
        ]
      }
    ]
  },
  "60": {
    "name": {
      "_text": "Administrator Commissioning"
    },
    "domain": {
      "_text": "General"
    },
    "code": {
      "_text": "0x003c"
    },
    "define": {
      "_text": "ADMINISTRATOR_COMMISSIONING_CLUSTER"
    },
    "description": {
      "_text": "Commands to trigger a Node to allow a new Administrator to commission it."
    },
    "attribute": [
      {
        "_attributes": {
          "side": "server",
          "code": "0x0000",
          "define": "WINDOW_STATUS",
          "type": "CommissioningWindowStatusEnum",
          "writable": "false",
          "optional": "false"
        },
        "_text": "WindowStatus"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0001",
          "define": "ADMIN_FABRIC_INDEX",
          "type": "fabric_idx",
          "writable": "false",
          "isNullable": "true",
          "optional": "false"
        },
        "_text": "AdminFabricIndex"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0002",
          "define": "ADMIN_VENDOR_ID",
          "type": "INT16U",
          "writable": "false",
          "isNullable": "true",
          "optional": "false"
        },
        "_text": "AdminVendorId"
      }
    ],
    "command": [
      {
        "_attributes": {
          "source": "client",
          "code": "0x00",
          "name": "OpenCommissioningWindow",
          "mustUseTimedInvoke": "true",
          "optional": "false"
        },
        "description": {
          "_text": "This command is used by a current Administrator to instruct a Node to go into commissioning mode using enhanced commissioning method."
        },
        "arg": [
          {
            "_attributes": {
              "name": "CommissioningTimeout",
              "type": "INT16U"
            }
          },
          {
            "_attributes": {
              "name": "PAKEPasscodeVerifier",
              "type": "OCTET_STRING"
            }
          },
          {
            "_attributes": {
              "name": "Discriminator",
              "type": "INT16U"
            }
          },
          {
            "_attributes": {
              "name": "Iterations",
              "type": "INT32U"
            }
          },
          {
            "_attributes": {
              "name": "Salt",
              "type": "OCTET_STRING"
            }
          }
        ],
        "access": {
          "_attributes": {
            "op": "invoke",
            "privilege": "administer"
          }
        }
      },
      {
        "_attributes": {
          "source": "client",
          "code": "0x01",
          "name": "OpenBasicCommissioningWindow",
          "mustUseTimedInvoke": "true",
          "optional": "true"
        },
        "description": {
          "_text": "This command is used by a current Administrator to instruct a Node to go into commissioning mode using basic commissioning method, if the node supports it."
        },
        "arg": {
          "_attributes": {
            "name": "CommissioningTimeout",
            "type": "INT16U"
          }
        },
        "access": {
          "_attributes": {
            "op": "invoke",
            "privilege": "administer"
          }
        }
      },
      {
        "_attributes": {
          "source": "client",
          "code": "0x02",
          "name": "RevokeCommissioning",
          "mustUseTimedInvoke": "true",
          "optional": "false"
        },
        "description": {
          "_text": "This command is used by a current Administrator to instruct a Node to revoke any active Open Commissioning Window or Open Basic Commissioning Window command."
        },
        "access": {
          "_attributes": {
            "op": "invoke",
            "privilege": "administer"
          }
        }
      }
    ]
  },
  "62": {
    "domain": {
      "_text": "General"
    },
    "name": {
      "_text": "Operational Credentials"
    },
    "code": {
      "_text": "0x003E"
    },
    "define": {
      "_text": "OPERATIONAL_CREDENTIALS_CLUSTER"
    },
    "description": {
      "_text": "This cluster is used to add or remove Operational Credentials on a Commissionee or Node, as well as manage the associated Fabrics."
    },
    "attribute": [
      {
        "_attributes": {
          "side": "server",
          "code": "0x0000",
          "define": "NOCS",
          "type": "ARRAY",
          "entryType": "NOCStruct",
          "writable": "false",
          "optional": "false"
        },
        "description": {
          "_text": "NOCs"
        },
        "access": {
          "_attributes": {
            "op": "read",
            "privilege": "administer"
          }
        }
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0001",
          "define": "FABRICS",
          "type": "ARRAY",
          "entryType": "FabricDescriptorStruct",
          "writable": "false",
          "optional": "false"
        },
        "_text": "Fabrics"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0002",
          "define": "SUPPORTED_FABRICS",
          "type": "INT8U",
          "writable": "false",
          "optional": "false"
        },
        "_text": "SupportedFabrics"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0003",
          "define": "COMMISSIONED_FABRICS",
          "type": "INT8U",
          "writable": "false",
          "optional": "false"
        },
        "_text": "CommissionedFabrics"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0004",
          "define": "TRUSTED_ROOT_CERTIFICATES",
          "type": "ARRAY",
          "entryType": "OCTET_STRING",
          "writable": "false",
          "optional": "false"
        },
        "_text": "TrustedRootCertificates"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0005",
          "define": "CURRENT_FABRIC_INDEX",
          "type": "INT8U",
          "writable": "false",
          "optional": "false"
        },
        "_text": "CurrentFabricIndex"
      }
    ],
    "command": [
      {
        "_attributes": {
          "source": "client",
          "code": "0x00",
          "name": "AttestationRequest",
          "response": "AttestationResponse",
          "optional": "false"
        },
        "description": {
          "_text": "Sender is requesting attestation information from the receiver."
        },
        "arg": {
          "_attributes": {
            "name": "AttestationNonce",
            "type": "OCTET_STRING"
          }
        },
        "access": {
          "_attributes": {
            "op": "invoke",
            "privilege": "administer"
          }
        }
      },
      {
        "_attributes": {
          "source": "server",
          "code": "0x01",
          "name": "AttestationResponse",
          "optional": "false"
        },
        "description": {
          "_text": "An attestation information confirmation from the server."
        },
        "arg": [
          {
            "_attributes": {
              "name": "AttestationElements",
              "type": "OCTET_STRING"
            }
          },
          {
            "_attributes": {
              "name": "AttestationSignature",
              "type": "OCTET_STRING"
            }
          }
        ]
      },
      {
        "_attributes": {
          "source": "client",
          "code": "0x02",
          "name": "CertificateChainRequest",
          "response": "CertificateChainResponse",
          "optional": "false"
        },
        "description": {
          "_text": "Sender is requesting a device attestation certificate from the receiver."
        },
        "arg": {
          "_attributes": {
            "name": "CertificateType",
            "type": "CertificateChainTypeEnum"
          }
        },
        "access": {
          "_attributes": {
            "op": "invoke",
            "privilege": "administer"
          }
        }
      },
      {
        "_attributes": {
          "source": "server",
          "code": "0x03",
          "name": "CertificateChainResponse",
          "optional": "false"
        },
        "description": {
          "_text": "A device attestation certificate (DAC) or product attestation intermediate (PAI) certificate from the server."
        },
        "arg": {
          "_attributes": {
            "name": "Certificate",
            "type": "OCTET_STRING"
          }
        }
      },
      {
        "_attributes": {
          "source": "client",
          "code": "0x04",
          "name": "CSRRequest",
          "response": "CSRResponse",
          "optional": "false"
        },
        "description": {
          "_text": "Sender is requesting a certificate signing request (CSR) from the receiver."
        },
        "arg": [
          {
            "_attributes": {
              "name": "CSRNonce",
              "type": "OCTET_STRING"
            }
          },
          {
            "_attributes": {
              "name": "IsForUpdateNOC",
              "type": "boolean",
              "optional": "true"
            }
          }
        ],
        "access": {
          "_attributes": {
            "op": "invoke",
            "privilege": "administer"
          }
        }
      },
      {
        "_attributes": {
          "source": "server",
          "code": "0x05",
          "name": "CSRResponse",
          "optional": "false"
        },
        "description": {
          "_text": "A certificate signing request (CSR) from the server."
        },
        "arg": [
          {
            "_attributes": {
              "name": "NOCSRElements",
              "type": "OCTET_STRING"
            }
          },
          {
            "_attributes": {
              "name": "AttestationSignature",
              "type": "OCTET_STRING"
            }
          }
        ]
      },
      {
        "_attributes": {
          "source": "client",
          "code": "0x06",
          "name": "AddNOC",
          "response": "NOCResponse",
          "optional": "false"
        },
        "description": {
          "_text": "Sender is requesting to add the new node operational certificates."
        },
        "arg": [
          {
            "_attributes": {
              "name": "NOCValue",
              "type": "OCTET_STRING"
            }
          },
          {
            "_attributes": {
              "name": "ICACValue",
              "type": "OCTET_STRING",
              "optional": "true"
            }
          },
          {
            "_attributes": {
              "name": "IPKValue",
              "type": "OCTET_STRING"
            }
          },
          {
            "_attributes": {
              "name": "CaseAdminSubject",
              "type": "Int64u"
            }
          },
          {
            "_attributes": {
              "name": "AdminVendorId",
              "type": "VENDOR_ID"
            }
          }
        ],
        "access": {
          "_attributes": {
            "op": "invoke",
            "privilege": "administer"
          }
        }
      },
      {
        "_attributes": {
          "source": "client",
          "code": "0x07",
          "name": "UpdateNOC",
          "response": "NOCResponse",
          "isFabricScoped": "true",
          "optional": "false"
        },
        "description": {
          "_text": "Sender is requesting to update the node operational certificates."
        },
        "arg": [
          {
            "_attributes": {
              "name": "NOCValue",
              "type": "OCTET_STRING"
            }
          },
          {
            "_attributes": {
              "name": "ICACValue",
              "type": "OCTET_STRING",
              "optional": "true"
            }
          }
        ],
        "access": {
          "_attributes": {
            "op": "invoke",
            "privilege": "administer"
          }
        }
      },
      {
        "_attributes": {
          "source": "server",
          "code": "0x08",
          "name": "NOCResponse",
          "optional": "false"
        },
        "description": {
          "_text": "Response to AddNOC or UpdateNOC commands."
        },
        "arg": [
          {
            "_attributes": {
              "name": "StatusCode",
              "type": "NodeOperationalCertStatusEnum"
            }
          },
          {
            "_attributes": {
              "name": "FabricIndex",
              "type": "fabric_idx",
              "optional": "true"
            }
          },
          {
            "_attributes": {
              "name": "DebugText",
              "type": "CHAR_STRING",
              "optional": "true"
            }
          }
        ]
      },
      {
        "_attributes": {
          "source": "client",
          "code": "0x09",
          "name": "UpdateFabricLabel",
          "response": "NOCResponse",
          "isFabricScoped": "true",
          "optional": "false"
        },
        "description": {
          "_text": "This command SHALL be used by an Administrative Node to set the user-visible Label field for a given Fabric, as reflected by entries in the Fabrics attribute."
        },
        "arg": {
          "_attributes": {
            "name": "Label",
            "type": "CHAR_STRING",
            "length": "32"
          }
        },
        "access": {
          "_attributes": {
            "op": "invoke",
            "privilege": "administer"
          }
        }
      },
      {
        "_attributes": {
          "source": "client",
          "code": "0x0a",
          "name": "RemoveFabric",
          "response": "NOCResponse",
          "optional": "false"
        },
        "description": {
          "_text": "This command is used by Administrative Nodes to remove a given fabric index and delete all associated fabric-scoped data."
        },
        "arg": {
          "_attributes": {
            "name": "FabricIndex",
            "type": "fabric_idx"
          }
        },
        "access": {
          "_attributes": {
            "op": "invoke",
            "privilege": "administer"
          }
        }
      },
      {
        "_attributes": {
          "source": "client",
          "code": "0x0b",
          "name": "AddTrustedRootCertificate",
          "optional": "false"
        },
        "description": {
          "_text": "This command SHALL add a Trusted Root CA Certificate, provided as its CHIP Certificate representation."
        },
        "arg": {
          "_attributes": {
            "name": "RootCACertificate",
            "type": "OCTET_STRING"
          }
        },
        "access": {
          "_attributes": {
            "op": "invoke",
            "privilege": "administer"
          }
        }
      }
    ],
    "_comment": " TODO: Fix to match chip-spec:#3346 "
  },
  "63": {
    "domain": {
      "_text": "General"
    },
    "name": {
      "_text": "Group Key Management"
    },
    "code": {
      "_text": "0x003F"
    },
    "define": {
      "_text": "GROUP_KEY_MANAGEMENT_CLUSTER"
    },
    "description": {
      "_text": "The Group Key Management Cluster is the mechanism by which group keys are managed."
    },
    "attribute": [
      {
        "_attributes": {
          "side": "server",
          "code": "0x0000",
          "define": "GROUP_KEY_MAP",
          "type": "ARRAY",
          "length": "254",
          "entryType": "GroupKeyMapStruct",
          "writable": "true",
          "optional": "false"
        },
        "description": {
          "_text": "GroupKeyMap"
        },
        "access": [
          {
            "_attributes": {
              "op": "read",
              "privilege": "view"
            }
          },
          {
            "_attributes": {
              "op": "write",
              "privilege": "manage"
            }
          }
        ]
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0001",
          "define": "GROUP_TABLE",
          "type": "ARRAY",
          "length": "254",
          "entryType": "GroupInfoMapStruct",
          "writable": "false",
          "optional": "false"
        },
        "_text": "GroupTable"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0002",
          "define": "MAX_GROUPS_PER_FABRIC",
          "type": "INT16U",
          "writable": "false",
          "optional": "false"
        },
        "_text": "MaxGroupsPerFabric"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0003",
          "define": "MAX_GROUP_KEYS_PER_FABRIC",
          "type": "INT16U",
          "writable": "false",
          "optional": "false"
        },
        "_text": "MaxGroupKeysPerFabric"
      }
    ],
    "command": [
      {
        "_attributes": {
          "source": "client",
          "code": "0x00",
          "name": "KeySetWrite",
          "isFabricScoped": "true",
          "optional": "false",
          "cli": "zcl GroupKeyManagement KeySetWrite"
        },
        "description": {
          "_text": "Write a new set of keys for the given key set id."
        },
        "arg": {
          "_attributes": {
            "name": "GroupKeySet",
            "type": "GroupKeySetStruct"
          }
        },
        "access": {
          "_attributes": {
            "op": "invoke",
            "privilege": "administer"
          }
        }
      },
      {
        "_attributes": {
          "source": "client",
          "code": "0x01",
          "name": "KeySetRead",
          "isFabricScoped": "true",
          "response": "KeySetReadResponse",
          "optional": "false",
          "cli": "zcl GroupKeyManagement KeySetRead"
        },
        "description": {
          "_text": "Read the keys for a given key set id."
        },
        "arg": {
          "_attributes": {
            "name": "GroupKeySetID",
            "type": "INT16U"
          }
        },
        "access": {
          "_attributes": {
            "op": "invoke",
            "privilege": "administer"
          }
        }
      },
      {
        "_attributes": {
          "source": "server",
          "code": "0x02",
          "name": "KeySetReadResponse",
          "optional": "false",
          "disableDefaultResponse": "true"
        },
        "description": {
          "_text": "\n       Response to KeySetRead\n      "
        },
        "arg": {
          "_attributes": {
            "name": "GroupKeySet",
            "type": "GroupKeySetStruct"
          }
        }
      },
      {
        "_attributes": {
          "source": "client",
          "code": "0x03",
          "name": "KeySetRemove",
          "isFabricScoped": "true",
          "optional": "false",
          "cli": "zcl GroupKeyManagement KeySetRemove"
        },
        "description": {
          "_text": "Revoke a Root Key from a Group"
        },
        "arg": {
          "_attributes": {
            "name": "GroupKeySetID",
            "type": "INT16U"
          }
        },
        "access": {
          "_attributes": {
            "op": "invoke",
            "privilege": "administer"
          }
        }
      },
      {
        "_attributes": {
          "source": "client",
          "code": "0x04",
          "name": "KeySetReadAllIndices",
          "response": "KeySetReadAllIndicesResponse",
          "isFabricScoped": "true",
          "optional": "false",
          "cli": "zcl GroupKeyManagement KeySetReadAllIndices"
        },
        "description": {
          "_text": "Return the list of Group Key Sets associated with the accessing fabric"
        },
        "arg": {
          "_attributes": {
            "name": "GroupKeySetIDs",
            "type": "INT16U",
            "array": "true"
          }
        },
        "access": {
          "_attributes": {
            "op": "invoke",
            "privilege": "administer"
          }
        }
      },
      {
        "_attributes": {
          "source": "server",
          "code": "0x05",
          "name": "KeySetReadAllIndicesResponse",
          "optional": "false",
          "disableDefaultResponse": "true"
        },
        "description": {
          "_text": "\n        Reseponse to KeySetReadAllIndices\n      "
        },
        "arg": {
          "_attributes": {
            "name": "GroupKeySetIDs",
            "type": "INT16U",
            "array": "true"
          }
        }
      }
    ]
  },
  "64": {
    "domain": {
      "_text": "General"
    },
    "name": {
      "_text": "Fixed Label"
    },
    "code": {
      "_text": "0x0040"
    },
    "define": {
      "_text": "FIXED_LABEL_CLUSTER"
    },
    "description": {
      "_text": "The Fixed Label Cluster provides a feature for the device to tag an endpoint with zero or more read only\nlabels."
    },
    "attribute": {
      "_attributes": {
        "side": "server",
        "code": "0x0000",
        "define": "LABEL_LIST",
        "type": "ARRAY",
        "entryType": "LabelStruct",
        "length": "254",
        "writable": "false",
        "optional": "false"
      },
      "_text": "LabelList"
    }
  },
  "65": {
    "domain": {
      "_text": "General"
    },
    "name": {
      "_text": "User Label"
    },
    "code": {
      "_text": "0x0041"
    },
    "define": {
      "_text": "USER_LABEL_CLUSTER"
    },
    "description": {
      "_text": "The User Label Cluster provides a feature to tag an endpoint with zero or more labels."
    },
    "attribute": {
      "_attributes": {
        "side": "server",
        "code": "0x0000",
        "define": "LABEL_LIST",
        "type": "ARRAY",
        "entryType": "LabelStruct",
        "length": "254",
        "writable": "true",
        "optional": "false"
      },
      "description": {
        "_text": "LabelList"
      },
      "access": [
        {
          "_attributes": {
            "op": "read",
            "privilege": "view"
          }
        },
        {
          "_attributes": {
            "op": "write",
            "privilege": "manage"
          }
        }
      ]
    }
  },
  "66": {
    "domain": {
      "_text": "General"
    },
    "name": {
      "_text": "Proxy Configuration"
    },
    "code": {
      "_text": "0x0042"
    },
    "define": {
      "_text": "PROXY_CONFIGURATION_CLUSTER"
    },
    "description": {
      "_text": "Cluster to control Proxy Configuration"
    }
  },
  "67": {
    "domain": {
      "_text": "General"
    },
    "name": {
      "_text": "Proxy Discovery"
    },
    "code": {
      "_text": "0x0043"
    },
    "define": {
      "_text": "PROXY_DISCOVERY_CLUSTER"
    },
    "description": {
      "_text": "Cluster to control Proxy Discovery"
    }
  },
  "68": {
    "domain": {
      "_text": "General"
    },
    "name": {
      "_text": "Proxy Valid"
    },
    "code": {
      "_text": "0x0044"
    },
    "define": {
      "_text": "PROXY_VALID_CLUSTER"
    },
    "description": {
      "_text": "Cluster to control Proxy Valid"
    }
  },
  "69": {
    "name": {
      "_text": "Boolean State"
    },
    "domain": {
      "_text": "General"
    },
    "description": {
      "_text": "This cluster provides an interface to a boolean state called StateValue."
    },
    "code": {
      "_text": "0x0045"
    },
    "define": {
      "_text": "BOOLEAN_STATE_CLUSTER"
    },
    "client": {
      "_attributes": {
        "tick": "false",
        "init": "false"
      },
      "_text": "true"
    },
    "server": {
      "_attributes": {
        "tick": "false",
        "init": "false"
      },
      "_text": "true"
    },
    "globalAttribute": {
      "_attributes": {
        "side": "either",
        "code": "0xFFFD",
        "value": "1"
      }
    },
    "attribute": {
      "_attributes": {
        "side": "server",
        "code": "0x0000",
        "define": "STATE_VALUE",
        "type": "boolean",
        "writable": "false",
        "default": "0",
        "reportable": "true",
        "optional": "false"
      },
      "_text": "StateValue"
    },
    "event": {
      "_attributes": {
        "code": "0x0000",
        "name": "StateChange",
        "priority": "info",
        "side": "server"
      },
      "description": {
        "_text": "This event SHALL be generated when the StateValue attribute changes."
      },
      "field": {
        "_attributes": {
          "id": "0",
          "name": "StateValue",
          "type": "boolean"
        }
      }
    }
  },
  "80": {
    "domain": {
      "_text": "General"
    },
    "name": {
      "_text": "Mode Select"
    },
    "code": {
      "_text": "0x0050"
    },
    "define": {
      "_text": "MODE_SELECT_CLUSTER"
    },
    "client": {
      "_attributes": {
        "init": "false",
        "tick": "false"
      },
      "_text": "true"
    },
    "server": {
      "_attributes": {
        "init": "false",
        "tick": "false"
      },
      "_text": "true"
    },
    "description": {
      "_text": "Attributes and commands for selecting a mode from a list of supported options."
    },
    "_comment": [" Base data types ", " Test Commands "],
    "attribute": [
      {
        "_attributes": {
          "side": "server",
          "code": "0x0000",
          "define": "MODE_DESCRIPTION",
          "type": "CHAR_STRING",
          "writable": "false",
          "optional": "false",
          "isNullable": "false",
          "length": "32"
        },
        "_text": "Description"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0001",
          "define": "STANDARD_NAMESPACE",
          "type": "ENUM16",
          "writable": "false",
          "optional": "false",
          "isNullable": "true"
        },
        "_text": "StandardNamespace"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0002",
          "define": "SUPPORTED_MODES",
          "type": "ARRAY",
          "entryType": "ModeOptionStruct",
          "writable": "false",
          "optional": "false",
          "isNullable": "false"
        },
        "_text": "SupportedModes"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0003",
          "define": "CURRENT_MODE",
          "type": "INT8U",
          "writable": "false",
          "optional": "false",
          "isNullable": "false",
          "reportable": "true"
        },
        "_text": "CurrentMode"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0004",
          "define": "START_UP_MODE",
          "type": "INT8U",
          "writable": "true",
          "optional": "true",
          "isNullable": "true"
        },
        "_text": "StartUpMode"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0005",
          "define": "ON_MODE",
          "type": "INT8U",
          "writable": "true",
          "optional": "true",
          "isNullable": "true"
        },
        "_text": "OnMode"
      }
    ],
    "command": {
      "_attributes": {
        "source": "client",
        "code": "0x00",
        "name": "ChangeToMode",
        "optional": "false"
      },
      "description": {
        "_text": "\n        On receipt of this command, if the NewMode field matches the Mode field in an entry of the SupportedModes list, the server SHALL set the CurrentMode attribute to the NewMode value, otherwise, the server SHALL respond with an INVALID_COMMAND status response.\n      "
      },
      "arg": {
        "_attributes": {
          "name": "NewMode",
          "type": "INT8U"
        }
      }
    }
  },
  "257": {
    "domain": {
      "_text": "Closures"
    },
    "name": {
      "_text": "Door Lock"
    },
    "code": {
      "_text": "0x0101"
    },
    "define": {
      "_text": "DOOR_LOCK_CLUSTER"
    },
    "description": {
      "_text": "An interface to a generic way to secure a door"
    },
    "_comment": [
      " Abbreviations used in descriptions ",
      " Current cluster version ",
      " Cluster feature map ",
      " The principle behind  mandatory/optional is the following:\n         1. If attribute/command is marked as mandatory it should be mandatory here.\n         2. If attribute/command is marked as optional it should be optional here.\n         3. Everything that depends on a certain feature is optional because we have no way\n            of setting up the dependencies here. Dependencies would be probably resolved in the\n            cluster itself. Those attributes/commands are marked with a special comment. ",
      " Attributes ",
      " Conformance feature DPS - for now optional ",
      " Conformance feature [DPS] - for now optional ",
      " Conformance feature [DPS] - for now optional ",
      " Conformance feature [DPS] - for now optional ",
      " Conformance feature USR - for now optional ",
      " Conformance feature PIN - for now optional ",
      " Conformance feature RFID - for now optional ",
      " Conformance feature WDSCH - for now optional ",
      " Conformance feature YDSCH - for now optional ",
      " Conformance feature HDSCH - for now optional ",
      " Conformance feature PIN - for now optional ",
      " Conformance feature PIN - for now optional ",
      " Conformance feature RID - for now optional ",
      " Conformance feature RID - for now optional ",
      " Conformance feature USR - for now optional ",
      " Conformance feature USR - for now optional  ",
      " Conformance feature PIN | RID - for now optional ",
      " Conformance feature PIN | RID - for now optional ",
      " Conformance feature [PIN] - for now optional ",
      " Conformance feature COTA & PIN - for now optional ",
      " Attribute SecurityLevel with code 52 is deprecated ",
      " Conformance feature [USR] - for now optional ",
      " Commands ",
      " Command Toggle with ID 2 is deprecated/disallowed ",
      " Conformance feature WDSCH - for now optional ",
      " Conformance feature WDSCH - for now optional ",
      " Conformance feature WDSCH - for now optional ",
      " Conformance feature WDSCH - for now optional ",
      " Conformance feature YDSCH - for now optional ",
      " Conformance feature YDSCH - for now optional ",
      " Conformance feature YDSCH - for now optional ",
      " Conformance feature YDSCH - for now optional ",
      " Conformance feature HDSCH - for now optional ",
      " Conformance feature HDSCH - for now optional ",
      " Conformance feature HDSCH - for now optional ",
      " Conformance feature HDSCH - for now optional ",
      " Conformance feature USR - for now optional ",
      " Conformance feature USR - for now optional ",
      " Conformance feature USR - for now optional ",
      " Conformance feature USR - for now optional ",
      " Conformance feature USR - for now optional ",
      " Conformance feature USR - for now optional ",
      " Conformance feature USR - for now optional ",
      " Conformance feature USR - for now optional ",
      " Conformance feature USR - for now optional ",
      " Events ",
      " Conformance feature DPS - for now optional "
    ],
    "tag": [
      {
        "_attributes": {
          "name": "PIN",
          "description": "PIN Credential"
        }
      },
      {
        "_attributes": {
          "name": "RID",
          "description": "RFID Credential"
        }
      },
      {
        "_attributes": {
          "name": "FGP",
          "description": "Finger Credentials"
        }
      },
      {
        "_attributes": {
          "name": "LOG",
          "description": "Logging"
        }
      },
      {
        "_attributes": {
          "name": "WDSCH",
          "description": "Week Day Access Schedules"
        }
      },
      {
        "_attributes": {
          "name": "DPS",
          "description": "Door Position Sensor"
        }
      },
      {
        "_attributes": {
          "name": "FACE",
          "description": "Face Credentials"
        }
      },
      {
        "_attributes": {
          "name": "COTA",
          "description": "Credential Over-the-Air Access"
        }
      },
      {
        "_attributes": {
          "name": "USR",
          "description": "User"
        }
      },
      {
        "_attributes": {
          "name": "NOT",
          "description": "Notification"
        }
      },
      {
        "_attributes": {
          "name": "YDSCH",
          "description": "Year Day Access Schedules"
        }
      },
      {
        "_attributes": {
          "name": "HDSCH",
          "description": "Holiday Schedules"
        }
      }
    ],
    "client": {
      "_attributes": {
        "tick": "false",
        "init": "false"
      },
      "_text": "true"
    },
    "server": {
      "_attributes": {
        "tick": "false",
        "init": "false"
      },
      "_text": "true"
    },
    "globalAttribute": [
      {
        "_attributes": {
          "side": "either",
          "code": "0xFFFD",
          "value": "6"
        }
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0xFFFC",
          "value": "0x0001"
        },
        "featureBit": [
          {
            "_attributes": {
              "tag": "PIN",
              "bit": "0"
            },
            "_text": "true"
          },
          {
            "_attributes": {
              "tag": "RID",
              "bit": "1"
            },
            "_text": "false"
          },
          {
            "_attributes": {
              "tag": "FGP",
              "bit": "2"
            },
            "_text": "false"
          },
          {
            "_attributes": {
              "tag": "LOG",
              "bit": "3"
            },
            "_text": "false"
          },
          {
            "_attributes": {
              "tag": "WDSCH",
              "bit": "4"
            },
            "_text": "true"
          },
          {
            "_attributes": {
              "tag": "DPS",
              "bit": "5"
            },
            "_text": "true"
          },
          {
            "_attributes": {
              "tag": "FACE",
              "bit": "6"
            },
            "_text": "false"
          },
          {
            "_attributes": {
              "tag": "COTA",
              "bit": "7"
            },
            "_text": "true"
          },
          {
            "_attributes": {
              "tag": "USR",
              "bit": "8"
            },
            "_text": "true"
          },
          {
            "_attributes": {
              "tag": "NOT",
              "bit": "9"
            },
            "_text": "false"
          },
          {
            "_attributes": {
              "tag": "YDSCH",
              "bit": "10"
            },
            "_text": "true"
          },
          {
            "_attributes": {
              "tag": "HDSCH",
              "bit": "11"
            },
            "_text": "true"
          }
        ],
        "_comment": " TODO: Depend on PIN | RID | FGP | FACE "
      }
    ],
    "attribute": [
      {
        "_attributes": {
          "side": "server",
          "code": "0",
          "define": "LOCK_STATE",
          "type": "DlLockState",
          "min": "0",
          "max": "2",
          "isNullable": "true",
          "reportable": "true",
          "writable": "false"
        },
        "_text": "LockState"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "1",
          "define": "LOCK_TYPE",
          "type": "DlLockType",
          "min": "0",
          "max": "10",
          "writable": "false"
        },
        "_text": "LockType"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "2",
          "define": "ACTUATOR_ENABLED",
          "type": "boolean",
          "writable": "false"
        },
        "_text": "ActuatorEnabled"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "3",
          "define": "DOOR_STATE",
          "type": "DoorStateEnum",
          "min": "0",
          "max": "5",
          "isNullable": "true",
          "reportable": "true",
          "optional": "true"
        },
        "_text": "DoorState"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "4",
          "define": "DOOR_OPEN_EVENTS",
          "type": "INT32U",
          "writable": "true",
          "optional": "true"
        },
        "description": {
          "_text": "DoorOpenEvents"
        },
        "access": [
          {
            "_attributes": {
              "op": "read",
              "role": "view"
            }
          },
          {
            "_attributes": {
              "op": "write",
              "role": "manage"
            }
          }
        ]
      },
      {
        "_attributes": {
          "side": "server",
          "code": "5",
          "define": "DOOR_CLOSED_EVENTS",
          "type": "INT32U",
          "writable": "true",
          "optional": "true"
        },
        "description": {
          "_text": "DoorClosedEvents"
        },
        "access": [
          {
            "_attributes": {
              "op": "read",
              "role": "view"
            }
          },
          {
            "_attributes": {
              "op": "write",
              "role": "manage"
            }
          }
        ]
      },
      {
        "_attributes": {
          "side": "server",
          "code": "6",
          "define": "OPEN_PERIOD",
          "type": "INT16U",
          "writable": "true",
          "optional": "true"
        },
        "description": {
          "_text": "OpenPeriod"
        },
        "access": [
          {
            "_attributes": {
              "op": "read",
              "role": "view"
            }
          },
          {
            "_attributes": {
              "op": "write",
              "role": "manage"
            }
          }
        ]
      },
      {
        "_attributes": {
          "side": "server",
          "code": "17",
          "define": "NUM_TOTAL_USERS_SUPPORTED",
          "type": "INT16U",
          "default": "0",
          "writable": "false",
          "optional": "true"
        },
        "_text": "NumberOfTotalUsersSupported"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "18",
          "define": "NUM_PIN_USERS_SUPPORTED",
          "type": "INT16U",
          "default": "0",
          "writable": "false",
          "optional": "true"
        },
        "_text": "NumberOfPINUsersSupported"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "19",
          "define": "NUM_RFID_USERS_SUPPORTED",
          "type": "INT16U",
          "default": "0",
          "writable": "false",
          "optional": "true"
        },
        "_text": "NumberOfRFIDUsersSupported"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "20",
          "define": "NUM_WEEKDAY_SCHEDULES_SUPPORTED_PER_USER",
          "type": "INT8U",
          "default": "0",
          "writable": "false",
          "optional": "true"
        },
        "_text": "NumberOfWeekDaySchedulesSupportedPerUser"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "21",
          "define": "NUM_YEARDAY_SCHEDULES_SUPPORTED_PER_USER",
          "type": "INT8U",
          "default": "0",
          "writable": "false",
          "optional": "true"
        },
        "_text": "NumberOfYearDaySchedulesSupportedPerUser"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "22",
          "define": "NUM_HOLIDAY_SCHEDULES_SUPPORTED",
          "type": "INT8U",
          "default": "0",
          "writable": "false",
          "optional": "true"
        },
        "_text": "NumberOfHolidaySchedulesSupported"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "23",
          "define": "MAX_PIN_LENGTH",
          "type": "INT8U",
          "writable": "false",
          "optional": "true"
        },
        "_text": "MaxPINCodeLength"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "24",
          "define": "MIN_PIN_LENGTH",
          "type": "INT8U",
          "writable": "false",
          "optional": "true"
        },
        "_text": "MinPINCodeLength"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "25",
          "define": "MAX_RFID_CODE_LENGTH",
          "type": "INT8U",
          "writable": "false",
          "optional": "true"
        },
        "_text": "MaxRFIDCodeLength"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "26",
          "define": "MIN_RFID_CODE_LENGTH",
          "type": "INT8U",
          "writable": "false",
          "optional": "true"
        },
        "_text": "MinRFIDCodeLength"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "27",
          "define": "CREDENTIAL_RULES_SUPPORT",
          "type": "DlCredentialRuleMask",
          "min": "0x00",
          "max": "0xFF",
          "default": "1",
          "writable": "false",
          "optional": "true"
        },
        "_text": "CredentialRulesSupport"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "28",
          "define": "NUM_CREDENTIALS_SUPPORTED_PER_USER",
          "type": "INT8U",
          "default": "0",
          "writable": "false",
          "optional": "true"
        },
        "_text": "NumberOfCredentialsSupportedPerUser"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "33",
          "define": "LANGUAGE",
          "type": "CHAR_STRING",
          "length": "3",
          "reportable": "true",
          "writable": "true",
          "optional": "true"
        },
        "description": {
          "_text": "Language"
        },
        "access": [
          {
            "_attributes": {
              "op": "read",
              "role": "view"
            }
          },
          {
            "_attributes": {
              "op": "write",
              "role": "manage"
            }
          }
        ]
      },
      {
        "_attributes": {
          "side": "server",
          "code": "34",
          "define": "LED_SETTINGS",
          "type": "INT8U",
          "min": "0",
          "max": "2",
          "reportable": "true",
          "default": "0",
          "writable": "true",
          "optional": "true"
        },
        "description": {
          "_text": "LEDSettings"
        },
        "access": [
          {
            "_attributes": {
              "op": "read",
              "role": "view"
            }
          },
          {
            "_attributes": {
              "op": "write",
              "role": "manage"
            }
          }
        ]
      },
      {
        "_attributes": {
          "side": "server",
          "code": "35",
          "define": "AUTO_RELOCK_TIME",
          "type": "INT32U",
          "reportable": "true",
          "writable": "true"
        },
        "description": {
          "_text": "AutoRelockTime"
        },
        "access": [
          {
            "_attributes": {
              "op": "read",
              "role": "view"
            }
          },
          {
            "_attributes": {
              "op": "write",
              "role": "manage"
            }
          }
        ]
      },
      {
        "_attributes": {
          "side": "server",
          "code": "36",
          "define": "SOUND_VOLUME",
          "type": "INT8U",
          "min": "0",
          "max": "3",
          "reportable": "true",
          "default": "0",
          "writable": "true",
          "optional": "true"
        },
        "description": {
          "_text": "SoundVolume"
        },
        "access": [
          {
            "_attributes": {
              "op": "read",
              "role": "view"
            }
          },
          {
            "_attributes": {
              "op": "write",
              "role": "manage"
            }
          }
        ]
      },
      {
        "_attributes": {
          "side": "server",
          "code": "37",
          "define": "OPERATING_MODE",
          "type": "OperatingModeEnum",
          "min": "0",
          "max": "4",
          "reportable": "true",
          "writable": "true"
        },
        "description": {
          "_text": "OperatingMode"
        },
        "access": [
          {
            "_attributes": {
              "op": "read",
              "role": "view"
            }
          },
          {
            "_attributes": {
              "op": "write",
              "role": "manage"
            }
          }
        ]
      },
      {
        "_attributes": {
          "side": "server",
          "code": "38",
          "define": "SUPPORTED_OPERATING_MODES",
          "type": "DlSupportedOperatingModes",
          "min": "0x0000",
          "max": "0xFFFF",
          "default": "0xFFF6",
          "writable": "false"
        },
        "_text": "SupportedOperatingModes"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "39",
          "define": "DEFAULT_CONFIGURATION_REGISTER",
          "type": "DlDefaultConfigurationRegister",
          "min": "0x0000",
          "max": "0xFFFF",
          "reportable": "true",
          "default": "0",
          "writable": "false",
          "optional": "true"
        },
        "_text": "DefaultConfigurationRegister"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "40",
          "define": "ENABLE_LOCAL_PROGRAMMING",
          "type": "boolean",
          "reportable": "true",
          "default": "1",
          "writable": "true",
          "optional": "true"
        },
        "description": {
          "_text": "EnableLocalProgramming"
        },
        "access": [
          {
            "_attributes": {
              "op": "read",
              "role": "view"
            }
          },
          {
            "_attributes": {
              "op": "write",
              "role": "administer"
            }
          }
        ]
      },
      {
        "_attributes": {
          "side": "server",
          "code": "41",
          "define": "ENABLE_ONE_TOUCH_LOCKING",
          "type": "boolean",
          "reportable": "true",
          "default": "0",
          "writable": "true",
          "optional": "true"
        },
        "description": {
          "_text": "EnableOneTouchLocking"
        },
        "access": [
          {
            "_attributes": {
              "op": "read",
              "role": "view"
            }
          },
          {
            "_attributes": {
              "op": "write",
              "role": "manage"
            }
          }
        ]
      },
      {
        "_attributes": {
          "side": "server",
          "code": "42",
          "define": "ENABLE_INSIDE_STATUS_LED",
          "type": "boolean",
          "reportable": "true",
          "default": "0",
          "writable": "true",
          "optional": "true"
        },
        "description": {
          "_text": "EnableInsideStatusLED"
        },
        "access": [
          {
            "_attributes": {
              "op": "read",
              "role": "view"
            }
          },
          {
            "_attributes": {
              "op": "write",
              "role": "manage"
            }
          }
        ]
      },
      {
        "_attributes": {
          "side": "server",
          "code": "43",
          "define": "ENABLE_PRIVACY_MODE_BUTTON",
          "type": "boolean",
          "reportable": "true",
          "default": "0",
          "writable": "true",
          "optional": "true"
        },
        "description": {
          "_text": "EnablePrivacyModeButton"
        },
        "access": [
          {
            "_attributes": {
              "op": "read",
              "role": "view"
            }
          },
          {
            "_attributes": {
              "op": "write",
              "role": "manage"
            }
          }
        ]
      },
      {
        "_attributes": {
          "side": "server",
          "code": "44",
          "define": "LOCAL_PROGRAMMING_FEATURES",
          "type": "DlLocalProgrammingFeatures",
          "min": "0x0",
          "max": "0x0F",
          "reportable": "true",
          "default": "0",
          "writable": "true",
          "optional": "true"
        },
        "description": {
          "_text": "LocalProgrammingFeatures"
        },
        "access": [
          {
            "_attributes": {
              "op": "read",
              "role": "view"
            }
          },
          {
            "_attributes": {
              "op": "write",
              "role": "administer"
            }
          }
        ]
      },
      {
        "_attributes": {
          "side": "server",
          "code": "48",
          "define": "WRONG_CODE_ENTRY_LIMIT",
          "type": "INT8U",
          "min": "1",
          "max": "255",
          "reportable": "true",
          "writable": "true",
          "optional": "true"
        },
        "description": {
          "_text": "WrongCodeEntryLimit"
        },
        "access": [
          {
            "_attributes": {
              "op": "read",
              "role": "view"
            }
          },
          {
            "_attributes": {
              "op": "write",
              "role": "administer"
            }
          }
        ]
      },
      {
        "_attributes": {
          "side": "server",
          "code": "49",
          "define": "USER_CODE_TEMPORARY_DISABLE_TIME",
          "type": "INT8U",
          "min": "1",
          "max": "255",
          "reportable": "true",
          "writable": "true",
          "optional": "true"
        },
        "description": {
          "_text": "UserCodeTemporaryDisableTime"
        },
        "access": [
          {
            "_attributes": {
              "op": "read",
              "role": "view"
            }
          },
          {
            "_attributes": {
              "op": "write",
              "role": "administer"
            }
          }
        ]
      },
      {
        "_attributes": {
          "side": "server",
          "code": "50",
          "define": "SEND_PIN_OVER_THE_AIR",
          "type": "boolean",
          "reportable": "true",
          "default": "0",
          "writable": "true",
          "optional": "true"
        },
        "description": {
          "_text": "SendPINOverTheAir"
        },
        "access": [
          {
            "_attributes": {
              "op": "read",
              "role": "view"
            }
          },
          {
            "_attributes": {
              "op": "write",
              "role": "administer"
            }
          }
        ]
      },
      {
        "_attributes": {
          "side": "server",
          "code": "51",
          "define": "REQUIRE_PIN_FOR_REMOTE_OPERATION",
          "type": "boolean",
          "reportable": "true",
          "default": "0",
          "writable": "true",
          "optional": "true"
        },
        "description": {
          "_text": "RequirePINforRemoteOperation"
        },
        "access": [
          {
            "_attributes": {
              "op": "read",
              "role": "view"
            }
          },
          {
            "_attributes": {
              "op": "write",
              "role": "administer"
            }
          }
        ]
      },
      {
        "_attributes": {
          "side": "server",
          "code": "53",
          "define": "EXPIRING_USER_TIMEOUT",
          "type": "INT16U",
          "min": "1",
          "max": "2880",
          "reportable": "true",
          "writable": "true",
          "optional": "true"
        },
        "description": {
          "_text": "ExpiringUserTimeout"
        },
        "access": [
          {
            "_attributes": {
              "op": "read",
              "role": "view"
            }
          },
          {
            "_attributes": {
              "op": "write",
              "role": "administer"
            }
          }
        ]
      }
    ],
    "command": [
      {
        "_attributes": {
          "source": "client",
          "code": "0",
          "name": "LockDoor",
          "mustUseTimedInvoke": "true"
        },
        "description": {
          "_text": "This command causes the lock device to lock the door."
        },
        "_comment": " Conformance feature [COTA & PIN] - for now optional ",
        "arg": {
          "_attributes": {
            "name": "PINCode",
            "type": "OCTET_STRING",
            "optional": "true"
          }
        }
      },
      {
        "_attributes": {
          "source": "client",
          "code": "1",
          "name": "UnlockDoor",
          "mustUseTimedInvoke": "true"
        },
        "description": {
          "_text": "This command causes the lock device to unlock the door."
        },
        "_comment": " Conformance feature [COTA & PIN] - for now optional ",
        "arg": {
          "_attributes": {
            "name": "PINCode",
            "type": "OCTET_STRING",
            "optional": "true"
          }
        }
      },
      {
        "_attributes": {
          "source": "client",
          "code": "3",
          "name": "UnlockWithTimeout",
          "mustUseTimedInvoke": "true",
          "optional": "true"
        },
        "description": {
          "_text": "This command causes the lock device to unlock the door with a timeout parameter."
        },
        "arg": [
          {
            "_attributes": {
              "name": "Timeout",
              "type": "INT16U"
            }
          },
          {
            "_attributes": {
              "name": "PINCode",
              "type": "OCTET_STRING",
              "optional": "true"
            }
          }
        ],
        "_comment": " Conformance feature [COTA & PIN] - for now optional "
      },
      {
        "_attributes": {
          "source": "client",
          "code": "11",
          "name": "SetWeekDaySchedule",
          "optional": "true"
        },
        "description": {
          "_text": "Set a weekly repeating schedule for a specified user."
        },
        "access": {
          "_attributes": {
            "op": "invoke",
            "role": "administer"
          }
        },
        "arg": [
          {
            "_attributes": {
              "name": "WeekDayIndex",
              "type": "INT8U"
            }
          },
          {
            "_attributes": {
              "name": "UserIndex",
              "type": "INT16U"
            }
          },
          {
            "_attributes": {
              "name": "DaysMask",
              "type": "DaysMaskMap"
            }
          },
          {
            "_attributes": {
              "name": "StartHour",
              "type": "INT8U"
            }
          },
          {
            "_attributes": {
              "name": "StartMinute",
              "type": "INT8U"
            }
          },
          {
            "_attributes": {
              "name": "EndHour",
              "type": "INT8U"
            }
          },
          {
            "_attributes": {
              "name": "EndMinute",
              "type": "INT8U"
            }
          }
        ]
      },
      {
        "_attributes": {
          "source": "client",
          "code": "12",
          "name": "GetWeekDaySchedule",
          "response": "GetWeekDayScheduleResponse",
          "optional": "true"
        },
        "description": {
          "_text": "Retrieve the specific weekly schedule for the specific user."
        },
        "access": {
          "_attributes": {
            "op": "invoke",
            "role": "administer"
          }
        },
        "arg": [
          {
            "_attributes": {
              "name": "WeekDayIndex",
              "type": "INT8U"
            }
          },
          {
            "_attributes": {
              "name": "UserIndex",
              "type": "INT16U"
            }
          }
        ]
      },
      {
        "_attributes": {
          "source": "server",
          "code": "12",
          "name": "GetWeekDayScheduleResponse",
          "disableDefaultResponse": "true",
          "optional": "true"
        },
        "description": {
          "_text": "Returns the weekly repeating schedule data for the specified schedule index."
        },
        "arg": [
          {
            "_attributes": {
              "name": "WeekDayIndex",
              "type": "INT8U"
            }
          },
          {
            "_attributes": {
              "name": "UserIndex",
              "type": "INT16U"
            }
          },
          {
            "_attributes": {
              "name": "Status",
              "type": "DlStatus"
            }
          },
          {
            "_attributes": {
              "name": "DaysMask",
              "type": "DaysMaskMap",
              "optional": "true"
            }
          },
          {
            "_attributes": {
              "name": "StartHour",
              "type": "INT8U",
              "optional": "true"
            }
          },
          {
            "_attributes": {
              "name": "StartMinute",
              "type": "INT8U",
              "optional": "true"
            }
          },
          {
            "_attributes": {
              "name": "EndHour",
              "type": "INT8U",
              "optional": "true"
            }
          },
          {
            "_attributes": {
              "name": "EndMinute",
              "type": "INT8U",
              "optional": "true"
            }
          }
        ]
      },
      {
        "_attributes": {
          "source": "client",
          "code": "13",
          "name": "ClearWeekDaySchedule",
          "optional": "true"
        },
        "description": {
          "_text": "Clear the specific weekly schedule or all weekly schedules for the specific user."
        },
        "access": {
          "_attributes": {
            "op": "invoke",
            "role": "administer"
          }
        },
        "arg": [
          {
            "_attributes": {
              "name": "WeekDayIndex",
              "type": "INT8U"
            }
          },
          {
            "_attributes": {
              "name": "UserIndex",
              "type": "INT16U"
            }
          }
        ]
      },
      {
        "_attributes": {
          "source": "client",
          "code": "14",
          "name": "SetYearDaySchedule",
          "optional": "true"
        },
        "description": {
          "_text": "Set a time-specific schedule ID for a specified user."
        },
        "access": {
          "_attributes": {
            "op": "invoke",
            "role": "administer"
          }
        },
        "arg": [
          {
            "_attributes": {
              "name": "YearDayIndex",
              "type": "INT8U"
            }
          },
          {
            "_attributes": {
              "name": "UserIndex",
              "type": "INT16U"
            }
          },
          {
            "_attributes": {
              "name": "LocalStartTime",
              "type": "epoch_s"
            }
          },
          {
            "_attributes": {
              "name": "LocalEndTime",
              "type": "epoch_s"
            }
          }
        ]
      },
      {
        "_attributes": {
          "source": "client",
          "code": "15",
          "name": "GetYearDaySchedule",
          "response": "GetYearDayScheduleResponse",
          "optional": "true"
        },
        "description": {
          "_text": "Returns the year day schedule data for the specified schedule and user indexes."
        },
        "access": {
          "_attributes": {
            "op": "invoke",
            "role": "administer"
          }
        },
        "arg": [
          {
            "_attributes": {
              "name": "YearDayIndex",
              "type": "INT8U"
            }
          },
          {
            "_attributes": {
              "name": "UserIndex",
              "type": "INT16U"
            }
          }
        ]
      },
      {
        "_attributes": {
          "source": "server",
          "code": "15",
          "name": "GetYearDayScheduleResponse",
          "disableDefaultResponse": "true",
          "optional": "true"
        },
        "description": {
          "_text": "Returns the year day schedule data for the specified schedule and user indexes."
        },
        "arg": [
          {
            "_attributes": {
              "name": "YearDayIndex",
              "type": "INT8U"
            }
          },
          {
            "_attributes": {
              "name": "UserIndex",
              "type": "INT16U"
            }
          },
          {
            "_attributes": {
              "name": "Status",
              "type": "DlStatus"
            }
          },
          {
            "_attributes": {
              "name": "LocalStartTime",
              "type": "epoch_s",
              "optional": "true"
            }
          },
          {
            "_attributes": {
              "name": "LocalEndTime",
              "type": "epoch_s",
              "optional": "true"
            }
          }
        ]
      },
      {
        "_attributes": {
          "source": "client",
          "code": "16",
          "name": "ClearYearDaySchedule",
          "optional": "true"
        },
        "description": {
          "_text": "Clears the specific year day schedule or all year day schedules for the specific user."
        },
        "access": {
          "_attributes": {
            "op": "invoke",
            "role": "administer"
          }
        },
        "arg": [
          {
            "_attributes": {
              "name": "YearDayIndex",
              "type": "INT8U"
            }
          },
          {
            "_attributes": {
              "name": "UserIndex",
              "type": "INT16U"
            }
          }
        ]
      },
      {
        "_attributes": {
          "source": "client",
          "code": "17",
          "name": "SetHolidaySchedule",
          "optional": "true"
        },
        "description": {
          "_text": "Set the holiday Schedule by specifying local start time and local end time with respect to any Lock Operating Mode."
        },
        "access": {
          "_attributes": {
            "op": "invoke",
            "role": "administer"
          }
        },
        "arg": [
          {
            "_attributes": {
              "name": "HolidayIndex",
              "type": "INT8U"
            }
          },
          {
            "_attributes": {
              "name": "LocalStartTime",
              "type": "epoch_s"
            }
          },
          {
            "_attributes": {
              "name": "LocalEndTime",
              "type": "epoch_s"
            }
          },
          {
            "_attributes": {
              "name": "OperatingMode",
              "type": "OperatingModeEnum"
            }
          }
        ]
      },
      {
        "_attributes": {
          "source": "client",
          "code": "18",
          "name": "GetHolidaySchedule",
          "response": "GetHolidayScheduleResponse",
          "optional": "true"
        },
        "description": {
          "_text": "Get the holiday schedule for the specified index."
        },
        "access": {
          "_attributes": {
            "op": "invoke",
            "role": "administer"
          }
        },
        "arg": {
          "_attributes": {
            "name": "HolidayIndex",
            "type": "INT8U"
          }
        }
      },
      {
        "_attributes": {
          "source": "server",
          "code": "18",
          "name": "GetHolidayScheduleResponse",
          "disableDefaultResponse": "true",
          "optional": "true"
        },
        "description": {
          "_text": "Returns the Holiday Schedule Entry for the specified Holiday ID."
        },
        "arg": [
          {
            "_attributes": {
              "name": "HolidayIndex",
              "type": "INT8U"
            }
          },
          {
            "_attributes": {
              "name": "Status",
              "type": "DlStatus"
            }
          },
          {
            "_attributes": {
              "name": "LocalStartTime",
              "type": "epoch_s",
              "optional": "true"
            }
          },
          {
            "_attributes": {
              "name": "LocalEndTime",
              "type": "epoch_s",
              "optional": "true"
            }
          },
          {
            "_attributes": {
              "name": "OperatingMode",
              "type": "OperatingModeEnum",
              "optional": "true"
            }
          }
        ]
      },
      {
        "_attributes": {
          "source": "client",
          "code": "19",
          "name": "ClearHolidaySchedule",
          "optional": "true"
        },
        "description": {
          "_text": "Clears the holiday schedule or all holiday schedules."
        },
        "access": {
          "_attributes": {
            "op": "invoke",
            "role": "administer"
          }
        },
        "arg": {
          "_attributes": {
            "name": "HolidayIndex",
            "type": "INT8U"
          }
        }
      },
      {
        "_attributes": {
          "source": "client",
          "code": "26",
          "name": "SetUser",
          "mustUseTimedInvoke": "true",
          "optional": "true"
        },
        "description": {
          "_text": "Set User into the lock."
        },
        "access": {
          "_attributes": {
            "op": "invoke",
            "role": "administer"
          }
        },
        "arg": [
          {
            "_attributes": {
              "name": "OperationType",
              "type": "DataOperationTypeEnum"
            }
          },
          {
            "_attributes": {
              "name": "UserIndex",
              "type": "INT16U"
            }
          },
          {
            "_attributes": {
              "name": "UserName",
              "type": "CHAR_STRING",
              "isNullable": "true"
            }
          },
          {
            "_attributes": {
              "name": "UserUniqueID",
              "type": "INT32U",
              "isNullable": "true"
            }
          },
          {
            "_attributes": {
              "name": "UserStatus",
              "type": "UserStatusEnum",
              "isNullable": "true"
            }
          },
          {
            "_attributes": {
              "name": "UserType",
              "type": "UserTypeEnum",
              "isNullable": "true"
            }
          },
          {
            "_attributes": {
              "name": "CredentialRule",
              "type": "CredentialRuleEnum",
              "isNullable": "true"
            }
          }
        ]
      },
      {
        "_attributes": {
          "source": "client",
          "code": "27",
          "name": "GetUser",
          "response": "GetUserResponse",
          "optional": "true"
        },
        "description": {
          "_text": "Retrieve User."
        },
        "access": {
          "_attributes": {
            "op": "invoke",
            "role": "administer"
          }
        },
        "arg": {
          "_attributes": {
            "name": "UserIndex",
            "type": "INT16U"
          }
        }
      },
      {
        "_attributes": {
          "source": "server",
          "code": "28",
          "name": "GetUserResponse",
          "disableDefaultResponse": "true",
          "optional": "true"
        },
        "description": {
          "_text": "Returns the User for the specified UserIndex."
        },
        "arg": [
          {
            "_attributes": {
              "name": "UserIndex",
              "type": "INT16U"
            }
          },
          {
            "_attributes": {
              "name": "UserName",
              "type": "CHAR_STRING",
              "isNullable": "true"
            }
          },
          {
            "_attributes": {
              "name": "UserUniqueID",
              "type": "INT32U",
              "isNullable": "true"
            }
          },
          {
            "_attributes": {
              "name": "UserStatus",
              "type": "UserStatusEnum",
              "isNullable": "true"
            }
          },
          {
            "_attributes": {
              "name": "UserType",
              "type": "UserTypeEnum",
              "isNullable": "true"
            }
          },
          {
            "_attributes": {
              "name": "CredentialRule",
              "type": "CredentialRuleEnum",
              "isNullable": "true"
            }
          },
          {
            "_attributes": {
              "name": "Credentials",
              "type": "CredentialStruct",
              "array": "true",
              "isNullable": "true"
            }
          },
          {
            "_attributes": {
              "name": "CreatorFabricIndex",
              "type": "fabric_idx",
              "isNullable": "true"
            }
          },
          {
            "_attributes": {
              "name": "LastModifiedFabricIndex",
              "type": "fabric_idx",
              "isNullable": "true"
            }
          },
          {
            "_attributes": {
              "name": "NextUserIndex",
              "type": "INT16U",
              "isNullable": "true"
            }
          }
        ]
      },
      {
        "_attributes": {
          "source": "client",
          "code": "29",
          "name": "ClearUser",
          "mustUseTimedInvoke": "true",
          "optional": "true"
        },
        "description": {
          "_text": "Clears a User or all Users."
        },
        "access": {
          "_attributes": {
            "op": "invoke",
            "role": "administer"
          }
        },
        "arg": {
          "_attributes": {
            "name": "UserIndex",
            "type": "INT16U"
          }
        }
      },
      {
        "_attributes": {
          "source": "client",
          "code": "34",
          "name": "SetCredential",
          "response": "SetCredentialResponse",
          "mustUseTimedInvoke": "true",
          "optional": "true"
        },
        "description": {
          "_text": "Set a credential (e.g. PIN, RFID, Fingerprint, etc.) into the lock for a new user, existing user, or ProgrammingUser."
        },
        "access": {
          "_attributes": {
            "op": "invoke",
            "role": "administer"
          }
        },
        "arg": [
          {
            "_attributes": {
              "name": "OperationType",
              "type": "DataOperationTypeEnum"
            }
          },
          {
            "_attributes": {
              "name": "Credential",
              "type": "CredentialStruct"
            }
          },
          {
            "_attributes": {
              "name": "CredentialData",
              "type": "LONG_OCTET_STRING"
            }
          },
          {
            "_attributes": {
              "name": "UserIndex",
              "type": "INT16U",
              "isNullable": "true"
            }
          },
          {
            "_attributes": {
              "name": "UserStatus",
              "type": "UserStatusEnum",
              "isNullable": "true"
            }
          },
          {
            "_attributes": {
              "name": "UserType",
              "type": "UserTypeEnum",
              "isNullable": "true"
            }
          }
        ]
      },
      {
        "_attributes": {
          "source": "server",
          "code": "35",
          "name": "SetCredentialResponse",
          "disableDefaultResponse": "true",
          "optional": "true"
        },
        "description": {
          "_text": "Returns the status for setting the specified credential."
        },
        "arg": [
          {
            "_attributes": {
              "name": "Status",
              "type": "DlStatus"
            }
          },
          {
            "_attributes": {
              "name": "UserIndex",
              "type": "INT16U",
              "isNullable": "true"
            }
          },
          {
            "_attributes": {
              "name": "NextCredentialIndex",
              "type": "INT16U",
              "isNullable": "true"
            }
          }
        ]
      },
      {
        "_attributes": {
          "source": "client",
          "code": "36",
          "name": "GetCredentialStatus",
          "response": "GetCredentialStatusResponse",
          "optional": "true"
        },
        "description": {
          "_text": "Retrieve the status of a particular credential (e.g. PIN, RFID, Fingerprint, etc.) by index."
        },
        "access": {
          "_attributes": {
            "op": "invoke",
            "role": "administer"
          }
        },
        "arg": {
          "_attributes": {
            "name": "Credential",
            "type": "CredentialStruct"
          }
        }
      },
      {
        "_attributes": {
          "source": "server",
          "code": "37",
          "name": "GetCredentialStatusResponse",
          "disableDefaultResponse": "true",
          "optional": "true"
        },
        "description": {
          "_text": "Returns the status for the specified credential."
        },
        "arg": [
          {
            "_attributes": {
              "name": "CredentialExists",
              "type": "boolean"
            }
          },
          {
            "_attributes": {
              "name": "UserIndex",
              "type": "INT16U",
              "isNullable": "true"
            }
          },
          {
            "_attributes": {
              "name": "CreatorFabricIndex",
              "type": "fabric_idx",
              "isNullable": "true"
            }
          },
          {
            "_attributes": {
              "name": "LastModifiedFabricIndex",
              "type": "fabric_idx",
              "isNullable": "true"
            }
          },
          {
            "_attributes": {
              "name": "NextCredentialIndex",
              "type": "INT16U",
              "isNullable": "true"
            }
          }
        ]
      },
      {
        "_attributes": {
          "source": "client",
          "code": "38",
          "name": "ClearCredential",
          "mustUseTimedInvoke": "true",
          "optional": "true"
        },
        "description": {
          "_text": "Clear one, one type, or all credentials except ProgrammingPIN credential."
        },
        "access": {
          "_attributes": {
            "op": "invoke",
            "role": "administer"
          }
        },
        "arg": {
          "_attributes": {
            "name": "Credential",
            "type": "CredentialStruct",
            "isNullable": "true"
          }
        }
      }
    ],
    "event": [
      {
        "_attributes": {
          "side": "server",
          "code": "0",
          "name": "DoorLockAlarm",
          "priority": "critical"
        },
        "description": {
          "_text": "The door lock cluster provides several alarms which can be sent when there is a critical state on the door lock."
        },
        "field": {
          "_attributes": {
            "id": "0",
            "name": "AlarmCode",
            "type": "AlarmCodeEnum"
          }
        }
      },
      {
        "_attributes": {
          "side": "server",
          "code": "1",
          "name": "DoorStateChange",
          "priority": "critical",
          "optional": "true"
        },
        "description": {
          "_text": "The door lock server sends out a DoorStateChange event when the door lock door state changes."
        },
        "field": {
          "_attributes": {
            "id": "0",
            "name": "DoorState",
            "type": "DoorStateEnum"
          }
        }
      },
      {
        "_attributes": {
          "side": "server",
          "code": "2",
          "name": "LockOperation",
          "priority": "critical"
        },
        "description": {
          "_text": "The door lock server sends out a LockOperation event when the event is triggered by the various lock operation sources."
        },
        "field": [
          {
            "_attributes": {
              "id": "0",
              "name": "LockOperationType",
              "type": "LockOperationTypeEnum"
            }
          },
          {
            "_attributes": {
              "id": "1",
              "name": "OperationSource",
              "type": "OperationSourceEnum"
            }
          },
          {
            "_attributes": {
              "id": "2",
              "name": "UserIndex",
              "type": "INT16U",
              "isNullable": "true"
            }
          },
          {
            "_attributes": {
              "id": "3",
              "name": "FabricIndex",
              "type": "fabric_idx",
              "isNullable": "true"
            }
          },
          {
            "_attributes": {
              "id": "4",
              "name": "SourceNode",
              "type": "NODE_ID",
              "isNullable": "true"
            }
          },
          {
            "_attributes": {
              "id": "5",
              "name": "Credentials",
              "type": "CredentialStruct",
              "array": "true",
              "isNullable": "true",
              "optional": "true"
            }
          }
        ],
        "_comment": " Conformance feature [USR] - for now optional "
      },
      {
        "_attributes": {
          "side": "server",
          "code": "3",
          "name": "LockOperationError",
          "priority": "critical"
        },
        "description": {
          "_text": "The door lock server sends out a LockOperationError event when a lock operation fails for various reasons."
        },
        "field": [
          {
            "_attributes": {
              "id": "0",
              "name": "LockOperationType",
              "type": "LockOperationTypeEnum"
            }
          },
          {
            "_attributes": {
              "id": "1",
              "name": "OperationSource",
              "type": "OperationSourceEnum"
            }
          },
          {
            "_attributes": {
              "id": "2",
              "name": "OperationError",
              "type": "OperationErrorEnum"
            }
          },
          {
            "_attributes": {
              "id": "3",
              "name": "UserIndex",
              "type": "INT16U",
              "isNullable": "true"
            }
          },
          {
            "_attributes": {
              "id": "4",
              "name": "FabricIndex",
              "type": "fabric_idx",
              "isNullable": "true"
            }
          },
          {
            "_attributes": {
              "id": "5",
              "name": "SourceNode",
              "type": "NODE_ID",
              "isNullable": "true"
            }
          },
          {
            "_attributes": {
              "id": "6",
              "name": "Credentials",
              "type": "CredentialStruct",
              "array": "true",
              "isNullable": "true",
              "optional": "true"
            }
          }
        ],
        "_comment": " Conformance feature [USR] - for now optional "
      },
      {
        "_attributes": {
          "side": "server",
          "code": "4",
          "name": "LockUserChange",
          "priority": "info"
        },
        "description": {
          "_text": "The door lock server sends out a LockUserChange event when a lock user, schedule, or credential change has occurred."
        },
        "field": [
          {
            "_attributes": {
              "id": "0",
              "name": "LockDataType",
              "type": "LockDataTypeEnum"
            }
          },
          {
            "_attributes": {
              "id": "1",
              "name": "DataOperationType",
              "type": "DataOperationTypeEnum"
            }
          },
          {
            "_attributes": {
              "id": "2",
              "name": "OperationSource",
              "type": "OperationSourceEnum"
            }
          },
          {
            "_attributes": {
              "id": "3",
              "name": "UserIndex",
              "type": "INT16U",
              "isNullable": "true"
            }
          },
          {
            "_attributes": {
              "id": "4",
              "name": "FabricIndex",
              "type": "fabric_idx",
              "isNullable": "true"
            }
          },
          {
            "_attributes": {
              "id": "5",
              "name": "SourceNode",
              "type": "NODE_ID",
              "isNullable": "true"
            }
          },
          {
            "_attributes": {
              "id": "6",
              "name": "DataIndex",
              "type": "INT16U",
              "isNullable": "true"
            }
          }
        ]
      }
    ]
  },
  "258": {
    "name": {
      "_text": "Window Covering"
    },
    "domain": {
      "_text": "Closures"
    },
    "code": {
      "_text": "0x0102"
    },
    "define": {
      "_text": "WINDOW_COVERING_CLUSTER"
    },
    "description": {
      "_text": "Provides an interface for controlling and adjusting automatic window coverings. "
    },
    "_comment": [
      " Abbreviations used in descriptions ",
      " Current cluster version ",
      " Window Covering Information Attribute Set ",
      " Conformance feature M ",
      " Conformance feature [LF & PA_LF & ABS] - for now optional ",
      " Conformance feature [TL & PA_TL & ABS] - for now optional ",
      " Conformance feature [LF & PA_LF & ABS] - for now optional ",
      " Conformance feature [TL & PA_TL & ABS] - for now optional ",
      " Conformance feature [LF] - for now optional ",
      " Conformance feature [TL] - for now optional ",
      " Conformance feature M ",
      " Conformance feature [LF & PA_LF] - for now optional ",
      " Conformance feature [TL & PA_TL] - for now optional ",
      " Conformance feature M ",
      " Conformance feature LF & PA_LF - for now optional ",
      " Conformance feature TL & PA_TL - for now optional ",
      " Conformance feature M ",
      " Conformance feature LF & PA_LF - for now optional ",
      " Conformance feature TL & PA_TL - for now optional ",
      " Window Covering Settings Attribute Set ",
      " Conformance feature LF & PA_LF & ABS - for now optional ",
      " Conformance feature TL & PA_TL & ABS - for now optional ",
      " Conformance Deprecated ",
      " attribute side=\"server\" writable=\"true\"  code=\"0x0014\" define=\"WC_VELOCITY_LIFT\"                         type=\"INT16U\"   min=\"0x0000\" max=\"0xFFFF\" default=\"0x0000\" optional=\"true\" >VelocityLift ",
      " attribute side=\"server\" writable=\"true\"  code=\"0x0015\" define=\"WC_ACCELERATION_TIME_LIFT\"                type=\"INT16U\"   min=\"0x0000\" max=\"0xFFFF\" default=\"0x0000\" optional=\"true\" >AccelerationTimeLift ",
      " attribute side=\"server\" writable=\"true\"  code=\"0x0016\" define=\"WC_DECELERATION_TIME_LIFT\"                type=\"INT16U\"   min=\"0x0000\" max=\"0xFFFF\" default=\"0x0000\" optional=\"true\" >DecelerationTimeLift ",
      " Conformance feature M ",
      " Conformance Deprecated ",
      " attribute side=\"server\" writable=\"true\"  code=\"0x0018\" define=\"WC_INTERMEDIATE_SETPOINTS_LIFT\"           type=\"OCTET_STRING\" length=\"254\" default=\"1,0x0000\"        optional=\"true\" >IntermediateSetpointsLift</attribute> ",
      " attribute side=\"server\" writable=\"true\"  code=\"0x0019\" define=\"WC_INTERMEDIATE_SETPOINTS_TILT\"           type=\"OCTET_STRING\" length=\"254\" default=\"1,0x0000\"        optional=\"true\" >IntermediateSetpointsTilt</attribute> ",
      " Conformance feature Optional ",
      " Window Covering Command Set ",
      " Conformance feature M ",
      " Conformance feature [LF & ABS] - for now optional ",
      " Conformance feature LF & PA_LF | [LF] - for now optional ",
      " Conformance feature [TL & ABS] - for now optional ",
      " Conformance feature TL & PA_TL | [TL] - for now optional "
    ],
    "tag": [
      {
        "_attributes": {
          "name": "LF",
          "description": "Lift Control"
        }
      },
      {
        "_attributes": {
          "name": "TL",
          "description": "Tilt Control"
        }
      },
      {
        "_attributes": {
          "name": "PA_LF",
          "description": "Position Aware Lift"
        }
      },
      {
        "_attributes": {
          "name": "ABS",
          "description": "Absolute Positioning"
        }
      },
      {
        "_attributes": {
          "name": "PA_TL",
          "description": "Position Aware Tilt"
        }
      }
    ],
    "client": {
      "_attributes": {
        "tick": "false",
        "init": "false"
      },
      "_text": "true"
    },
    "server": {
      "_attributes": {
        "tick": "false",
        "init": "false"
      },
      "_text": "true"
    },
    "globalAttribute": {
      "_attributes": {
        "side": "either",
        "code": "0xFFFD",
        "value": "5"
      }
    },
    "attribute": [
      {
        "_attributes": {
          "side": "server",
          "writable": "false",
          "code": "0x0000",
          "define": "WC_TYPE",
          "type": "Type",
          "min": "0x00",
          "max": "0x09",
          "default": "0x00",
          "optional": "false"
        },
        "_text": "Type"
      },
      {
        "_attributes": {
          "side": "server",
          "writable": "false",
          "code": "0x0001",
          "define": "WC_PHYSICAL_CLOSED_LIMIT_LIFT",
          "type": "INT16U",
          "min": "0x0000",
          "max": "0xFFFF",
          "default": "0x0000",
          "optional": "true"
        },
        "_text": "PhysicalClosedLimitLift"
      },
      {
        "_attributes": {
          "side": "server",
          "writable": "false",
          "code": "0x0002",
          "define": "WC_PHYSICAL_CLOSED_LIMIT_TILT",
          "type": "INT16U",
          "min": "0x0000",
          "max": "0xFFFF",
          "default": "0x0000",
          "optional": "true"
        },
        "_text": "PhysicalClosedLimitTilt"
      },
      {
        "_attributes": {
          "side": "server",
          "writable": "false",
          "code": "0x0003",
          "define": "WC_CURRENT_POSITION_LIFT",
          "type": "INT16U",
          "min": "0x0000",
          "max": "0xFFFF",
          "isNullable": "true",
          "optional": "true"
        },
        "_text": "CurrentPositionLift"
      },
      {
        "_attributes": {
          "side": "server",
          "writable": "false",
          "code": "0x0004",
          "define": "WC_CURRENT_POSITION_TILT",
          "type": "INT16U",
          "min": "0x0000",
          "max": "0xFFFF",
          "isNullable": "true",
          "optional": "true"
        },
        "_text": "CurrentPositionTilt"
      },
      {
        "_attributes": {
          "side": "server",
          "writable": "false",
          "code": "0x0005",
          "define": "WC_NUMBER_OF_ACTUATIONS_LIFT",
          "type": "INT16U",
          "min": "0x0000",
          "max": "0xFFFF",
          "default": "0x0000",
          "optional": "true"
        },
        "_text": "NumberOfActuationsLift"
      },
      {
        "_attributes": {
          "side": "server",
          "writable": "false",
          "code": "0x0006",
          "define": "WC_NUMBER_OF_ACTUATIONS_TILT",
          "type": "INT16U",
          "min": "0x0000",
          "max": "0xFFFF",
          "default": "0x0000",
          "optional": "true"
        },
        "_text": "NumberOfActuationsTilt"
      },
      {
        "_attributes": {
          "side": "server",
          "writable": "false",
          "code": "0x0007",
          "define": "WC_CONFIG_STATUS",
          "type": "ConfigStatus",
          "min": "0x00",
          "max": "0x7F",
          "default": "0x03",
          "optional": "false"
        },
        "_text": "ConfigStatus"
      },
      {
        "_attributes": {
          "side": "server",
          "writable": "false",
          "code": "0x0008",
          "define": "WC_CURRENT_POSITION_LIFT_PERCENTAGE",
          "type": "Percent",
          "min": "0",
          "max": "100",
          "isNullable": "true",
          "optional": "true",
          "reportable": "true"
        },
        "_text": "CurrentPositionLiftPercentage"
      },
      {
        "_attributes": {
          "side": "server",
          "writable": "false",
          "code": "0x0009",
          "define": "WC_CURRENT_POSITION_TILT_PERCENTAGE",
          "type": "Percent",
          "min": "0",
          "max": "100",
          "isNullable": "true",
          "optional": "true",
          "reportable": "true"
        },
        "_text": "CurrentPositionTiltPercentage"
      },
      {
        "_attributes": {
          "side": "server",
          "writable": "false",
          "code": "0x000A",
          "define": "WC_OPERATIONAL_STATUS",
          "type": "OperationalStatus",
          "min": "0x00",
          "max": "0x7F",
          "default": "0x00",
          "optional": "false",
          "reportable": "true"
        },
        "_text": "OperationalStatus"
      },
      {
        "_attributes": {
          "side": "server",
          "writable": "false",
          "code": "0x000B",
          "define": "WC_TARGET_POSITION_LIFT_PERCENT100THS",
          "type": "Percent100ths",
          "min": "0",
          "max": "10000",
          "isNullable": "true",
          "optional": "true",
          "reportable": "true"
        },
        "_text": "TargetPositionLiftPercent100ths"
      },
      {
        "_attributes": {
          "side": "server",
          "writable": "false",
          "code": "0x000C",
          "define": "WC_TARGET_POSITION_TILT_PERCENT100THS",
          "type": "Percent100ths",
          "min": "0",
          "max": "10000",
          "isNullable": "true",
          "optional": "true",
          "reportable": "true"
        },
        "_text": "TargetPositionTiltPercent100ths"
      },
      {
        "_attributes": {
          "side": "server",
          "writable": "false",
          "code": "0x000D",
          "define": "WC_END_PRODUCT_TYPE",
          "type": "EndProductType",
          "min": "0x00",
          "max": "0x20",
          "default": "0x00",
          "optional": "false"
        },
        "_text": "EndProductType"
      },
      {
        "_attributes": {
          "side": "server",
          "writable": "false",
          "code": "0x000E",
          "define": "WC_CURRENT_POSITION_LIFT_PERCENT100THS",
          "type": "Percent100ths",
          "min": "0",
          "max": "10000",
          "isNullable": "true",
          "optional": "true",
          "reportable": "true"
        },
        "_text": "CurrentPositionLiftPercent100ths"
      },
      {
        "_attributes": {
          "side": "server",
          "writable": "false",
          "code": "0x000F",
          "define": "WC_CURRENT_POSITION_TILT_PERCENT100THS",
          "type": "Percent100ths",
          "min": "0",
          "max": "10000",
          "isNullable": "true",
          "optional": "true",
          "reportable": "true"
        },
        "_text": "CurrentPositionTiltPercent100ths"
      },
      {
        "_attributes": {
          "side": "server",
          "writable": "false",
          "code": "0x0010",
          "define": "WC_INSTALLED_OPEN_LIMIT_LIFT",
          "type": "INT16U",
          "min": "0x0000",
          "max": "0xFFFF",
          "default": "0x0000",
          "optional": "true"
        },
        "_text": "InstalledOpenLimitLift"
      },
      {
        "_attributes": {
          "side": "server",
          "writable": "false",
          "code": "0x0011",
          "define": "WC_INSTALLED_CLOSED_LIMIT_LIFT",
          "type": "INT16U",
          "min": "0x0000",
          "max": "0xFFFF",
          "default": "0xFFFF",
          "optional": "true"
        },
        "_text": "InstalledClosedLimitLift"
      },
      {
        "_attributes": {
          "side": "server",
          "writable": "false",
          "code": "0x0012",
          "define": "WC_INSTALLED_OPEN_LIMIT_TILT",
          "type": "INT16U",
          "min": "0x0000",
          "max": "0xFFFF",
          "default": "0x0000",
          "optional": "true"
        },
        "_text": "InstalledOpenLimitTilt"
      },
      {
        "_attributes": {
          "side": "server",
          "writable": "false",
          "code": "0x0013",
          "define": "WC_INSTALLED_CLOSED_LIMIT_TILT",
          "type": "INT16U",
          "min": "0x0000",
          "max": "0xFFFF",
          "default": "0xFFFF",
          "optional": "true"
        },
        "_text": "InstalledClosedLimitTilt"
      },
      {
        "_attributes": {
          "side": "server",
          "writable": "true",
          "code": "0x0017",
          "define": "WC_MODE",
          "type": "Mode",
          "min": "0x00",
          "max": "0x0F",
          "default": "0x00",
          "optional": "false"
        },
        "description": {
          "_text": "Mode"
        },
        "access": [
          {
            "_attributes": {
              "op": "read",
              "role": "view"
            }
          },
          {
            "_attributes": {
              "op": "write",
              "role": "manage"
            }
          }
        ]
      },
      {
        "_attributes": {
          "side": "server",
          "writable": "false",
          "code": "0x001A",
          "define": "WC_SAFETY_STATUS",
          "type": "SafetyStatus",
          "min": "0x0000",
          "max": "0xFFFF",
          "default": "0x0000",
          "optional": "true",
          "reportable": "true"
        },
        "_text": "SafetyStatus"
      }
    ],
    "command": [
      {
        "_attributes": {
          "source": "client",
          "code": "0x00",
          "name": "UpOrOpen",
          "optional": "false",
          "cli": "zcl WindowCovering UpOrOpen"
        },
        "description": {
          "_text": "Moves window covering to InstalledOpenLimitLift and InstalledOpenLimitTilt"
        }
      },
      {
        "_attributes": {
          "source": "client",
          "code": "0x01",
          "name": "DownOrClose",
          "optional": "false",
          "cli": "zcl WindowCovering DownOrClose"
        },
        "description": {
          "_text": "Moves window covering to InstalledClosedLimitLift and InstalledCloseLimitTilt"
        }
      },
      {
        "_attributes": {
          "source": "client",
          "code": "0x02",
          "name": "StopMotion",
          "optional": "false",
          "cli": "zcl WindowCovering StopMotion"
        },
        "description": {
          "_text": "Stop any adjusting of window covering"
        }
      },
      {
        "_attributes": {
          "source": "client",
          "code": "0x04",
          "name": "GoToLiftValue",
          "optional": "true",
          "cli": "zcl WindowCovering GoToLiftValue"
        },
        "description": {
          "_text": "Go to lift value specified"
        },
        "arg": {
          "_attributes": {
            "name": "liftValue",
            "type": "INT16U"
          }
        }
      },
      {
        "_attributes": {
          "source": "client",
          "code": "0x05",
          "name": "GoToLiftPercentage",
          "optional": "true",
          "cli": "zcl WindowCovering GoToLiftPercentage"
        },
        "description": {
          "_text": "Go to lift percentage specified"
        },
        "arg": {
          "_attributes": {
            "name": "liftPercent100thsValue",
            "type": "Percent100ths"
          }
        }
      },
      {
        "_attributes": {
          "source": "client",
          "code": "0x07",
          "name": "GoToTiltValue",
          "optional": "true",
          "cli": "zcl WindowCovering GoToTiltValue"
        },
        "description": {
          "_text": "Go to tilt value specified"
        },
        "arg": {
          "_attributes": {
            "name": "tiltValue",
            "type": "INT16U"
          }
        }
      },
      {
        "_attributes": {
          "source": "client",
          "code": "0x08",
          "name": "GoToTiltPercentage",
          "optional": "true",
          "cli": "zcl WindowCovering GoToTiltPercentage"
        },
        "description": {
          "_text": "Go to tilt percentage specified"
        },
        "arg": {
          "_attributes": {
            "name": "tiltPercent100thsValue",
            "type": "Percent100ths"
          }
        }
      }
    ]
  },
  "512": {
    "name": {
      "_text": "Pump Configuration and Control"
    },
    "domain": {
      "_text": "HVAC"
    },
    "description": {
      "_text": "An interface for configuring and controlling pumps."
    },
    "code": {
      "_text": "0x0200"
    },
    "define": {
      "_text": "PUMP_CONFIGURATION_AND_CONTROL_CLUSTER"
    },
    "client": {
      "_attributes": {
        "tick": "false",
        "init": "false"
      },
      "_text": "true"
    },
    "server": {
      "_attributes": {
        "tick": "false",
        "tickFrequency": "half",
        "init": "false"
      },
      "_text": "true"
    },
    "globalAttribute": {
      "_attributes": {
        "side": "either",
        "code": "0xFFFD",
        "value": "3"
      }
    },
    "attribute": [
      {
        "_attributes": {
          "side": "server",
          "code": "0x0000",
          "define": "MAX_PRESSURE",
          "type": "INT16S",
          "isNullable": "true",
          "min": "0x8001",
          "max": "0x7FFF",
          "writable": "false",
          "optional": "false"
        },
        "_text": "MaxPressure"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0001",
          "define": "MAX_SPEED",
          "type": "INT16U",
          "isNullable": "true",
          "min": "0x0000",
          "max": "0xFFFE",
          "writable": "false",
          "optional": "false"
        },
        "_text": "MaxSpeed"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0002",
          "define": "MAX_FLOW",
          "type": "INT16U",
          "isNullable": "true",
          "min": "0x0000",
          "max": "0xFFFE",
          "writable": "false",
          "optional": "false"
        },
        "_text": "MaxFlow"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0003",
          "define": "MIN_CONST_PRESSURE",
          "type": "INT16S",
          "isNullable": "true",
          "min": "0x8001",
          "max": "0x7FFF",
          "writable": "false",
          "optional": "true"
        },
        "_text": "MinConstPressure"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0004",
          "define": "MAX_CONST_PRESSURE",
          "type": "INT16S",
          "isNullable": "true",
          "min": "0x8001",
          "max": "0x7FFF",
          "writable": "false",
          "optional": "true"
        },
        "_text": "MaxConstPressure"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0005",
          "define": "MIN_COMP_PRESSURE",
          "type": "INT16S",
          "isNullable": "true",
          "min": "0x8001",
          "max": "0x7FFF",
          "writable": "false",
          "optional": "true"
        },
        "_text": "MinCompPressure"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0006",
          "define": "MAX_COMP_PRESSURE",
          "type": "INT16S",
          "isNullable": "true",
          "min": "0x8001",
          "max": "0x7FFF",
          "writable": "false",
          "optional": "true"
        },
        "_text": "MaxCompPressure"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0007",
          "define": "MIN_CONST_SPEED",
          "type": "INT16U",
          "isNullable": "true",
          "min": "0x0000",
          "max": "0xFFFE",
          "writable": "false",
          "optional": "true"
        },
        "_text": "MinConstSpeed"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0008",
          "define": "MAX_CONST_SPEED",
          "type": "INT16U",
          "isNullable": "true",
          "min": "0x0000",
          "max": "0xFFFE",
          "writable": "false",
          "optional": "true"
        },
        "_text": "MaxConstSpeed"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0009",
          "define": "MIN_CONST_FLOW",
          "type": "INT16U",
          "isNullable": "true",
          "min": "0x0000",
          "max": "0xFFFE",
          "writable": "false",
          "optional": "true"
        },
        "_text": "MinConstFlow"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x000A",
          "define": "MAX_CONST_FLOW",
          "type": "INT16U",
          "isNullable": "true",
          "min": "0x0000",
          "max": "0xFFFE",
          "writable": "false",
          "optional": "true"
        },
        "_text": "MaxConstFlow"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x000B",
          "define": "MIN_CONST_TEMP",
          "type": "INT16S",
          "isNullable": "true",
          "min": "0x954D",
          "max": "32767",
          "writable": "false",
          "optional": "true"
        },
        "_text": "MinConstTemp"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x000C",
          "define": "MAX_CONST_TEMP",
          "type": "INT16S",
          "isNullable": "true",
          "min": "0x954D",
          "max": "0x7FFF",
          "writable": "false",
          "optional": "true"
        },
        "_text": "MaxConstTemp"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0010",
          "define": "PUMP_STATUS",
          "type": "PumpStatus",
          "writable": "false",
          "default": "0x0000",
          "reportable": "true",
          "optional": "true"
        },
        "_text": "PumpStatus"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0011",
          "define": "EFFECTIVE_OPERATION_MODE",
          "type": "PumpOperationMode",
          "min": "0x00",
          "max": "0x03",
          "writable": "false",
          "optional": "false"
        },
        "_text": "EffectiveOperationMode"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0012",
          "define": "EFFECTIVE_CONTROL_MODE",
          "type": "PumpControlMode",
          "min": "0x00",
          "max": "0x07",
          "writable": "false",
          "optional": "false"
        },
        "_text": "EffectiveControlMode"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0013",
          "define": "CAPACITY",
          "type": "INT16S",
          "isNullable": "true",
          "min": "0x0000",
          "max": "0x7FFF",
          "writable": "false",
          "reportable": "true",
          "optional": "false"
        },
        "_text": "Capacity"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0014",
          "define": "SPEED",
          "type": "INT16U",
          "isNullable": "true",
          "min": "0x0000",
          "max": "0xFFFE",
          "writable": "false",
          "optional": "true"
        },
        "_text": "Speed"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0015",
          "define": "LIFETIME_RUNNING_HOURS",
          "type": "INT24U",
          "isNullable": "true",
          "writable": "true",
          "default": "0x000000",
          "optional": "true"
        },
        "description": {
          "_text": "LifetimeRunningHours"
        },
        "access": [
          {
            "_attributes": {
              "op": "read",
              "privilege": "view"
            }
          },
          {
            "_attributes": {
              "op": "write",
              "privilege": "manage"
            }
          }
        ]
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0016",
          "define": "PUMP_POWER",
          "type": "INT24U",
          "isNullable": "true",
          "writable": "false",
          "optional": "true"
        },
        "_text": "Power"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0017",
          "define": "LIFETIME_ENERGY_CONSUMED",
          "type": "INT32U",
          "isNullable": "true",
          "writable": "true",
          "default": "0x00000000",
          "optional": "true"
        },
        "description": {
          "_text": "LifetimeEnergyConsumed"
        },
        "access": [
          {
            "_attributes": {
              "op": "read",
              "privilege": "view"
            }
          },
          {
            "_attributes": {
              "op": "write",
              "privilege": "manage"
            }
          }
        ]
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0020",
          "define": "OPERATION_MODE",
          "type": "PumpOperationMode",
          "min": "0x00",
          "max": "0x03",
          "writable": "true",
          "default": "0x00",
          "optional": "false"
        },
        "description": {
          "_text": "OperationMode"
        },
        "access": [
          {
            "_attributes": {
              "op": "read",
              "privilege": "view"
            }
          },
          {
            "_attributes": {
              "op": "write",
              "privilege": "manage"
            }
          }
        ]
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0021",
          "define": "CONTROL_MODE",
          "type": "PumpControlMode",
          "min": "0x00",
          "max": "0x07",
          "writable": "true",
          "default": "0x00",
          "optional": "true"
        },
        "description": {
          "_text": "ControlMode"
        },
        "access": [
          {
            "_attributes": {
              "op": "read",
              "privilege": "view"
            }
          },
          {
            "_attributes": {
              "op": "write",
              "privilege": "manage"
            }
          }
        ]
      }
    ],
    "event": [
      {
        "_attributes": {
          "side": "server",
          "code": "0x00",
          "priority": "info",
          "name": "SupplyVoltageLow",
          "optional": "true"
        },
        "description": {
          "_text": "SupplyVoltageLow"
        }
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x01",
          "priority": "info",
          "name": "SupplyVoltageHigh",
          "optional": "true"
        },
        "description": {
          "_text": "SupplyVoltageHigh"
        }
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x02",
          "priority": "info",
          "name": "PowerMissingPhase",
          "optional": "true"
        },
        "description": {
          "_text": "PowerMissingPhase"
        }
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x03",
          "priority": "info",
          "name": "SystemPressureLow",
          "optional": "true"
        },
        "description": {
          "_text": "SystemPressureLow"
        }
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x04",
          "priority": "info",
          "name": "SystemPressureHigh",
          "optional": "true"
        },
        "description": {
          "_text": "SystemPressureHigh"
        }
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x05",
          "priority": "critical",
          "name": "DryRunning",
          "optional": "true"
        },
        "description": {
          "_text": "DryRunning"
        }
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x06",
          "priority": "info",
          "name": "MotorTemperatureHigh",
          "optional": "true"
        },
        "description": {
          "_text": "MotorTemperatureHigh"
        }
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x07",
          "priority": "critical",
          "name": "PumpMotorFatalFailure",
          "optional": "true"
        },
        "description": {
          "_text": "PumpMotorFatalFailure"
        }
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x08",
          "priority": "info",
          "name": "ElectronicTemperatureHigh",
          "optional": "true"
        },
        "description": {
          "_text": "ElectronicTemperatureHigh"
        }
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x09",
          "priority": "critical",
          "name": "PumpBlocked",
          "optional": "true"
        },
        "description": {
          "_text": "PumpBlocked"
        }
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0A",
          "priority": "info",
          "name": "SensorFailure",
          "optional": "true"
        },
        "description": {
          "_text": "SensorFailure"
        }
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0B",
          "priority": "info",
          "name": "ElectronicNonFatalFailure",
          "optional": "true"
        },
        "description": {
          "_text": "ElectronicNonFatalFailure"
        }
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0C",
          "priority": "critical",
          "name": "ElectronicFatalFailure",
          "optional": "true"
        },
        "description": {
          "_text": "ElectronicFatalFailure"
        }
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0D",
          "priority": "info",
          "name": "GeneralFault",
          "optional": "true"
        },
        "description": {
          "_text": "GeneralFault"
        }
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0E",
          "priority": "info",
          "name": "Leakage",
          "optional": "true"
        },
        "description": {
          "_text": "Leakage"
        }
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0F",
          "priority": "info",
          "name": "AirDetection",
          "optional": "true"
        },
        "description": {
          "_text": "AirDetection"
        }
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x10",
          "priority": "info",
          "name": "TurbineOperation",
          "optional": "true"
        },
        "description": {
          "_text": "TurbineOperation"
        }
      }
    ]
  },
  "513": {
    "name": {
      "_text": "Thermostat"
    },
    "domain": {
      "_text": "HVAC"
    },
    "description": {
      "_text": "An interface for configuring and controlling the functionality of a thermostat."
    },
    "code": {
      "_text": "0x0201"
    },
    "define": {
      "_text": "THERMOSTAT_CLUSTER"
    },
    "client": {
      "_attributes": {
        "tick": "false",
        "init": "false"
      },
      "_text": "true"
    },
    "server": {
      "_attributes": {
        "tick": "false",
        "init": "false"
      },
      "_text": "true"
    },
    "globalAttribute": {
      "_attributes": {
        "side": "either",
        "code": "0xFFFD",
        "value": "5"
      }
    },
    "attribute": [
      {
        "_attributes": {
          "side": "server",
          "code": "0x0000",
          "define": "LOCAL_TEMPERATURE",
          "type": "INT16S",
          "min": "0x954D",
          "max": "0x7FFF",
          "writable": "false",
          "reportable": "true",
          "optional": "false",
          "isNullable": "true"
        },
        "_text": "LocalTemperature"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0001",
          "define": "OUTDOOR_TEMPERATURE",
          "type": "INT16S",
          "min": "0x954D",
          "max": "0x7FFF",
          "writable": "false",
          "optional": "true",
          "isNullable": "true"
        },
        "_text": "OutdoorTemperature"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0002",
          "define": "THERMOSTAT_OCCUPANCY",
          "type": "BITMAP8",
          "min": "0x00",
          "max": "0x01",
          "writable": "false",
          "default": "0x01",
          "optional": "true"
        },
        "_text": "Occupancy"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0003",
          "define": "ABS_MIN_HEAT_SETPOINT_LIMIT",
          "type": "INT16S",
          "min": "0x954D",
          "max": "0x7FFF",
          "writable": "false",
          "default": "700",
          "optional": "true"
        },
        "_text": "AbsMinHeatSetpointLimit"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0004",
          "define": "ABS_MAX_HEAT_SETPOINT_LIMIT",
          "type": "INT16S",
          "min": "0x954D",
          "max": "0x7FFF",
          "writable": "false",
          "default": "3000",
          "optional": "true"
        },
        "_text": "AbsMaxHeatSetpointLimit"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0005",
          "define": "ABS_MIN_COOL_SETPOINT_LIMIT",
          "type": "INT16S",
          "min": "0x954D",
          "max": "0x7FFF",
          "writable": "false",
          "default": "1600",
          "optional": "true"
        },
        "_text": "AbsMinCoolSetpointLimit"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0006",
          "define": "ABS_MAX_COOL_SETPOINT_LIMIT",
          "type": "INT16S",
          "min": "0x954D",
          "max": "0x7FFF",
          "writable": "false",
          "default": "3200",
          "optional": "true"
        },
        "_text": "AbsMaxCoolSetpointLimit"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0007",
          "define": "PI_COOLING_DEMAND",
          "type": "INT8U",
          "min": "0x00",
          "max": "0x64",
          "writable": "false",
          "reportable": "true",
          "optional": "true"
        },
        "_text": "PICoolingDemand"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0008",
          "define": "PI_HEATING_DEMAND",
          "type": "INT8U",
          "min": "0x00",
          "max": "0x64",
          "writable": "false",
          "reportable": "true",
          "optional": "true"
        },
        "_text": "PIHeatingDemand"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0009",
          "define": "HVAC_SYSTEM_TYPE_CONFIGURATION",
          "type": "BITMAP8",
          "min": "0x00",
          "max": "0xFF",
          "writable": "true",
          "optional": "true"
        },
        "description": {
          "_text": "HVACSystemTypeConfiguration"
        },
        "access": [
          {
            "_attributes": {
              "op": "read",
              "privilege": "view"
            }
          },
          {
            "_attributes": {
              "op": "write",
              "privilege": "manage"
            }
          }
        ]
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0010",
          "define": "LOCAL_TEMPERATURE_CALIBRATION",
          "type": "INT8S",
          "min": "0xE7",
          "max": "0x19",
          "writable": "true",
          "default": "0x00",
          "optional": "true"
        },
        "description": {
          "_text": "LocalTemperatureCalibration"
        },
        "access": [
          {
            "_attributes": {
              "op": "read",
              "privilege": "view"
            }
          },
          {
            "_attributes": {
              "op": "write",
              "privilege": "manage"
            }
          }
        ]
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0011",
          "define": "OCCUPIED_COOLING_SETPOINT",
          "type": "INT16S",
          "min": "-27315",
          "max": "0x7FFF",
          "writable": "true",
          "default": "2600",
          "optional": "true"
        },
        "_text": "OccupiedCoolingSetpoint"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0012",
          "define": "OCCUPIED_HEATING_SETPOINT",
          "type": "INT16S",
          "min": "-27315",
          "max": "0x7FFF",
          "writable": "true",
          "default": "2000",
          "optional": "true"
        },
        "_text": "OccupiedHeatingSetpoint"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0013",
          "define": "UNOCCUPIED_COOLING_SETPOINT",
          "type": "INT16S",
          "min": "-27315",
          "max": "0x7FFF",
          "writable": "true",
          "default": "2600",
          "optional": "true"
        },
        "_text": "UnoccupiedCoolingSetpoint"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0014",
          "define": "UNOCCUPIED_HEATING_SETPOINT",
          "type": "INT16S",
          "min": "-27315",
          "max": "0x7FFF",
          "writable": "true",
          "default": "2000",
          "optional": "true"
        },
        "_text": "UnoccupiedHeatingSetpoint"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0015",
          "define": "MIN_HEAT_SETPOINT_LIMIT",
          "type": "INT16S",
          "min": "-27315",
          "max": "0x7FFF",
          "writable": "true",
          "default": "700",
          "optional": "true"
        },
        "description": {
          "_text": "MinHeatSetpointLimit"
        },
        "access": [
          {
            "_attributes": {
              "op": "read",
              "privilege": "view"
            }
          },
          {
            "_attributes": {
              "op": "write",
              "privilege": "manage"
            }
          }
        ]
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0016",
          "define": "MAX_HEAT_SETPOINT_LIMIT",
          "type": "INT16S",
          "min": "-27315",
          "max": "0x7FFF",
          "writable": "true",
          "default": "3000",
          "optional": "true"
        },
        "description": {
          "_text": "MaxHeatSetpointLimit"
        },
        "access": [
          {
            "_attributes": {
              "op": "read",
              "privilege": "view"
            }
          },
          {
            "_attributes": {
              "op": "write",
              "privilege": "manage"
            }
          }
        ]
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0017",
          "define": "MIN_COOL_SETPOINT_LIMIT",
          "type": "INT16S",
          "min": "-27315",
          "max": "0x7FFF",
          "writable": "true",
          "default": "1600",
          "optional": "true"
        },
        "description": {
          "_text": "MinCoolSetpointLimit"
        },
        "access": [
          {
            "_attributes": {
              "op": "read",
              "privilege": "view"
            }
          },
          {
            "_attributes": {
              "op": "write",
              "privilege": "manage"
            }
          }
        ]
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0018",
          "define": "MAX_COOL_SETPOINT_LIMIT",
          "type": "INT16S",
          "min": "-27315",
          "max": "0x7FFF",
          "writable": "true",
          "default": "3200",
          "optional": "true"
        },
        "description": {
          "_text": "MaxCoolSetpointLimit"
        },
        "access": [
          {
            "_attributes": {
              "op": "read",
              "privilege": "view"
            }
          },
          {
            "_attributes": {
              "op": "write",
              "privilege": "manage"
            }
          }
        ]
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0019",
          "define": "MIN_SETPOINT_DEAD_BAND",
          "type": "INT8S",
          "min": "0",
          "max": "25",
          "writable": "true",
          "default": "25",
          "optional": "true"
        },
        "description": {
          "_text": "MinSetpointDeadBand"
        },
        "access": [
          {
            "_attributes": {
              "op": "read",
              "privilege": "view"
            }
          },
          {
            "_attributes": {
              "op": "write",
              "privilege": "manage"
            }
          }
        ]
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x001A",
          "define": "REMOTE_SENSING",
          "type": "BITMAP8",
          "min": "0x00",
          "max": "0x07",
          "writable": "true",
          "default": "0x00",
          "optional": "true"
        },
        "description": {
          "_text": "RemoteSensing"
        },
        "access": [
          {
            "_attributes": {
              "op": "read",
              "privilege": "view"
            }
          },
          {
            "_attributes": {
              "op": "write",
              "privilege": "manage"
            }
          }
        ]
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x001B",
          "define": "CONTROL_SEQUENCE_OF_OPERATION",
          "type": "ThermostatControlSequence",
          "min": "0x00",
          "max": "0x05",
          "writable": "true",
          "default": "0x04",
          "optional": "false"
        },
        "description": {
          "_text": "ControlSequenceOfOperation"
        },
        "access": [
          {
            "_attributes": {
              "op": "read",
              "privilege": "view"
            }
          },
          {
            "_attributes": {
              "op": "write",
              "privilege": "manage"
            }
          }
        ]
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x001C",
          "define": "SYSTEM_MODE",
          "type": "ENUM8",
          "min": "0x00",
          "max": "0x07",
          "writable": "true",
          "default": "0x01",
          "optional": "false"
        },
        "description": {
          "_text": "SystemMode"
        },
        "access": [
          {
            "_attributes": {
              "op": "read",
              "privilege": "view"
            }
          },
          {
            "_attributes": {
              "op": "write",
              "privilege": "manage"
            }
          }
        ]
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x001E",
          "define": "THERMOSTAT_RUNNING_MODE",
          "type": "ENUM8",
          "min": "0x00",
          "max": "0x04",
          "writable": "false",
          "optional": "true"
        },
        "_text": "ThermostatRunningMode"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0020",
          "define": "START_OF_WEEK",
          "type": "ENUM8",
          "min": "0x00",
          "max": "0x06",
          "writable": "false",
          "optional": "true"
        },
        "_text": "StartOfWeek"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0021",
          "define": "NUMBER_OF_WEEKLY_TRANSITIONS",
          "type": "INT8U",
          "min": "0x00",
          "max": "0xFF",
          "writable": "false",
          "optional": "true"
        },
        "_text": "NumberOfWeeklyTransitions"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0022",
          "define": "NUMBER_OF_DAILY_TRANSITIONS",
          "type": "INT8U",
          "min": "0x00",
          "max": "0xFF",
          "writable": "false",
          "optional": "true"
        },
        "_text": "NumberOfDailyTransitions"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0023",
          "define": "TEMPERATURE_SETPOINT_HOLD",
          "type": "ENUM8",
          "min": "0x00",
          "max": "0x01",
          "writable": "true",
          "default": "0x00",
          "optional": "true"
        },
        "description": {
          "_text": "TemperatureSetpointHold"
        },
        "access": [
          {
            "_attributes": {
              "op": "read",
              "privilege": "view"
            }
          },
          {
            "_attributes": {
              "op": "write",
              "privilege": "manage"
            }
          }
        ]
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0024",
          "define": "TEMPERATURE_SETPOINT_HOLD_DURATION",
          "type": "INT16U",
          "min": "0",
          "max": "1440",
          "writable": "true",
          "default": "0xFFFF",
          "optional": "true",
          "isNullable": "true"
        },
        "description": {
          "_text": "TemperatureSetpointHoldDuration"
        },
        "access": [
          {
            "_attributes": {
              "op": "read",
              "privilege": "view"
            }
          },
          {
            "_attributes": {
              "op": "write",
              "privilege": "manage"
            }
          }
        ]
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0025",
          "define": "THERMOSTAT_PROGRAMMING_OPERATION_MODE",
          "type": "BITMAP8",
          "writable": "true",
          "default": "0x0000",
          "optional": "true"
        },
        "description": {
          "_text": "ThermostatProgrammingOperationMode"
        },
        "access": [
          {
            "_attributes": {
              "op": "read",
              "privilege": "view"
            }
          },
          {
            "_attributes": {
              "op": "write",
              "privilege": "manage"
            }
          }
        ]
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0029",
          "define": "THERMOSTAT_RUNNING_STATE",
          "type": "BITMAP16",
          "writable": "false",
          "optional": "true"
        },
        "_text": "ThermostatRunningState"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0030",
          "define": "SETPOINT_CHANGE_SOURCE",
          "type": "ENUM8",
          "writable": "false",
          "optional": "true"
        },
        "_text": "SetpointChangeSource"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0031",
          "define": "SETPOINT_CHANGE_AMOUNT",
          "type": "INT16S",
          "writable": "false",
          "default": "0x8000",
          "optional": "true",
          "isNullable": "true"
        },
        "_text": "SetpointChangeAmount"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0032",
          "define": "SETPOINT_CHANGE_SOURCE_TIMESTAMP",
          "type": "epoch_s",
          "writable": "false",
          "optional": "true"
        },
        "_text": "SetpointChangeSourceTimestamp"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0034",
          "define": "OCCUPIED_SETBACK",
          "type": "int8u",
          "writable": "true",
          "optional": "true",
          "isNullable": "true"
        },
        "description": {
          "_text": "OccupiedSetback"
        },
        "access": [
          {
            "_attributes": {
              "op": "read",
              "privilege": "view"
            }
          },
          {
            "_attributes": {
              "op": "write",
              "privilege": "manage"
            }
          }
        ]
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0035",
          "define": "OCCUPIED_SETBACK_MIN",
          "type": "int8u",
          "writable": "false",
          "optional": "true",
          "isNullable": "true"
        },
        "_text": "OccupiedSetbackMin"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0036",
          "define": "OCCUPIED_SETBACK_MAX",
          "type": "int8u",
          "writable": "false",
          "optional": "true",
          "isNullable": "true"
        },
        "_text": "OccupiedSetbackMax"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0037",
          "define": "UNOCCUPIED_SETBACK",
          "type": "int8u",
          "writable": "true",
          "optional": "true",
          "isNullable": "true"
        },
        "description": {
          "_text": "UnoccupiedSetback"
        },
        "access": [
          {
            "_attributes": {
              "op": "read",
              "privilege": "view"
            }
          },
          {
            "_attributes": {
              "op": "write",
              "privilege": "manage"
            }
          }
        ]
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0038",
          "define": "UNOCCUPIED_SETBACK_MIN",
          "type": "int8u",
          "writable": "false",
          "optional": "true",
          "isNullable": "true"
        },
        "_text": "UnoccupiedSetbackMin"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0039",
          "define": "UNOCCUPIED_SETBACK_MAX",
          "type": "int8u",
          "writable": "false",
          "optional": "true",
          "isNullable": "true"
        },
        "_text": "UnoccupiedSetbackMax"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x003A",
          "define": "EMERGENCY_HEAT_DELTA",
          "type": "int8u",
          "writable": "true",
          "optional": "true"
        },
        "description": {
          "_text": "EmergencyHeatDelta"
        },
        "access": [
          {
            "_attributes": {
              "op": "read",
              "privilege": "view"
            }
          },
          {
            "_attributes": {
              "op": "write",
              "privilege": "manage"
            }
          }
        ]
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0040",
          "define": "AC_TYPE",
          "type": "ENUM8",
          "min": "0x00",
          "max": "0x04",
          "writable": "true",
          "default": "0x00",
          "optional": "true"
        },
        "description": {
          "_text": "ACType"
        },
        "access": [
          {
            "_attributes": {
              "op": "read",
              "privilege": "view"
            }
          },
          {
            "_attributes": {
              "op": "write",
              "privilege": "manage"
            }
          }
        ]
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0041",
          "define": "AC_CAPACITY",
          "type": "INT16U",
          "min": "0x0000",
          "max": "0xFFFF",
          "writable": "true",
          "default": "0x0000",
          "optional": "true"
        },
        "description": {
          "_text": "ACCapacity"
        },
        "access": [
          {
            "_attributes": {
              "op": "read",
              "privilege": "view"
            }
          },
          {
            "_attributes": {
              "op": "write",
              "privilege": "manage"
            }
          }
        ]
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0042",
          "define": "AC_REFRIGERANT_TYPE",
          "type": "ENUM8",
          "min": "0x00",
          "max": "0x03",
          "writable": "true",
          "default": "0x00",
          "optional": "true"
        },
        "description": {
          "_text": "ACRefrigerantType"
        },
        "access": [
          {
            "_attributes": {
              "op": "read",
              "privilege": "view"
            }
          },
          {
            "_attributes": {
              "op": "write",
              "privilege": "manage"
            }
          }
        ]
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0043",
          "define": "AC_COMPRESSOR_TYPE",
          "type": "ENUM8",
          "min": "0x00",
          "max": "0x03",
          "writable": "true",
          "default": "0x00",
          "optional": "true"
        },
        "description": {
          "_text": "ACCompressorType"
        },
        "access": [
          {
            "_attributes": {
              "op": "read",
              "privilege": "view"
            }
          },
          {
            "_attributes": {
              "op": "write",
              "privilege": "manage"
            }
          }
        ]
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0044",
          "define": "AC_ERROR_CODE",
          "type": "BITMAP32",
          "min": "0x00000000",
          "max": "0xFFFFFFFF",
          "writable": "true",
          "default": "0x00000000",
          "optional": "true"
        },
        "description": {
          "_text": "ACErrorCode"
        },
        "access": [
          {
            "_attributes": {
              "op": "read",
              "privilege": "view"
            }
          },
          {
            "_attributes": {
              "op": "write",
              "privilege": "manage"
            }
          }
        ]
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0045",
          "define": "AC_LOUVER_POSITION",
          "type": "ENUM8",
          "min": "0x00",
          "max": "0x05",
          "writable": "true",
          "default": "0x00",
          "optional": "true"
        },
        "description": {
          "_text": "ACLouverPosition"
        },
        "access": [
          {
            "_attributes": {
              "op": "read",
              "privilege": "view"
            }
          },
          {
            "_attributes": {
              "op": "write",
              "privilege": "manage"
            }
          }
        ]
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0046",
          "define": "AC_COIL_TEMPERATURE",
          "type": "INT16S",
          "min": "-27315",
          "max": "0x7FFF",
          "writable": "false",
          "default": "0x8000",
          "optional": "true",
          "isNullable": "true"
        },
        "_text": "ACCoilTemperature"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0047",
          "define": "AC_CAPACITY_FORMAT",
          "type": "ENUM8",
          "min": "0x00",
          "max": "0xFF",
          "writable": "true",
          "default": "0x00",
          "optional": "true"
        },
        "description": {
          "_text": "ACCapacityformat"
        },
        "access": [
          {
            "_attributes": {
              "op": "read",
              "privilege": "view"
            }
          },
          {
            "_attributes": {
              "op": "write",
              "privilege": "manage"
            }
          }
        ]
      }
    ],
    "_comment": " OCCUPANCY ",
    "command": [
      {
        "_attributes": {
          "source": "client",
          "code": "0x00",
          "name": "SetpointRaiseLower",
          "optional": "false"
        },
        "description": {
          "_text": "\n        Command description for SetpointRaiseLower\n      "
        },
        "arg": [
          {
            "_attributes": {
              "name": "Mode",
              "type": "SetpointAdjustMode"
            }
          },
          {
            "_attributes": {
              "name": "Amount",
              "type": "INT8S"
            }
          }
        ]
      },
      {
        "_attributes": {
          "source": "client",
          "code": "0x01",
          "name": "SetWeeklySchedule",
          "optional": "true"
        },
        "description": {
          "_text": "\n        Command description for SetWeeklySchedule\n      "
        },
        "arg": [
          {
            "_attributes": {
              "name": "NumberOfTransitionsForSequence",
              "type": "INT8U"
            }
          },
          {
            "_attributes": {
              "name": "DayOfWeekForSequence",
              "type": "DayOfWeek"
            }
          },
          {
            "_attributes": {
              "name": "ModeForSequence",
              "type": "ModeForSequence"
            }
          },
          {
            "_attributes": {
              "name": "Transitions",
              "type": "ThermostatScheduleTransition",
              "array": "true"
            }
          }
        ],
        "access": {
          "_attributes": {
            "op": "invoke",
            "privilege": "manage"
          }
        }
      },
      {
        "_attributes": {
          "source": "client",
          "code": "0x02",
          "name": "GetWeeklySchedule",
          "response": "GetWeeklyScheduleResponse",
          "optional": "true"
        },
        "description": {
          "_text": "\n        Command description for GetWeeklySchedule\n      "
        },
        "arg": [
          {
            "_attributes": {
              "name": "DaysToReturn",
              "type": "DayOfWeek"
            }
          },
          {
            "_attributes": {
              "name": "ModeToReturn",
              "type": "ModeForSequence"
            }
          }
        ]
      },
      {
        "_attributes": {
          "source": "client",
          "code": "0x03",
          "name": "ClearWeeklySchedule",
          "optional": "true"
        },
        "description": {
          "_text": "\n        The Clear Weekly Schedule command is used to clear the weekly schedule.\n      "
        },
        "access": {
          "_attributes": {
            "op": "invoke",
            "privilege": "manage"
          }
        }
      },
      {
        "_attributes": {
          "source": "server",
          "code": "0x00",
          "name": "GetWeeklyScheduleResponse",
          "optional": "true"
        },
        "description": {
          "_text": "\n        The Current Weekly Schedule Command is sent from the server in response to the Get Weekly Schedule Command.\n      "
        },
        "arg": [
          {
            "_attributes": {
              "name": "NumberOfTransitionsForSequence",
              "type": "INT8U"
            }
          },
          {
            "_attributes": {
              "name": "DayOfWeekForSequence",
              "type": "DayOfWeek"
            }
          },
          {
            "_attributes": {
              "name": "ModeForSequence",
              "type": "ModeForSequence"
            }
          },
          {
            "_attributes": {
              "name": "Transitions",
              "type": "ThermostatScheduleTransition",
              "array": "true"
            }
          }
        ]
      }
    ]
  },
  "514": {
    "name": {
      "_text": "Fan Control"
    },
    "domain": {
      "_text": "HVAC"
    },
    "description": {
      "_text": "An interface for controlling a fan in a heating/cooling system."
    },
    "code": {
      "_text": "0x0202"
    },
    "define": {
      "_text": "FAN_CONTROL_CLUSTER"
    },
    "client": {
      "_attributes": {
        "tick": "false",
        "init": "false"
      },
      "_text": "true"
    },
    "server": {
      "_attributes": {
        "tick": "false",
        "init": "false"
      },
      "_text": "true"
    },
    "attribute": [
      {
        "_attributes": {
          "side": "server",
          "code": "0x0000",
          "define": "FAN_MODE",
          "type": "FanModeType",
          "min": "0",
          "max": "6",
          "writable": "true",
          "default": "0",
          "optional": "false"
        },
        "_text": "FanMode"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0001",
          "define": "FAN_MODE_SEQUENCE",
          "type": "FanModeSequenceType",
          "min": "0",
          "max": "5",
          "writable": "true",
          "default": "2",
          "optional": "false"
        },
        "_text": "FanModeSequence"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0002",
          "define": "PERCENT_SETTING",
          "type": "INT8U",
          "min": "0",
          "max": "100",
          "writable": "true",
          "default": "0",
          "isNullable": "true",
          "optional": "false"
        },
        "_text": "PercentSetting"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0003",
          "define": "PERCENT_CURRENT",
          "type": "INT8U",
          "min": "0",
          "max": "100",
          "writable": "false",
          "default": "0",
          "optional": "false"
        },
        "_text": "PercentCurrent"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0004",
          "define": "SPEED_MAX",
          "type": "INT8U",
          "min": "1",
          "max": "100",
          "writable": "false",
          "default": "1",
          "optional": "true"
        },
        "_text": "SpeedMax"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0005",
          "define": "SPEED_SETTING",
          "type": "INT8U",
          "min": "0",
          "max": "100",
          "writable": "true",
          "default": "0",
          "isNullable": "true",
          "optional": "true"
        },
        "_text": "SpeedSetting"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0006",
          "define": "SPEED_CURRENT",
          "type": "INT8U",
          "min": "0",
          "max": "100",
          "writable": "false",
          "default": "0",
          "optional": "true"
        },
        "_text": "SpeedCurrent"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0007",
          "define": "ROCK_SUPPORT",
          "type": "BITMAP8",
          "writable": "false",
          "default": "0x00",
          "optional": "true"
        },
        "_text": "RockSupport"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0008",
          "define": "ROCK_SETTING",
          "type": "BITMAP8",
          "writable": "true",
          "default": "0x00",
          "optional": "true"
        },
        "_text": "RockSetting"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0009",
          "define": "WIND_SUPPORT",
          "type": "BITMAP8",
          "writable": "false",
          "default": "0x00",
          "optional": "true"
        },
        "_text": "WindSupport"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x000A",
          "define": "WIND_SETTING",
          "type": "BITMAP8",
          "writable": "true",
          "default": "0x00",
          "optional": "true"
        },
        "_text": "WindSetting"
      }
    ]
  },
  "516": {
    "name": {
      "_text": "Thermostat User Interface Configuration"
    },
    "domain": {
      "_text": "HVAC"
    },
    "description": {
      "_text": "An interface for configuring the user interface of a thermostat (which may be remote from the thermostat)."
    },
    "code": {
      "_text": "0x0204"
    },
    "define": {
      "_text": "THERMOSTAT_USER_INTERFACE_CONFIGURATION_CLUSTER"
    },
    "client": {
      "_attributes": {
        "tick": "false",
        "init": "false"
      },
      "_text": "true"
    },
    "server": {
      "_attributes": {
        "tick": "false",
        "tickFrequency": "half",
        "init": "false"
      },
      "_text": "true"
    },
    "globalAttribute": {
      "_attributes": {
        "side": "either",
        "code": "0xFFFD",
        "value": "2"
      }
    },
    "attribute": [
      {
        "_attributes": {
          "side": "server",
          "code": "0x0000",
          "define": "TEMPERATURE_DISPLAY_MODE",
          "type": "ENUM8",
          "min": "0x00",
          "max": "0x01",
          "writable": "true",
          "default": "0x00",
          "optional": "false"
        },
        "_text": "TemperatureDisplayMode"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0001",
          "define": "KEYPAD_LOCKOUT",
          "type": "ENUM8",
          "min": "0x00",
          "max": "0x05",
          "writable": "true",
          "default": "0x00",
          "optional": "false"
        },
        "description": {
          "_text": "KeypadLockout"
        },
        "access": [
          {
            "_attributes": {
              "op": "read",
              "role": "view"
            }
          },
          {
            "_attributes": {
              "op": "write",
              "role": "manage"
            }
          }
        ]
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0002",
          "define": "SCHEDULE_PROGRAMMING_VISIBILITY",
          "type": "ENUM8",
          "min": "0x00",
          "max": "0x01",
          "writable": "true",
          "optional": "true",
          "introducedIn": "ha-1.2-05-3520-29"
        },
        "description": {
          "_text": "ScheduleProgrammingVisibility"
        },
        "access": [
          {
            "_attributes": {
              "op": "read",
              "role": "view"
            }
          },
          {
            "_attributes": {
              "op": "write",
              "role": "manage"
            }
          }
        ]
      }
    ]
  },
  "768": {
    "name": {
      "_text": "Color Control"
    },
    "domain": {
      "_text": "Lighting"
    },
    "description": {
      "_text": "Attributes and commands for controlling the color properties of a color-capable light."
    },
    "code": {
      "_text": "0x0300"
    },
    "define": {
      "_text": "COLOR_CONTROL_CLUSTER"
    },
    "client": {
      "_attributes": {
        "tick": "false",
        "init": "false"
      },
      "_text": "true"
    },
    "server": {
      "_attributes": {
        "tick": "false",
        "init": "false"
      },
      "_text": "true"
    },
    "globalAttribute": {
      "_attributes": {
        "side": "either",
        "code": "0xFFFD",
        "value": "5"
      }
    },
    "attribute": [
      {
        "_attributes": {
          "side": "server",
          "code": "0x0000",
          "define": "COLOR_CONTROL_CURRENT_HUE",
          "type": "INT8U",
          "min": "0x00",
          "max": "0xFE",
          "writable": "false",
          "reportable": "true",
          "default": "0x00",
          "optional": "true"
        },
        "_text": "CurrentHue"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0001",
          "define": "COLOR_CONTROL_CURRENT_SATURATION",
          "type": "INT8U",
          "min": "0x00",
          "max": "0xFE",
          "writable": "false",
          "reportable": "true",
          "default": "0x00",
          "optional": "true"
        },
        "_text": "CurrentSaturation"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0002",
          "define": "COLOR_CONTROL_REMAINING_TIME",
          "type": "INT16U",
          "min": "0x0000",
          "max": "0xFFFE",
          "writable": "false",
          "default": "0x0000",
          "optional": "true"
        },
        "_text": "RemainingTime"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0003",
          "define": "COLOR_CONTROL_CURRENT_X",
          "type": "INT16U",
          "min": "0x0000",
          "max": "0xFEFF",
          "writable": "false",
          "reportable": "true",
          "default": "0x616B",
          "optional": "true"
        },
        "_text": "CurrentX"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0004",
          "define": "COLOR_CONTROL_CURRENT_Y",
          "type": "INT16U",
          "min": "0x0000",
          "max": "0xFEFF",
          "writable": "false",
          "reportable": "true",
          "default": "0x607D",
          "optional": "true"
        },
        "_text": "CurrentY"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0005",
          "define": "COLOR_CONTROL_DRIFT_COMPENSATION",
          "type": "ENUM8",
          "min": "0x00",
          "max": "0x04",
          "writable": "false",
          "optional": "true"
        },
        "_text": "DriftCompensation"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0006",
          "define": "COLOR_CONTROL_COMPENSATION_TEXT",
          "type": "CHAR_STRING",
          "length": "254",
          "writable": "false",
          "optional": "true"
        },
        "_text": "CompensationText"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0007",
          "define": "COLOR_CONTROL_COLOR_TEMPERATURE",
          "type": "INT16U",
          "min": "0x0000",
          "max": "0xFEFF",
          "writable": "false",
          "reportable": "true",
          "default": "0x00FA",
          "optional": "true"
        },
        "_text": "ColorTemperatureMireds"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0008",
          "define": "COLOR_CONTROL_COLOR_MODE",
          "type": "ENUM8",
          "min": "0x00",
          "max": "0x02",
          "writable": "false",
          "default": "0x01"
        },
        "_text": "ColorMode"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x000F",
          "define": "COLOR_CONTROL_OPTIONS",
          "type": "BITMAP8",
          "writable": "true",
          "default": "0x00"
        },
        "_text": "Options"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0010",
          "define": "COLOR_CONTROL_NUMBER_OF_PRIMARIES",
          "type": "INT8U",
          "min": "0x00",
          "max": "0x06",
          "isNullable": "true",
          "writable": "false"
        },
        "_text": "NumberOfPrimaries"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0011",
          "define": "COLOR_CONTROL_PRIMARY_1_X",
          "type": "INT16U",
          "min": "0x0000",
          "max": "0xFEFF",
          "writable": "false",
          "optional": "true"
        },
        "_text": "Primary1X"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0012",
          "define": "COLOR_CONTROL_PRIMARY_1_Y",
          "type": "INT16U",
          "min": "0x0000",
          "max": "0xFEFF",
          "writable": "false",
          "optional": "true"
        },
        "_text": "Primary1Y"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0013",
          "define": "COLOR_CONTROL_PRIMARY_1_INTENSITY",
          "type": "INT8U",
          "min": "0x00",
          "max": "0xFF",
          "isNullable": "true",
          "writable": "false",
          "optional": "true"
        },
        "_text": "Primary1Intensity"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0015",
          "define": "COLOR_CONTROL_PRIMARY_2_X",
          "type": "INT16U",
          "min": "0x0000",
          "max": "0xFEFF",
          "writable": "false",
          "optional": "true"
        },
        "_text": "Primary2X"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0016",
          "define": "COLOR_CONTROL_PRIMARY_2_Y",
          "type": "INT16U",
          "min": "0x0000",
          "max": "0xFEFF",
          "writable": "false",
          "optional": "true"
        },
        "_text": "Primary2Y"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0017",
          "define": "COLOR_CONTROL_PRIMARY_2_INTENSITY",
          "type": "INT8U",
          "min": "0x00",
          "max": "0xFF",
          "isNullable": "true",
          "writable": "false",
          "optional": "true"
        },
        "_text": "Primary2Intensity"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0019",
          "define": "COLOR_CONTROL_PRIMARY_3_X",
          "type": "INT16U",
          "min": "0x0000",
          "max": "0xFEFF",
          "writable": "false",
          "optional": "true"
        },
        "_text": "Primary3X"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x001A",
          "define": "COLOR_CONTROL_PRIMARY_3_Y",
          "type": "INT16U",
          "min": "0x0000",
          "max": "0xFEFF",
          "writable": "false",
          "optional": "true"
        },
        "_text": "Primary3Y"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x001B",
          "define": "COLOR_CONTROL_PRIMARY_3_INTENSITY",
          "type": "INT8U",
          "min": "0x00",
          "max": "0xFF",
          "isNullable": "true",
          "writable": "false",
          "optional": "true"
        },
        "_text": "Primary3Intensity"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0020",
          "define": "COLOR_CONTROL_PRIMARY_4_X",
          "type": "INT16U",
          "min": "0x0000",
          "max": "0xFEFF",
          "writable": "false",
          "optional": "true"
        },
        "_text": "Primary4X"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0021",
          "define": "COLOR_CONTROL_PRIMARY_4_Y",
          "type": "INT16U",
          "min": "0x0000",
          "max": "0xFEFF",
          "writable": "false",
          "optional": "true"
        },
        "_text": "Primary4Y"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0022",
          "define": "COLOR_CONTROL_PRIMARY_4_INTENSITY",
          "type": "INT8U",
          "min": "0x00",
          "max": "0xFF",
          "isNullable": "true",
          "writable": "false",
          "optional": "true"
        },
        "_text": "Primary4Intensity"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0024",
          "define": "COLOR_CONTROL_PRIMARY_5_X",
          "type": "INT16U",
          "min": "0x0000",
          "max": "0xFEFF",
          "writable": "false",
          "optional": "true"
        },
        "_text": "Primary5X"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0025",
          "define": "COLOR_CONTROL_PRIMARY_5_Y",
          "type": "INT16U",
          "min": "0x0000",
          "max": "0xFEFF",
          "writable": "false",
          "optional": "true"
        },
        "_text": "Primary5Y"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0026",
          "define": "COLOR_CONTROL_PRIMARY_5_INTENSITY",
          "type": "INT8U",
          "min": "0x00",
          "max": "0xFF",
          "isNullable": "true",
          "writable": "false",
          "optional": "true"
        },
        "_text": "Primary5Intensity"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0028",
          "define": "COLOR_CONTROL_PRIMARY_6_X",
          "type": "INT16U",
          "min": "0x0000",
          "max": "0xFEFF",
          "writable": "false",
          "optional": "true"
        },
        "_text": "Primary6X"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0029",
          "define": "COLOR_CONTROL_PRIMARY_6_Y",
          "type": "INT16U",
          "min": "0x0000",
          "max": "0xFEFF",
          "writable": "false",
          "optional": "true"
        },
        "_text": "Primary6Y"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x002A",
          "define": "COLOR_CONTROL_PRIMARY_6_INTENSITY",
          "type": "INT8U",
          "min": "0x00",
          "max": "0xFF",
          "isNullable": "true",
          "writable": "false",
          "optional": "true"
        },
        "_text": "Primary6Intensity"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0030",
          "define": "COLOR_CONTROL_WHITE_POINT_X",
          "type": "INT16U",
          "min": "0x0000",
          "max": "0xFEFF",
          "writable": "true",
          "optional": "true"
        },
        "description": {
          "_text": "WhitePointX"
        },
        "access": [
          {
            "_attributes": {
              "op": "read",
              "role": "view"
            }
          },
          {
            "_attributes": {
              "op": "write",
              "role": "manage"
            }
          }
        ]
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0031",
          "define": "COLOR_CONTROL_WHITE_POINT_Y",
          "type": "INT16U",
          "min": "0x0000",
          "max": "0xFEFF",
          "writable": "true",
          "optional": "true"
        },
        "description": {
          "_text": "WhitePointY"
        },
        "access": [
          {
            "_attributes": {
              "op": "read",
              "role": "view"
            }
          },
          {
            "_attributes": {
              "op": "write",
              "role": "manage"
            }
          }
        ]
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0032",
          "define": "COLOR_CONTROL_COLOR_POINT_R_X",
          "type": "INT16U",
          "min": "0x0000",
          "max": "0xFEFF",
          "writable": "true",
          "optional": "true"
        },
        "description": {
          "_text": "ColorPointRX"
        },
        "access": [
          {
            "_attributes": {
              "op": "read",
              "role": "view"
            }
          },
          {
            "_attributes": {
              "op": "write",
              "role": "manage"
            }
          }
        ]
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0033",
          "define": "COLOR_CONTROL_COLOR_POINT_R_Y",
          "type": "INT16U",
          "min": "0x0000",
          "max": "0xFEFF",
          "writable": "true",
          "optional": "true"
        },
        "description": {
          "_text": "ColorPointRY"
        },
        "access": [
          {
            "_attributes": {
              "op": "read",
              "role": "view"
            }
          },
          {
            "_attributes": {
              "op": "write",
              "role": "manage"
            }
          }
        ]
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0034",
          "define": "COLOR_CONTROL_COLOR_POINT_R_INTENSITY",
          "type": "INT8U",
          "isNullable": "true",
          "writable": "true",
          "optional": "true"
        },
        "description": {
          "_text": "ColorPointRIntensity"
        },
        "access": [
          {
            "_attributes": {
              "op": "read",
              "role": "view"
            }
          },
          {
            "_attributes": {
              "op": "write",
              "role": "manage"
            }
          }
        ]
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0036",
          "define": "COLOR_CONTROL_COLOR_POINT_G_X",
          "type": "INT16U",
          "min": "0x0000",
          "max": "0xFEFF",
          "writable": "true",
          "optional": "true"
        },
        "description": {
          "_text": "ColorPointGX"
        },
        "access": [
          {
            "_attributes": {
              "op": "read",
              "role": "view"
            }
          },
          {
            "_attributes": {
              "op": "write",
              "role": "manage"
            }
          }
        ]
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0037",
          "define": "COLOR_CONTROL_COLOR_POINT_G_Y",
          "type": "INT16U",
          "min": "0x0000",
          "max": "0xFEFF",
          "writable": "true",
          "optional": "true"
        },
        "description": {
          "_text": "ColorPointGY"
        },
        "access": [
          {
            "_attributes": {
              "op": "read",
              "role": "view"
            }
          },
          {
            "_attributes": {
              "op": "write",
              "role": "manage"
            }
          }
        ]
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0038",
          "define": "COLOR_CONTROL_COLOR_POINT_G_INTENSITY",
          "type": "INT8U",
          "isNullable": "true",
          "writable": "true",
          "optional": "true"
        },
        "description": {
          "_text": "ColorPointGIntensity"
        },
        "access": [
          {
            "_attributes": {
              "op": "read",
              "role": "view"
            }
          },
          {
            "_attributes": {
              "op": "write",
              "role": "manage"
            }
          }
        ]
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x003A",
          "define": "COLOR_CONTROL_COLOR_POINT_B_X",
          "type": "INT16U",
          "min": "0x0000",
          "max": "0xFEFF",
          "writable": "true",
          "optional": "true"
        },
        "description": {
          "_text": "ColorPointBX"
        },
        "access": [
          {
            "_attributes": {
              "op": "read",
              "role": "view"
            }
          },
          {
            "_attributes": {
              "op": "write",
              "role": "manage"
            }
          }
        ]
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x003B",
          "define": "COLOR_CONTROL_COLOR_POINT_B_Y",
          "type": "INT16U",
          "min": "0x0000",
          "max": "0xFEFF",
          "writable": "true",
          "optional": "true"
        },
        "description": {
          "_text": "ColorPointBY"
        },
        "access": [
          {
            "_attributes": {
              "op": "read",
              "role": "view"
            }
          },
          {
            "_attributes": {
              "op": "write",
              "role": "manage"
            }
          }
        ]
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x003C",
          "define": "COLOR_CONTROL_COLOR_POINT_B_INTENSITY",
          "type": "INT8U",
          "isNullable": "true",
          "writable": "true",
          "optional": "true"
        },
        "description": {
          "_text": "ColorPointBIntensity"
        },
        "access": [
          {
            "_attributes": {
              "op": "read",
              "role": "view"
            }
          },
          {
            "_attributes": {
              "op": "write",
              "role": "manage"
            }
          }
        ]
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x400D",
          "define": "COLOR_CONTROL_TEMPERATURE_LEVEL_MIN_MIREDS",
          "type": "INT16U",
          "min": "0x0000",
          "max": "0xFFFF",
          "writable": "false",
          "optional": "true"
        },
        "_text": "CoupleColorTempToLevelMinMireds"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x4010",
          "define": "START_UP_COLOR_TEMPERATURE_MIREDS",
          "type": "INT16U",
          "min": "0x0000",
          "max": "0xFEFF",
          "writable": "true",
          "isNullable": "true",
          "optional": "true"
        },
        "description": {
          "_text": "StartUpColorTemperatureMireds"
        },
        "access": [
          {
            "_attributes": {
              "op": "read",
              "role": "view"
            }
          },
          {
            "_attributes": {
              "op": "write",
              "role": "manage"
            }
          }
        ]
      }
    ],
    "_comment": [
      " CURRENT_HUE ",
      " CURRENT_SATURATION ",
      " REMAINING_TIME ",
      " CURRENT_X ",
      " CURRENT_Y ",
      " DRIFT_COMPENSATION ",
      " COMPENSATION_TEXT ",
      " COLOR_TEMPERATURE ",
      " COLOR_MODE ",
      " COLOR_CONTROL_OPTIONS ",
      " NUMBER_OF_PRIMARIES ",
      " PRIMARY_1_X ",
      " PRIMARY_1_Y ",
      " PRIMARY_1_INTENSITY ",
      " PRIMARY_2_X ",
      " PRIMARY_2_Y ",
      " PRIMARY_2_INTENSITY ",
      " PRIMARY_3_X ",
      " PRIMARY_3_Y ",
      " PRIMARY_3_INTENSITY ",
      " PRIMARY_4_X ",
      " PRIMARY_4_Y ",
      " PRIMARY_4_INTENSITY ",
      " PRIMARY_5_X ",
      " PRIMARY_5_Y ",
      " PRIMARY_5_INTENSITY ",
      " PRIMARY_6_X ",
      " PRIMARY_6_Y ",
      " PRIMARY_6_INTENSITY ",
      " WHITE_POINT_X ",
      " WHITE_POINT_Y ",
      " COLOR_POINT_R_X ",
      " COLOR_POINT_R_Y ",
      " COLOR_POINT_R_INTENSITY ",
      " COLOR_POINT_G_X ",
      " COLOR_POINT_G_Y ",
      " COLOR_POINT_G_INTENSITY ",
      " COLOR_POINT_B_X ",
      " COLOR_POINT_B_Y ",
      " COLOR_POINT_B_INTENSITY "
    ],
    "command": [
      {
        "_attributes": {
          "source": "client",
          "code": "0x00",
          "name": "MoveToHue",
          "optional": "true",
          "cli": "zcl color-control movetohue"
        },
        "description": {
          "_text": "\n        Move to specified hue.\n      "
        },
        "arg": [
          {
            "_attributes": {
              "name": "Hue",
              "type": "INT8U"
            }
          },
          {
            "_attributes": {
              "name": "Direction",
              "type": "HueDirection"
            }
          },
          {
            "_attributes": {
              "name": "TransitionTime",
              "type": "INT16U"
            }
          },
          {
            "_attributes": {
              "name": "OptionsMask",
              "type": "BITMAP8"
            }
          },
          {
            "_attributes": {
              "name": "OptionsOverride",
              "type": "BITMAP8"
            }
          }
        ]
      },
      {
        "_attributes": {
          "source": "client",
          "code": "0x01",
          "name": "MoveHue",
          "optional": "true",
          "cli": "zcl color-control movehue"
        },
        "description": {
          "_text": "\n        Move hue up or down at specified rate.\n      "
        },
        "arg": [
          {
            "_attributes": {
              "name": "MoveMode",
              "type": "HueMoveMode"
            }
          },
          {
            "_attributes": {
              "name": "Rate",
              "type": "INT8U"
            }
          },
          {
            "_attributes": {
              "name": "OptionsMask",
              "type": "BITMAP8"
            }
          },
          {
            "_attributes": {
              "name": "OptionsOverride",
              "type": "BITMAP8"
            }
          }
        ]
      },
      {
        "_attributes": {
          "source": "client",
          "code": "0x02",
          "name": "StepHue",
          "optional": "true",
          "cli": "zcl color-control stephue"
        },
        "description": {
          "_text": "\n        Step hue up or down by specified size at specified rate.\n      "
        },
        "arg": [
          {
            "_attributes": {
              "name": "StepMode",
              "type": "HueStepMode"
            }
          },
          {
            "_attributes": {
              "name": "StepSize",
              "type": "INT8U"
            }
          },
          {
            "_attributes": {
              "name": "TransitionTime",
              "type": "INT8U"
            }
          },
          {
            "_attributes": {
              "name": "OptionsMask",
              "type": "BITMAP8"
            }
          },
          {
            "_attributes": {
              "name": "OptionsOverride",
              "type": "BITMAP8"
            }
          }
        ]
      },
      {
        "_attributes": {
          "source": "client",
          "code": "0x03",
          "name": "MoveToSaturation",
          "optional": "true",
          "cli": "zcl color-control movetosat"
        },
        "description": {
          "_text": "\n        Move to specified saturation.\n      "
        },
        "arg": [
          {
            "_attributes": {
              "name": "Saturation",
              "type": "INT8U"
            }
          },
          {
            "_attributes": {
              "name": "TransitionTime",
              "type": "INT16U"
            }
          },
          {
            "_attributes": {
              "name": "OptionsMask",
              "type": "BITMAP8"
            }
          },
          {
            "_attributes": {
              "name": "OptionsOverride",
              "type": "BITMAP8"
            }
          }
        ]
      },
      {
        "_attributes": {
          "source": "client",
          "code": "0x04",
          "name": "MoveSaturation",
          "optional": "true",
          "cli": "zcl color-control movesat"
        },
        "description": {
          "_text": "\n        Move saturation up or down at specified rate.\n      "
        },
        "arg": [
          {
            "_attributes": {
              "name": "MoveMode",
              "type": "SaturationMoveMode"
            }
          },
          {
            "_attributes": {
              "name": "Rate",
              "type": "INT8U"
            }
          },
          {
            "_attributes": {
              "name": "OptionsMask",
              "type": "BITMAP8"
            }
          },
          {
            "_attributes": {
              "name": "OptionsOverride",
              "type": "BITMAP8"
            }
          }
        ]
      },
      {
        "_attributes": {
          "source": "client",
          "code": "0x05",
          "name": "StepSaturation",
          "optional": "true",
          "cli": "zcl color-control stepsat"
        },
        "description": {
          "_text": "\n        Step saturation up or down by specified size at specified rate.\n      "
        },
        "arg": [
          {
            "_attributes": {
              "name": "StepMode",
              "type": "SaturationStepMode"
            }
          },
          {
            "_attributes": {
              "name": "StepSize",
              "type": "INT8U"
            }
          },
          {
            "_attributes": {
              "name": "TransitionTime",
              "type": "INT8U"
            }
          },
          {
            "_attributes": {
              "name": "OptionsMask",
              "type": "BITMAP8"
            }
          },
          {
            "_attributes": {
              "name": "OptionsOverride",
              "type": "BITMAP8"
            }
          }
        ]
      },
      {
        "_attributes": {
          "source": "client",
          "code": "0x06",
          "name": "MoveToHueAndSaturation",
          "optional": "true",
          "cli": "zcl color-control movetohueandsat"
        },
        "description": {
          "_text": "\n        Move to hue and saturation.\n      "
        },
        "arg": [
          {
            "_attributes": {
              "name": "Hue",
              "type": "INT8U"
            }
          },
          {
            "_attributes": {
              "name": "Saturation",
              "type": "INT8U"
            }
          },
          {
            "_attributes": {
              "name": "TransitionTime",
              "type": "INT16U"
            }
          },
          {
            "_attributes": {
              "name": "OptionsMask",
              "type": "BITMAP8"
            }
          },
          {
            "_attributes": {
              "name": "OptionsOverride",
              "type": "BITMAP8"
            }
          }
        ]
      },
      {
        "_attributes": {
          "source": "client",
          "code": "0x07",
          "name": "MoveToColor",
          "optional": "true",
          "cli": "zcl color-control movetocolor"
        },
        "description": {
          "_text": "\n        Move to specified color.\n      "
        },
        "arg": [
          {
            "_attributes": {
              "name": "ColorX",
              "type": "INT16U"
            }
          },
          {
            "_attributes": {
              "name": "ColorY",
              "type": "INT16U"
            }
          },
          {
            "_attributes": {
              "name": "TransitionTime",
              "type": "INT16U"
            }
          },
          {
            "_attributes": {
              "name": "OptionsMask",
              "type": "BITMAP8"
            }
          },
          {
            "_attributes": {
              "name": "OptionsOverride",
              "type": "BITMAP8"
            }
          }
        ]
      },
      {
        "_attributes": {
          "source": "client",
          "code": "0x08",
          "name": "MoveColor",
          "optional": "true",
          "cli": "zcl color-control movecolor"
        },
        "description": {
          "_text": "\n        Moves the color.\n      "
        },
        "arg": [
          {
            "_attributes": {
              "name": "RateX",
              "type": "INT16S"
            }
          },
          {
            "_attributes": {
              "name": "RateY",
              "type": "INT16S"
            }
          },
          {
            "_attributes": {
              "name": "OptionsMask",
              "type": "BITMAP8"
            }
          },
          {
            "_attributes": {
              "name": "OptionsOverride",
              "type": "BITMAP8"
            }
          }
        ]
      },
      {
        "_attributes": {
          "source": "client",
          "code": "0x09",
          "name": "StepColor",
          "optional": "true",
          "cli": "zcl color-control stepcolor"
        },
        "description": {
          "_text": "\n        Steps the lighting to a specific color.\n      "
        },
        "arg": [
          {
            "_attributes": {
              "name": "StepX",
              "type": "INT16S"
            }
          },
          {
            "_attributes": {
              "name": "StepY",
              "type": "INT16S"
            }
          },
          {
            "_attributes": {
              "name": "TransitionTime",
              "type": "INT16U"
            }
          },
          {
            "_attributes": {
              "name": "OptionsMask",
              "type": "BITMAP8"
            }
          },
          {
            "_attributes": {
              "name": "OptionsOverride",
              "type": "BITMAP8"
            }
          }
        ]
      },
      {
        "_attributes": {
          "source": "client",
          "code": "0x0A",
          "name": "MoveToColorTemperature",
          "optional": "true",
          "cli": "zcl color-control movetocolortemp"
        },
        "description": {
          "_text": "\n        Move to a specific color temperature.\n      "
        },
        "arg": [
          {
            "_attributes": {
              "name": "ColorTemperatureMireds",
              "type": "INT16U"
            }
          },
          {
            "_attributes": {
              "name": "TransitionTime",
              "type": "INT16U"
            }
          },
          {
            "_attributes": {
              "name": "OptionsMask",
              "type": "BITMAP8"
            }
          },
          {
            "_attributes": {
              "name": "OptionsOverride",
              "type": "BITMAP8"
            }
          }
        ]
      }
    ]
  },
  "769": {
    "name": {
      "_text": "Ballast Configuration"
    },
    "domain": {
      "_text": "Lighting"
    },
    "description": {
      "_text": "Attributes and commands for configuring a lighting ballast."
    },
    "code": {
      "_text": "0x0301"
    },
    "define": {
      "_text": "BALLAST_CONFIGURATION_CLUSTER"
    },
    "client": {
      "_attributes": {
        "tick": "false",
        "init": "false"
      },
      "_text": "true"
    },
    "server": {
      "_attributes": {
        "tick": "false",
        "init": "false"
      },
      "_text": "true"
    },
    "globalAttribute": {
      "_attributes": {
        "side": "either",
        "code": "0xFFFD",
        "value": "4"
      }
    },
    "_comment": [
      " Ballast Configuration Attribute Set ",
      " Ballast Settings Attribute Set ",
      " PowerOnLevel and PowerOnFadeTime are deprecated ",
      " Lamp Information Attribute Set ",
      " Lamp Settings Attribute Set "
    ],
    "attribute": [
      {
        "_attributes": {
          "side": "server",
          "code": "0x0000",
          "define": "PHYSICAL_MIN_LEVEL",
          "type": "INT8U",
          "min": "0x01",
          "max": "0xFE",
          "writable": "false",
          "default": "0x01",
          "optional": "false"
        },
        "_text": "PhysicalMinLevel"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0001",
          "define": "PHYSICAL_MAX_LEVEL",
          "type": "INT8U",
          "min": "0x01",
          "max": "0xFE",
          "writable": "false",
          "default": "0xFE",
          "optional": "false"
        },
        "_text": "PhysicalMaxLevel"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0002",
          "define": "BALLAST_STATUS",
          "type": "BITMAP8",
          "min": "0x00",
          "max": "0x03",
          "writable": "false",
          "default": "0x00",
          "optional": "true"
        },
        "_text": "BallastStatus"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0010",
          "define": "MIN_LEVEL",
          "type": "INT8U",
          "min": "0x01",
          "max": "0xFE",
          "writable": "true",
          "default": "0x01",
          "optional": "false"
        },
        "_text": "MinLevel"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0011",
          "define": "MAX_LEVEL",
          "type": "INT8U",
          "min": "0x01",
          "max": "0xFE",
          "writable": "true",
          "default": "0xFE",
          "optional": "false"
        },
        "_text": "MaxLevel"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0014",
          "define": "INTRINSIC_BALLAST_FACTOR",
          "type": "INT8U",
          "writable": "true",
          "isNullable": "true",
          "optional": "true"
        },
        "_text": "IntrinsicBallastFactor"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0015",
          "define": "BALLAST_FACTOR_ADJUSTMENT",
          "type": "INT8U",
          "min": "0x64",
          "writable": "true",
          "default": "0xFF",
          "isNullable": "true",
          "optional": "true"
        },
        "_text": "BallastFactorAdjustment"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0020",
          "define": "LAMP_QUANTITY",
          "type": "INT8U",
          "writable": "false",
          "optional": "false"
        },
        "_text": "LampQuantity"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0030",
          "define": "LAMP_TYPE",
          "type": "CHAR_STRING",
          "length": "16",
          "writable": "true",
          "optional": "true"
        },
        "_text": "LampType"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0031",
          "define": "LAMP_MANUFACTURER",
          "type": "CHAR_STRING",
          "length": "16",
          "writable": "true",
          "optional": "true"
        },
        "_text": "LampManufacturer"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0032",
          "define": "LAMP_RATED_HOURS",
          "type": "INT24U",
          "writable": "true",
          "default": "0xFFFFFF",
          "isNullable": "true",
          "optional": "true"
        },
        "_text": "LampRatedHours"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0033",
          "define": "LAMP_BURN_HOURS",
          "type": "INT24U",
          "writable": "true",
          "default": "0x000000",
          "isNullable": "true",
          "optional": "true"
        },
        "_text": "LampBurnHours"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0034",
          "define": "LAMP_ALARM_MODE",
          "type": "BITMAP8",
          "min": "0x00",
          "max": "0x01",
          "writable": "true",
          "default": "0x00",
          "optional": "true"
        },
        "_text": "LampAlarmMode"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0035",
          "define": "LAMP_BURN_HOURS_TRIP_POINT",
          "type": "INT24U",
          "writable": "true",
          "default": "0xFFFFFF",
          "isNullable": "true",
          "optional": "true"
        },
        "_text": "LampBurnHoursTripPoint"
      }
    ]
  },
  "1024": {
    "name": {
      "_text": "Illuminance Measurement"
    },
    "domain": {
      "_text": "Measurement & Sensing"
    },
    "description": {
      "_text": "Attributes and commands for configuring the measurement of illuminance, and reporting illuminance measurements."
    },
    "code": {
      "_text": "0x0400"
    },
    "define": {
      "_text": "ILLUMINANCE_MEASUREMENT_CLUSTER"
    },
    "client": {
      "_attributes": {
        "tick": "false",
        "init": "false"
      },
      "_text": "true"
    },
    "server": {
      "_attributes": {
        "tick": "false",
        "init": "false"
      },
      "_text": "true"
    },
    "globalAttribute": {
      "_attributes": {
        "side": "either",
        "code": "0xFFFD",
        "value": "3"
      }
    },
    "attribute": [
      {
        "_attributes": {
          "side": "server",
          "code": "0x0000",
          "define": "ILLUM_MEASURED_VALUE",
          "type": "INT16U",
          "min": "0x0000",
          "max": "0xFFFF",
          "writable": "false",
          "reportable": "true",
          "isNullable": "true",
          "default": "0x0000",
          "optional": "false"
        },
        "_text": "MeasuredValue"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0001",
          "define": "ILLUM_MIN_MEASURED_VALUE",
          "type": "INT16U",
          "min": "0x0001",
          "max": "0xFFFD",
          "writable": "false",
          "isNullable": "true",
          "optional": "false"
        },
        "_text": "MinMeasuredValue"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0002",
          "define": "ILLUM_MAX_MEASURED_VALUE",
          "type": "INT16U",
          "min": "0x0002",
          "max": "0xFFFE",
          "writable": "false",
          "isNullable": "true",
          "optional": "false"
        },
        "_text": "MaxMeasuredValue"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0003",
          "define": "ILLUM_TOLERANCE",
          "type": "INT16U",
          "min": "0x0000",
          "max": "0x0800",
          "writable": "false",
          "optional": "true"
        },
        "_text": "Tolerance"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0004",
          "define": "ILLUM_LIGHT_SENSOR_TYPE",
          "type": "ENUM8",
          "min": "0x00",
          "max": "0xFF",
          "writable": "false",
          "isNullable": "true",
          "default": "0xFF",
          "optional": "true"
        },
        "_text": "LightSensorType"
      }
    ]
  },
  "1026": {
    "name": {
      "_text": "Temperature Measurement"
    },
    "domain": {
      "_text": "Measurement & Sensing"
    },
    "description": {
      "_text": "Attributes and commands for configuring the measurement of temperature, and reporting temperature measurements."
    },
    "code": {
      "_text": "0x0402"
    },
    "define": {
      "_text": "TEMPERATURE_MEASUREMENT_CLUSTER"
    },
    "client": {
      "_attributes": {
        "tick": "false",
        "init": "false"
      },
      "_text": "true"
    },
    "server": {
      "_attributes": {
        "tick": "false",
        "init": "false"
      },
      "_text": "true"
    },
    "attribute": [
      {
        "_attributes": {
          "side": "server",
          "code": "0x0000",
          "define": "TEMP_MEASURED_VALUE",
          "type": "INT16S",
          "min": "0x954d",
          "max": "0x7fff",
          "writable": "false",
          "isNullable": "true",
          "optional": "false"
        },
        "_text": "MeasuredValue"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0001",
          "define": "TEMP_MIN_MEASURED_VALUE",
          "type": "INT16S",
          "min": "0x954d",
          "max": "0x7ffe",
          "writable": "false",
          "isNullable": "true",
          "default": "0x8000",
          "optional": "false"
        },
        "_text": "MinMeasuredValue"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0002",
          "define": "TEMP_MAX_MEASURED_VALUE",
          "type": "INT16S",
          "min": "0x954e",
          "max": "0x7fff",
          "writable": "false",
          "isNullable": "true",
          "default": "0x8000",
          "optional": "false"
        },
        "_text": "MaxMeasuredValue"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0003",
          "define": "TEMP_TOLERANCE",
          "type": "INT16U",
          "min": "0",
          "max": "0x8000",
          "writable": "false",
          "default": "0",
          "optional": "true"
        },
        "_text": "Tolerance"
      }
    ]
  },
  "1027": {
    "name": {
      "_text": "Pressure Measurement"
    },
    "domain": {
      "_text": "Measurement & Sensing"
    },
    "description": {
      "_text": "Attributes and commands for configuring the measurement of pressure, and reporting pressure measurements."
    },
    "code": {
      "_text": "0x0403"
    },
    "define": {
      "_text": "PRESSURE_MEASUREMENT_CLUSTER"
    },
    "client": {
      "_attributes": {
        "tick": "false",
        "init": "false"
      },
      "_text": "true"
    },
    "server": {
      "_attributes": {
        "tick": "false",
        "tickFrequency": "half",
        "init": "false"
      },
      "_text": "true"
    },
    "globalAttribute": {
      "_attributes": {
        "side": "either",
        "code": "0xFFFD",
        "value": "3"
      }
    },
    "attribute": [
      {
        "_attributes": {
          "side": "server",
          "code": "0x0000",
          "define": "PRESSURE_MEASURED_VALUE",
          "type": "INT16S",
          "writable": "false",
          "reportable": "true",
          "default": "0x0000",
          "optional": "false",
          "isNullable": "true"
        },
        "_text": "MeasuredValue"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0001",
          "define": "PRESSURE_MIN_MEASURED_VALUE",
          "type": "INT16S",
          "writable": "false",
          "optional": "false",
          "isNullable": "true"
        },
        "_text": "MinMeasuredValue"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0002",
          "define": "PRESSURE_MAX_MEASURED_VALUE",
          "type": "INT16S",
          "writable": "false",
          "optional": "false",
          "isNullable": "true"
        },
        "_text": "MaxMeasuredValue"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0003",
          "define": "PRESSURE_TOLERANCE",
          "type": "INT16U",
          "min": "0x0000",
          "max": "0x0800",
          "writable": "false",
          "reportable": "true",
          "optional": "true",
          "default": "0"
        },
        "_text": "Tolerance"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0010",
          "define": "PRESSURE_SCALED_VALUE",
          "type": "INT16S",
          "writable": "false",
          "reportable": "true",
          "optional": "true",
          "default": "0",
          "isNullable": "true"
        },
        "_text": "ScaledValue"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0011",
          "define": "PRESSURE_MIN_SCALED_VALUE",
          "type": "INT16S",
          "writable": "false",
          "optional": "true",
          "default": "0",
          "isNullable": "true"
        },
        "_text": "MinScaledValue"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0012",
          "define": "PRESSURE_MAX_SCALED_VALUE",
          "type": "INT16S",
          "writable": "false",
          "optional": "true",
          "default": "0",
          "isNullable": "true"
        },
        "_text": "MaxScaledValue"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0013",
          "define": "PRESSURE_SCALED_TOLERANCE",
          "type": "INT16U",
          "min": "0x0000",
          "max": "0x0800",
          "writable": "false",
          "reportable": "true",
          "optional": "true",
          "default": "0"
        },
        "_text": "ScaledTolerance"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0014",
          "define": "PRESSURE_SCALE",
          "type": "INT8S",
          "writable": "false",
          "optional": "true",
          "default": "0"
        },
        "_text": "Scale"
      }
    ]
  },
  "1028": {
    "name": {
      "_text": "Flow Measurement"
    },
    "domain": {
      "_text": "Measurement & Sensing"
    },
    "description": {
      "_text": "Attributes and commands for configuring the measurement of flow, and reporting flow measurements."
    },
    "code": {
      "_text": "0x0404"
    },
    "define": {
      "_text": "FLOW_MEASUREMENT_CLUSTER"
    },
    "client": {
      "_attributes": {
        "tick": "false",
        "init": "false"
      },
      "_text": "true"
    },
    "server": {
      "_attributes": {
        "tick": "false",
        "init": "false"
      },
      "_text": "true"
    },
    "attribute": [
      {
        "_attributes": {
          "side": "server",
          "code": "0x0000",
          "define": "FLOW_MEASURED_VALUE",
          "type": "INT16U",
          "writable": "false",
          "optional": "false",
          "isNullable": "true"
        },
        "_text": "MeasuredValue"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0001",
          "define": "FLOW_MIN_MEASURED_VALUE",
          "type": "INT16U",
          "writable": "false",
          "optional": "false",
          "isNullable": "true"
        },
        "_text": "MinMeasuredValue"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0002",
          "define": "FLOW_MAX_MEASURED_VALUE",
          "type": "INT16U",
          "writable": "false",
          "optional": "false",
          "isNullable": "true"
        },
        "_text": "MaxMeasuredValue"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0003",
          "define": "FLOW_TOLERANCE",
          "type": "INT16U",
          "min": "0x0000",
          "max": "0x0800",
          "writable": "false",
          "default": "0",
          "optional": "true"
        },
        "_text": "Tolerance"
      }
    ]
  },
  "1029": {
    "name": {
      "_text": "Relative Humidity Measurement"
    },
    "domain": {
      "_text": "Measurement & Sensing"
    },
    "description": {
      "_text": "Attributes and commands for configuring the measurement of relative humidity, and reporting relative humidity measurements."
    },
    "code": {
      "_text": "0x0405"
    },
    "define": {
      "_text": "RELATIVE_HUMIDITY_MEASUREMENT_CLUSTER"
    },
    "client": {
      "_attributes": {
        "tick": "false",
        "init": "false"
      },
      "_text": "true"
    },
    "server": {
      "_attributes": {
        "tick": "false",
        "tickFrequency": "half",
        "init": "false"
      },
      "_text": "true"
    },
    "globalAttribute": {
      "_attributes": {
        "side": "either",
        "code": "0xFFFD",
        "value": "3"
      }
    },
    "attribute": [
      {
        "_attributes": {
          "side": "server",
          "code": "0x0000",
          "define": "RELATIVE_HUMIDITY_MEASURED_VALUE",
          "type": "INT16U",
          "writable": "false",
          "reportable": "true",
          "optional": "false",
          "isNullable": "true"
        },
        "_text": "MeasuredValue"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0001",
          "define": "RELATIVE_HUMIDITY_MIN_MEASURED_VALUE",
          "type": "INT16U",
          "min": "0x0000",
          "max": "0x270F",
          "writable": "false",
          "optional": "false",
          "isNullable": "true"
        },
        "_text": "MinMeasuredValue"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0002",
          "define": "RELATIVE_HUMIDITY_MAX_MEASURED_VALUE",
          "type": "INT16U",
          "min": "0x0001",
          "max": "0x2710",
          "writable": "false",
          "optional": "false",
          "isNullable": "true"
        },
        "_text": "MaxMeasuredValue"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0003",
          "define": "RELATIVE_HUMIDITY_TOLERANCE",
          "type": "INT16U",
          "min": "0x0000",
          "max": "0x0800",
          "writable": "false",
          "reportable": "true",
          "optional": "true"
        },
        "_text": "Tolerance"
      }
    ]
  },
  "1030": {
    "name": {
      "_text": "Occupancy Sensing"
    },
    "domain": {
      "_text": "Measurement & Sensing"
    },
    "description": {
      "_text": "Attributes and commands for configuring occupancy sensing, and reporting occupancy status."
    },
    "code": {
      "_text": "0x0406"
    },
    "define": {
      "_text": "OCCUPANCY_SENSING_CLUSTER"
    },
    "client": {
      "_attributes": {
        "tick": "false",
        "init": "false"
      },
      "_text": "true"
    },
    "server": {
      "_attributes": {
        "tick": "false",
        "tickFrequency": "half",
        "init": "false"
      },
      "_text": "true"
    },
    "globalAttribute": {
      "_attributes": {
        "side": "either",
        "code": "0xFFFD",
        "value": "3"
      }
    },
    "attribute": [
      {
        "_attributes": {
          "side": "server",
          "code": "0x0000",
          "define": "OCCUPANCY",
          "type": "BITMAP8",
          "min": "0x00",
          "max": "0x01",
          "writable": "false",
          "reportable": "true",
          "optional": "false"
        },
        "_text": "Occupancy"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0001",
          "define": "OCCUPANCY_SENSOR_TYPE",
          "type": "ENUM8",
          "min": "0x00",
          "max": "0xFE",
          "writable": "false",
          "optional": "false"
        },
        "_text": "OccupancySensorType"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0002",
          "define": "OCCUPANCY_SENSOR_TYPE_BITMAP",
          "type": "BITMAP8",
          "min": "0x00",
          "max": "0x07",
          "writable": "false",
          "optional": "false"
        },
        "_text": "OccupancySensorTypeBitmap"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0010",
          "define": "PIR_OCCUPIED_TO_UNOCCUPIED_DELAY",
          "type": "INT16U",
          "min": "0x0000",
          "max": "0xFFFE",
          "writable": "true",
          "default": "0x0000",
          "optional": "true"
        },
        "description": {
          "_text": "PIROccupiedToUnoccupiedDelay"
        },
        "access": [
          {
            "_attributes": {
              "op": "read",
              "role": "view"
            }
          },
          {
            "_attributes": {
              "op": "write",
              "role": "manage"
            }
          }
        ]
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0011",
          "define": "PIR_UNOCCUPIED_TO_OCCUPIED_DELAY",
          "type": "INT16U",
          "min": "0x0000",
          "max": "0xFFFE",
          "writable": "true",
          "default": "0x0000",
          "optional": "true"
        },
        "description": {
          "_text": "PIRUnoccupiedToOccupiedDelay"
        },
        "access": [
          {
            "_attributes": {
              "op": "read",
              "role": "view"
            }
          },
          {
            "_attributes": {
              "op": "write",
              "role": "manage"
            }
          }
        ]
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0012",
          "define": "PIR_UNOCCUPIED_TO_OCCUPIED_THRESHOLD",
          "type": "INT8U",
          "min": "0x01",
          "max": "0xFE",
          "writable": "true",
          "default": "0x01",
          "optional": "true"
        },
        "description": {
          "_text": "PIRUnoccupiedToOccupiedThreshold"
        },
        "access": [
          {
            "_attributes": {
              "op": "read",
              "role": "view"
            }
          },
          {
            "_attributes": {
              "op": "write",
              "role": "manage"
            }
          }
        ]
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0020",
          "define": "ULTRASONIC_OCCUPIED_TO_UNOCCUPIED_DELAY",
          "type": "INT16U",
          "min": "0x0000",
          "max": "0xFFFE",
          "writable": "true",
          "default": "0x0000",
          "optional": "true"
        },
        "description": {
          "_text": "UltrasonicOccupiedToUnoccupiedDelay"
        },
        "access": [
          {
            "_attributes": {
              "op": "read",
              "role": "view"
            }
          },
          {
            "_attributes": {
              "op": "write",
              "role": "manage"
            }
          }
        ]
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0021",
          "define": "ULTRASONIC_UNOCCUPIED_TO_OCCUPIED_DELAY",
          "type": "INT16U",
          "min": "0x0000",
          "max": "0xFFFE",
          "writable": "true",
          "default": "0x0000",
          "optional": "true"
        },
        "description": {
          "_text": "UltrasonicUnoccupiedToOccupiedDelay"
        },
        "access": [
          {
            "_attributes": {
              "op": "read",
              "role": "view"
            }
          },
          {
            "_attributes": {
              "op": "write",
              "role": "manage"
            }
          }
        ]
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0022",
          "define": "ULTRASONIC_UNOCCUPIED_TO_OCCUPIED_THRESHOLD",
          "type": "INT8U",
          "min": "0x01",
          "max": "0xFE",
          "writable": "true",
          "default": "0x01",
          "optional": "true"
        },
        "description": {
          "_text": "UltrasonicUnoccupiedToOccupiedThreshold"
        },
        "access": [
          {
            "_attributes": {
              "op": "read",
              "role": "view"
            }
          },
          {
            "_attributes": {
              "op": "write",
              "role": "manage"
            }
          }
        ]
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0030",
          "define": "PHYSICAL_CONTACT_OCCUPIED_TO_UNOCCUPIED_DELAY",
          "type": "INT16U",
          "min": "0x0000",
          "max": "0xFFFE",
          "writable": "true",
          "default": "0x0000",
          "optional": "true"
        },
        "description": {
          "_text": "PhysicalContactOccupiedToUnoccupiedDelay"
        },
        "access": [
          {
            "_attributes": {
              "op": "read",
              "role": "view"
            }
          },
          {
            "_attributes": {
              "op": "write",
              "role": "manage"
            }
          }
        ]
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0031",
          "define": "PHYSICAL_CONTACT_UNOCCUPIED_TO_OCCUPIED_DELAY",
          "type": "INT16U",
          "min": "0x0000",
          "max": "0xFFFE",
          "writable": "true",
          "default": "0x0000",
          "optional": "true"
        },
        "description": {
          "_text": "PhysicalContactUnoccupiedToOccupiedDelay"
        },
        "access": [
          {
            "_attributes": {
              "op": "read",
              "role": "view"
            }
          },
          {
            "_attributes": {
              "op": "write",
              "role": "manage"
            }
          }
        ]
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0032",
          "define": "PHYSICAL_CONTACT_UNOCCUPIED_TO_OCCUPIED_THRESHOLD",
          "type": "INT8U",
          "min": "0x01",
          "max": "0xFE",
          "writable": "true",
          "default": "0x01",
          "optional": "true"
        },
        "description": {
          "_text": "PhysicalContactUnoccupiedToOccupiedThreshold"
        },
        "access": [
          {
            "_attributes": {
              "op": "read",
              "role": "view"
            }
          },
          {
            "_attributes": {
              "op": "write",
              "role": "manage"
            }
          }
        ]
      }
    ]
  },
  "1283": {
    "domain": {
      "_text": "General"
    },
    "name": {
      "_text": "Wake on LAN"
    },
    "code": {
      "_text": "0x0503"
    },
    "define": {
      "_text": "WAKE_ON_LAN_CLUSTER"
    },
    "client": {
      "_attributes": {
        "init": "false",
        "tick": "false"
      },
      "_text": "true"
    },
    "server": {
      "_attributes": {
        "init": "false",
        "tick": "false"
      },
      "_text": "true"
    },
    "description": {
      "_text": "This cluster provides an interface for managing low power mode on a device that supports the Wake On LAN protocol."
    },
    "attribute": {
      "_attributes": {
        "side": "server",
        "code": "0x0000",
        "define": "WAKE_ON_LAN_MAC_ADDRESS",
        "type": "CHAR_STRING",
        "length": "32",
        "writable": "false",
        "optional": "true"
      },
      "_text": "MACAddress"
    }
  },
  "1284": {
    "domain": {
      "_text": "Media"
    },
    "name": {
      "_text": "Channel"
    },
    "code": {
      "_text": "0x0504"
    },
    "define": {
      "_text": "CHANNEL_CLUSTER"
    },
    "client": {
      "_attributes": {
        "init": "false",
        "tick": "false"
      },
      "_text": "true"
    },
    "server": {
      "_attributes": {
        "init": "false",
        "tick": "false"
      },
      "_text": "true"
    },
    "description": {
      "_text": "This cluster provides an interface for controlling the current Channel on a device."
    },
    "attribute": [
      {
        "_attributes": {
          "side": "server",
          "code": "0x0000",
          "define": "CHANNEL_LIST",
          "type": "ARRAY",
          "entryType": "ChannelInfoStruct",
          "length": "254",
          "writable": "false",
          "optional": "true"
        },
        "_text": "ChannelList"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0001",
          "define": "CHANNEL_LINEUP",
          "type": "LineupInfoStruct",
          "default": "0x0",
          "isNullable": "true",
          "writable": "false",
          "optional": "true"
        },
        "_text": "Lineup"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0002",
          "define": "CHANNEL_CURRENT_CHANNEL",
          "type": "ChannelInfoStruct",
          "default": "0x0",
          "isNullable": "true",
          "writable": "false",
          "optional": "true"
        },
        "_text": "CurrentChannel"
      }
    ],
    "command": [
      {
        "_attributes": {
          "source": "client",
          "code": "0x00",
          "name": "ChangeChannel",
          "response": "ChangeChannelResponse",
          "optional": "true"
        },
        "description": {
          "_text": "Change the channel on the media player to the channel case-insensitive exact matching the value passed as an argument. "
        },
        "arg": {
          "_attributes": {
            "name": "Match",
            "type": "CHAR_STRING"
          }
        }
      },
      {
        "_attributes": {
          "source": "client",
          "code": "0x02",
          "name": "ChangeChannelByNumber",
          "optional": "false"
        },
        "description": {
          "_text": "Change the channel on the media plaeyer to the channel with the given Number in the ChannelList attribute."
        },
        "arg": [
          {
            "_attributes": {
              "name": "MajorNumber",
              "type": "INT16U"
            }
          },
          {
            "_attributes": {
              "name": "MinorNumber",
              "type": "INT16U"
            }
          }
        ]
      },
      {
        "_attributes": {
          "source": "client",
          "code": "0x03",
          "name": "SkipChannel",
          "optional": "false"
        },
        "description": {
          "_text": "This command provides channel up and channel down functionality, but allows channel index jumps of size Count. When the value of the increase or decrease is larger than the number of channels remaining in the given direction, then the behavior SHALL be to return to the beginning (or end) of the channel list and continue. For example, if the current channel is at index 0 and count value of -1 is given, then the current channel should change to the last channel."
        },
        "arg": {
          "_attributes": {
            "name": "Count",
            "type": "INT16U"
          }
        }
      },
      {
        "_attributes": {
          "source": "server",
          "code": "0x01",
          "name": "ChangeChannelResponse",
          "optional": "true"
        },
        "description": {
          "_text": "Upon receipt, this SHALL display the active status of the input list on screen."
        },
        "arg": [
          {
            "_attributes": {
              "name": "Status",
              "type": "ChannelStatusEnum"
            }
          },
          {
            "_attributes": {
              "name": "Data",
              "type": "CHAR_STRING",
              "optional": "true"
            }
          }
        ]
      }
    ]
  },
  "1285": {
    "domain": {
      "_text": "Media"
    },
    "name": {
      "_text": "Target Navigator"
    },
    "code": {
      "_text": "0x0505"
    },
    "define": {
      "_text": "TARGET_NAVIGATOR_CLUSTER"
    },
    "client": {
      "_attributes": {
        "init": "false",
        "tick": "false"
      },
      "_text": "true"
    },
    "server": {
      "_attributes": {
        "init": "false",
        "tick": "false"
      },
      "_text": "true"
    },
    "description": {
      "_text": "This cluster provides an interface for UX navigation within a set of targets on a device or endpoint."
    },
    "attribute": [
      {
        "_attributes": {
          "side": "server",
          "code": "0x0000",
          "define": "TARGET_NAVIGATOR_LIST",
          "type": "ARRAY",
          "entryType": "TargetInfoStruct",
          "length": "254",
          "writable": "false",
          "optional": "false"
        },
        "_text": "TargetList"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0001",
          "define": "TARGET_NAVIGATOR_CURRENT_TARGET",
          "type": "INT8U",
          "default": "0",
          "min": "0x00",
          "max": "0xFF",
          "writable": "false",
          "optional": "true"
        },
        "_text": "CurrentTarget"
      }
    ],
    "command": [
      {
        "_attributes": {
          "source": "client",
          "code": "0x00",
          "name": "NavigateTarget",
          "response": "NavigateTargetResponse",
          "optional": "false"
        },
        "description": {
          "_text": "Upon receipt, this SHALL navigation the UX to the target identified."
        },
        "arg": [
          {
            "_attributes": {
              "name": "Target",
              "type": "INT8U"
            }
          },
          {
            "_attributes": {
              "name": "Data",
              "type": "CHAR_STRING",
              "optional": "true"
            }
          }
        ]
      },
      {
        "_attributes": {
          "source": "server",
          "code": "0x01",
          "name": "NavigateTargetResponse",
          "optional": "false"
        },
        "description": {
          "_text": "This command SHALL be generated in response to NavigateTarget commands."
        },
        "arg": [
          {
            "_attributes": {
              "name": "Status",
              "type": "TargetNavigatorStatusEnum"
            }
          },
          {
            "_attributes": {
              "name": "Data",
              "type": "CHAR_STRING",
              "optional": "true"
            }
          }
        ]
      }
    ]
  },
  "1286": {
    "domain": {
      "_text": "Media"
    },
    "name": {
      "_text": "Media Playback"
    },
    "code": {
      "_text": "0x0506"
    },
    "define": {
      "_text": "MEDIA_PLAYBACK_CLUSTER"
    },
    "client": {
      "_attributes": {
        "init": "false",
        "tick": "false"
      },
      "_text": "true"
    },
    "server": {
      "_attributes": {
        "init": "false",
        "tick": "false"
      },
      "_text": "true"
    },
    "description": {
      "_text": "This cluster provides an interface for controlling Media Playback (PLAY, PAUSE, etc) on a media device such as a TV or Speaker."
    },
    "globalAttribute": {
      "_attributes": {
        "side": "server",
        "code": "0xFFFC",
        "value": "0"
      }
    },
    "attribute": [
      {
        "_attributes": {
          "side": "server",
          "code": "0x0000",
          "define": "MEDIA_PLAYBACK_STATE",
          "type": "PlaybackStateEnum",
          "min": "0x00",
          "max": "0x02",
          "default": "0x00",
          "writable": "false",
          "optional": "false"
        },
        "_text": "CurrentState"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0001",
          "define": "MEDIA_PLAYBACK_START_TIME",
          "type": "EPOCH_US",
          "min": "0x00",
          "default": "0x00",
          "writable": "false",
          "isNullable": "true",
          "optional": "true"
        },
        "_text": "StartTime"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0002",
          "define": "MEDIA_PLAYBACK_DURATION",
          "type": "INT64U",
          "min": "0x00",
          "default": "0",
          "writable": "false",
          "isNullable": "true",
          "optional": "true"
        },
        "_text": "Duration"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0003",
          "define": "MEDIA_PLAYBACK_PLAYBACK_POSITION",
          "type": "PlaybackPositionStruct",
          "writable": "false",
          "isNullable": "true",
          "optional": "true"
        },
        "_text": "SampledPosition"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0004",
          "define": "MEDIA_PLAYBACK_PLAYBACK_SPEED",
          "type": "single",
          "min": "0x00",
          "default": "0",
          "writable": "false",
          "optional": "true"
        },
        "_text": "PlaybackSpeed"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0005",
          "define": "MEDIA_PLAYBACK_PLAYBACK_SEEK_RANGE_END",
          "type": "INT64U",
          "min": "0x00",
          "writable": "false",
          "isNullable": "true",
          "optional": "true"
        },
        "_text": "SeekRangeEnd"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0006",
          "define": "MEDIA_PLAYBACK_PLAYBACK_SEEK_RANGE_START",
          "type": "INT64U",
          "min": "0x00",
          "writable": "false",
          "isNullable": "true",
          "optional": "true"
        },
        "_text": "SeekRangeStart"
      }
    ],
    "command": [
      {
        "_attributes": {
          "source": "client",
          "code": "0x00",
          "name": "Play",
          "response": "PlaybackResponse",
          "optional": "false"
        },
        "description": {
          "_text": "Upon receipt, this SHALL play media."
        }
      },
      {
        "_attributes": {
          "source": "client",
          "code": "0x01",
          "name": "Pause",
          "response": "PlaybackResponse",
          "optional": "false"
        },
        "description": {
          "_text": "Upon receipt, this SHALL pause media."
        }
      },
      {
        "_attributes": {
          "source": "client",
          "code": "0x02",
          "name": "Stop",
          "response": "PlaybackResponse",
          "optional": "false"
        },
        "description": {
          "_text": "Upon receipt, this SHALL stop media. User experience is context-specific. This will often navigate the user back to the location where media was originally launched."
        }
      },
      {
        "_attributes": {
          "source": "client",
          "code": "0x03",
          "name": "StartOver",
          "response": "PlaybackResponse",
          "optional": "true"
        },
        "description": {
          "_text": "Upon receipt, this SHALL Start Over with the current media playback item."
        }
      },
      {
        "_attributes": {
          "source": "client",
          "code": "0x04",
          "name": "Previous",
          "response": "PlaybackResponse",
          "optional": "true"
        },
        "description": {
          "_text": "Upon receipt, this SHALL cause the handler to be invoked for \"Previous\". User experience is context-specific. This will often Go back to the previous media playback item."
        }
      },
      {
        "_attributes": {
          "source": "client",
          "code": "0x05",
          "name": "Next",
          "response": "PlaybackResponse",
          "optional": "true"
        },
        "description": {
          "_text": "Upon receipt, this SHALL cause the handler to be invoked for \"Next\". User experience is context-specific. This will often Go forward to the next media playback item."
        }
      },
      {
        "_attributes": {
          "source": "client",
          "code": "0x06",
          "name": "Rewind",
          "response": "PlaybackResponse",
          "optional": "true"
        },
        "description": {
          "_text": "Upon receipt, this SHALL Rewind through media. Different Rewind speeds can be used on the TV based upon the number of sequential calls to this function. This is to avoid needing to define every speed now (multiple fast, slow motion, etc)."
        }
      },
      {
        "_attributes": {
          "source": "client",
          "code": "0x07",
          "name": "FastForward",
          "response": "PlaybackResponse",
          "optional": "true"
        },
        "description": {
          "_text": "Upon receipt, this SHALL Advance through media. Different FF speeds can be used on the TV based upon the number of sequential calls to this function. This is to avoid needing to define every speed now (multiple fast, slow motion, etc)."
        }
      },
      {
        "_attributes": {
          "source": "client",
          "code": "0x08",
          "name": "SkipForward",
          "response": "PlaybackResponse",
          "optional": "true"
        },
        "description": {
          "_text": "Upon receipt, this SHALL Skip forward in the media by the given number of seconds, using the data as follows:"
        },
        "arg": {
          "_attributes": {
            "name": "DeltaPositionMilliseconds",
            "type": "INT64U"
          }
        }
      },
      {
        "_attributes": {
          "source": "client",
          "code": "0x09",
          "name": "SkipBackward",
          "response": "PlaybackResponse",
          "optional": "true"
        },
        "description": {
          "_text": "Upon receipt, this SHALL Skip backward in the media by the given number of seconds, using the data as follows:"
        },
        "arg": {
          "_attributes": {
            "name": "DeltaPositionMilliseconds",
            "type": "INT64U"
          }
        }
      },
      {
        "_attributes": {
          "source": "client",
          "code": "0x0B",
          "name": "Seek",
          "response": "PlaybackResponse",
          "optional": "true"
        },
        "description": {
          "_text": "Upon receipt, this SHALL Skip backward in the media by the given number of seconds, using the data as follows:"
        },
        "arg": {
          "_attributes": {
            "name": "position",
            "type": "INT64U"
          }
        }
      },
      {
        "_attributes": {
          "source": "server",
          "code": "0x0A",
          "name": "PlaybackResponse",
          "optional": "false"
        },
        "description": {
          "_text": "This command SHALL be generated in response to various Playback Request commands."
        },
        "arg": [
          {
            "_attributes": {
              "name": "Status",
              "type": "MediaPlaybackStatusEnum"
            }
          },
          {
            "_attributes": {
              "name": "Data",
              "type": "CHAR_STRING",
              "optional": "true"
            }
          }
        ]
      }
    ]
  },
  "1287": {
    "domain": {
      "_text": "Media"
    },
    "name": {
      "_text": "Media Input"
    },
    "code": {
      "_text": "0x0507"
    },
    "define": {
      "_text": "MEDIA_INPUT_CLUSTER"
    },
    "client": {
      "_attributes": {
        "init": "false",
        "tick": "false"
      },
      "_text": "true"
    },
    "server": {
      "_attributes": {
        "init": "false",
        "tick": "false"
      },
      "_text": "true"
    },
    "_comment": " TODO: Add feature map once it is supported ",
    "description": {
      "_text": "This cluster provides an interface for controlling the Input Selector on a media device such as a TV."
    },
    "attribute": [
      {
        "_attributes": {
          "side": "server",
          "code": "0x0000",
          "define": "MEDIA_INPUT_LIST",
          "type": "ARRAY",
          "entryType": "InputInfoStruct",
          "length": "254",
          "writable": "false",
          "optional": "false"
        },
        "_text": "InputList"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0001",
          "define": "MEDIA_INPUT_CURRENT_INPUT",
          "type": "INT8U",
          "default": "0x00",
          "min": "0x00",
          "max": "0xFF",
          "writable": "false",
          "optional": "false"
        },
        "_text": "CurrentInput"
      }
    ],
    "command": [
      {
        "_attributes": {
          "source": "client",
          "code": "0x00",
          "name": "SelectInput",
          "optional": "false"
        },
        "description": {
          "_text": "Upon receipt, this SHALL change the input on the media device to the input at a specific index in the Input List."
        },
        "arg": {
          "_attributes": {
            "name": "Index",
            "type": "INT8U"
          }
        }
      },
      {
        "_attributes": {
          "source": "client",
          "code": "0x01",
          "name": "ShowInputStatus",
          "optional": "false"
        },
        "description": {
          "_text": "Upon receipt, this SHALL display the active status of the input list on screen."
        }
      },
      {
        "_attributes": {
          "source": "client",
          "code": "0x02",
          "name": "HideInputStatus",
          "optional": "false"
        },
        "description": {
          "_text": "Upon receipt, this SHALL hide the input list from the screen."
        }
      },
      {
        "_attributes": {
          "source": "client",
          "code": "0x03",
          "name": "RenameInput",
          "optional": "true"
        },
        "description": {
          "_text": "Upon receipt, this SHALL rename the input at a specific index in the Input List. Updates to the input name SHALL appear in the TV settings menus.    "
        },
        "arg": [
          {
            "_attributes": {
              "name": "Index",
              "type": "INT8U"
            }
          },
          {
            "_attributes": {
              "name": "Name",
              "type": "CHAR_STRING"
            }
          }
        ]
      }
    ]
  },
  "1288": {
    "domain": {
      "_text": "General"
    },
    "name": {
      "_text": "Low Power"
    },
    "code": {
      "_text": "0x0508"
    },
    "define": {
      "_text": "LOW_POWER_CLUSTER"
    },
    "client": {
      "_attributes": {
        "init": "false",
        "tick": "false"
      },
      "_text": "true"
    },
    "server": {
      "_attributes": {
        "init": "false",
        "tick": "false"
      },
      "_text": "true"
    },
    "description": {
      "_text": "This cluster provides an interface for managing low power mode on a device."
    },
    "command": {
      "_attributes": {
        "source": "client",
        "code": "0x00",
        "name": "Sleep",
        "optional": "false"
      },
      "description": {
        "_text": "This command shall put the device into low power mode."
      }
    }
  },
  "1289": {
    "domain": {
      "_text": "Media"
    },
    "name": {
      "_text": "Keypad Input"
    },
    "code": {
      "_text": "0x0509"
    },
    "define": {
      "_text": "KEYPAD_INPUT_CLUSTER"
    },
    "client": {
      "_attributes": {
        "init": "false",
        "tick": "false"
      },
      "_text": "true"
    },
    "server": {
      "_attributes": {
        "init": "false",
        "tick": "false"
      },
      "_text": "true"
    },
    "description": {
      "_text": "This cluster provides an interface for controlling a device like a TV using action commands such as UP, DOWN, and SELECT."
    },
    "command": [
      {
        "_attributes": {
          "source": "client",
          "code": "0x00",
          "name": "SendKey",
          "response": "SendKeyResponse",
          "optional": "false"
        },
        "description": {
          "_text": "Upon receipt, this SHALL process a keycode as input to the media device."
        },
        "arg": {
          "_attributes": {
            "name": "KeyCode",
            "type": "CecKeyCode"
          }
        }
      },
      {
        "_attributes": {
          "source": "server",
          "code": "0x01",
          "name": "SendKeyResponse",
          "optional": "false"
        },
        "description": {
          "_text": "This command SHALL be generated in response to a SendKey Request command."
        },
        "arg": {
          "_attributes": {
            "name": "Status",
            "type": "KeypadInputStatusEnum"
          }
        }
      }
    ]
  },
  "1290": {
    "domain": {
      "_text": "Media"
    },
    "name": {
      "_text": "Content Launcher"
    },
    "code": {
      "_text": "0x050a"
    },
    "define": {
      "_text": "CONTENT_LAUNCHER_CLUSTER"
    },
    "client": {
      "_attributes": {
        "init": "false",
        "tick": "false"
      },
      "_text": "true"
    },
    "server": {
      "_attributes": {
        "init": "false",
        "tick": "false"
      },
      "_text": "true"
    },
    "description": {
      "_text": "This cluster provides an interface for launching content on a media player device such as a TV or Speaker."
    },
    "attribute": [
      {
        "_attributes": {
          "side": "server",
          "code": "0x0000",
          "define": "CONTENT_LAUNCHER_ACCEPT_HEADER",
          "type": "ARRAY",
          "entryType": "CHAR_STRING",
          "length": "254",
          "writable": "false",
          "optional": "true"
        },
        "_text": "AcceptHeader"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0001",
          "define": "CONTENT_LAUNCHER_SUPPORTED_STREAMING_PROTOCOLS",
          "type": "BITMAP32",
          "default": "0",
          "writable": "true",
          "optional": "true"
        },
        "_text": "SupportedStreamingProtocols"
      }
    ],
    "command": [
      {
        "_attributes": {
          "source": "client",
          "code": "0x00",
          "name": "LaunchContent",
          "response": "LauncherResponse",
          "optional": "true"
        },
        "description": {
          "_text": "Upon receipt, this SHALL launch the specified content with optional search criteria."
        },
        "arg": [
          {
            "_attributes": {
              "name": "Search",
              "type": "ContentSearchStruct"
            }
          },
          {
            "_attributes": {
              "name": "AutoPlay",
              "type": "BOOLEAN"
            }
          },
          {
            "_attributes": {
              "name": "Data",
              "type": "CHAR_STRING",
              "optional": "true"
            }
          }
        ]
      },
      {
        "_attributes": {
          "source": "client",
          "code": "0x01",
          "name": "LaunchURL",
          "response": "LauncherResponse",
          "optional": "true"
        },
        "description": {
          "_text": "Upon receipt, this SHALL launch content from the specified URL."
        },
        "arg": [
          {
            "_attributes": {
              "name": "ContentURL",
              "type": "CHAR_STRING"
            }
          },
          {
            "_attributes": {
              "name": "DisplayString",
              "type": "CHAR_STRING",
              "optional": "true"
            }
          },
          {
            "_attributes": {
              "name": "BrandingInformation",
              "type": "BrandingInformationStruct",
              "optional": "true"
            }
          }
        ]
      },
      {
        "_attributes": {
          "source": "server",
          "code": "0x02",
          "name": "LauncherResponse",
          "optional": "true",
          "disableDefaultResponse": "true"
        },
        "description": {
          "_text": "This command SHALL be generated in response to LaunchContent command."
        },
        "arg": [
          {
            "_attributes": {
              "name": "Status",
              "type": "ContentLaunchStatusEnum"
            }
          },
          {
            "_attributes": {
              "name": "Data",
              "type": "CHAR_STRING",
              "optional": "true"
            }
          }
        ]
      }
    ]
  },
  "1291": {
    "domain": {
      "_text": "Media"
    },
    "name": {
      "_text": "Audio Output"
    },
    "code": {
      "_text": "0x050b"
    },
    "define": {
      "_text": "AUDIO_OUTPUT_CLUSTER"
    },
    "client": {
      "_attributes": {
        "init": "false",
        "tick": "false"
      },
      "_text": "true"
    },
    "server": {
      "_attributes": {
        "init": "false",
        "tick": "false"
      },
      "_text": "true"
    },
    "description": {
      "_text": "This cluster provides an interface for controlling the Output on a media device such as a TV."
    },
    "attribute": [
      {
        "_attributes": {
          "side": "server",
          "code": "0x0000",
          "define": "AUDIO_OUTPUT_LIST",
          "type": "ARRAY",
          "entryType": "OutputInfoStruct",
          "length": "254",
          "writable": "false",
          "optional": "false"
        },
        "_text": "OutputList"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0001",
          "define": "AUDIO_OUTPUT_CURRENT_OUTPUT",
          "type": "INT8U",
          "default": "0x00",
          "min": "0x00",
          "max": "0xFF",
          "writable": "false",
          "optional": "true"
        },
        "_text": "CurrentOutput"
      }
    ],
    "command": [
      {
        "_attributes": {
          "source": "client",
          "code": "0x00",
          "name": "SelectOutput",
          "optional": "false"
        },
        "description": {
          "_text": "Upon receipt, this SHALL change the output on the media device to the output at a specific index in the Output List."
        },
        "arg": {
          "_attributes": {
            "name": "Index",
            "type": "INT8U"
          }
        }
      },
      {
        "_attributes": {
          "source": "client",
          "code": "0x01",
          "name": "RenameOutput",
          "optional": "true"
        },
        "description": {
          "_text": "Upon receipt, this SHALL rename the output at a specific index in the Output List. Updates to the output name SHALL appear in the TV settings menus."
        },
        "arg": [
          {
            "_attributes": {
              "name": "Index",
              "type": "INT8U"
            }
          },
          {
            "_attributes": {
              "name": "Name",
              "type": "CHAR_STRING"
            }
          }
        ]
      }
    ]
  },
  "1292": {
    "domain": {
      "_text": "Media"
    },
    "name": {
      "_text": "Application Launcher"
    },
    "code": {
      "_text": "0x050c"
    },
    "define": {
      "_text": "APPLICATION_LAUNCHER_CLUSTER"
    },
    "client": {
      "_attributes": {
        "init": "false",
        "tick": "false"
      },
      "_text": "true"
    },
    "server": {
      "_attributes": {
        "init": "false",
        "tick": "false"
      },
      "_text": "true"
    },
    "description": {
      "_text": "This cluster provides an interface for launching content on a media player device such as a TV or Speaker."
    },
    "attribute": [
      {
        "_attributes": {
          "side": "server",
          "code": "0x0000",
          "define": "APPLICATION_LAUNCHER_LIST",
          "type": "ARRAY",
          "entryType": "INT16U",
          "length": "254",
          "reportable": "true",
          "writable": "false",
          "optional": "true"
        },
        "_text": "CatalogList"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0001",
          "define": "APPLICATION_LAUNCHER_CURRENT_APP",
          "type": "ApplicationEPStruct",
          "default": "0x0",
          "isNullable": "true",
          "writable": "true",
          "optional": "true"
        },
        "_text": "CurrentApp"
      }
    ],
    "command": [
      {
        "_attributes": {
          "source": "client",
          "code": "0x00",
          "name": "LaunchApp",
          "response": "LauncherResponse",
          "optional": "false"
        },
        "description": {
          "_text": "Upon receipt, this SHALL launch the specified app with optional data. The TV Device SHALL launch and bring to foreground the identified application in the command if the application is not already launched and in foreground. The TV Device SHALL update state attribute on the Application Basic cluster of the Endpoint corresponding to the launched application. This command returns a Launch Response."
        },
        "arg": [
          {
            "_attributes": {
              "name": "Application",
              "type": "ApplicationStruct",
              "optional": "true"
            }
          },
          {
            "_attributes": {
              "name": "Data",
              "type": "OCTET_STRING",
              "optional": "true"
            }
          }
        ]
      },
      {
        "_attributes": {
          "source": "client",
          "code": "0x01",
          "name": "StopApp",
          "response": "LauncherResponse",
          "optional": "false"
        },
        "description": {
          "_text": "Upon receipt on a Video Player endpoint this SHALL stop the specified application if it is running."
        },
        "arg": {
          "_attributes": {
            "name": "Application",
            "type": "ApplicationStruct",
            "optional": "true"
          }
        }
      },
      {
        "_attributes": {
          "source": "client",
          "code": "0x02",
          "name": "HideApp",
          "response": "LauncherResponse",
          "optional": "false"
        },
        "description": {
          "_text": "Upon receipt on a Video Player endpoint this SHALL hide the specified application if it is running and visible."
        },
        "arg": {
          "_attributes": {
            "name": "Application",
            "type": "ApplicationStruct",
            "optional": "true"
          }
        }
      },
      {
        "_attributes": {
          "source": "server",
          "code": "0x03",
          "name": "LauncherResponse",
          "optional": "false"
        },
        "description": {
          "_text": "This command SHALL be generated in response to LaunchApp commands."
        },
        "arg": [
          {
            "_attributes": {
              "name": "Status",
              "type": "ApplicationLauncherStatusEnum"
            }
          },
          {
            "_attributes": {
              "name": "Data",
              "type": "OCTET_STRING",
              "optional": "true"
            }
          }
        ]
      }
    ]
  },
  "1293": {
    "domain": {
      "_text": "Media"
    },
    "name": {
      "_text": "Application Basic"
    },
    "code": {
      "_text": "0x050d"
    },
    "define": {
      "_text": "APPLICATION_BASIC_CLUSTER"
    },
    "client": {
      "_attributes": {
        "init": "false",
        "tick": "false"
      },
      "_text": "true"
    },
    "server": {
      "_attributes": {
        "init": "false",
        "tick": "false"
      },
      "_text": "true"
    },
    "description": {
      "_text": "This cluster provides information about an application running on a TV or media player device which is represented as an endpoint."
    },
    "attribute": [
      {
        "_attributes": {
          "side": "server",
          "code": "0x0000",
          "define": "APPLICATION_VENDOR_NAME",
          "type": "CHAR_STRING",
          "default": "",
          "length": "32",
          "writable": "false",
          "optional": "true"
        },
        "_text": "VendorName"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0001",
          "define": "APPLICATION_VENDOR_ID",
          "type": "VENDOR_ID",
          "default": "0x0",
          "min": "0x0000",
          "max": "0xFFFF",
          "writable": "false",
          "optional": "true"
        },
        "_text": "VendorID"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0002",
          "define": "APPLICATION_NAME",
          "type": "CHAR_STRING",
          "length": "32",
          "writable": "false",
          "optional": "false"
        },
        "_text": "ApplicationName"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0003",
          "define": "APPLICATION_PRODUCT_ID",
          "type": "INT16U",
          "default": "0x0",
          "min": "0x0000",
          "max": "0xFFFF",
          "writable": "false",
          "optional": "true"
        },
        "_text": "ProductID"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0004",
          "define": "APPLICATION_APP",
          "type": "ApplicationStruct",
          "writable": "false",
          "optional": "false"
        },
        "_text": "Application"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0005",
          "define": "APPLICATION_STATUS",
          "type": "ApplicationStatusEnum",
          "default": "0x01",
          "min": "0x00",
          "max": "0xFF",
          "writable": "false",
          "optional": "false"
        },
        "_text": "Status"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0006",
          "define": "APPLICATION_VERSION",
          "type": "CHAR_STRING",
          "length": "32",
          "writable": "false",
          "optional": "false"
        },
        "_text": "ApplicationVersion"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0007",
          "define": "APPLICATION_ALLOWED_VENDOR_LIST",
          "type": "ARRAY",
          "entryType": "vendor_id",
          "length": "32",
          "writable": "false",
          "optional": "false"
        },
        "_text": "AllowedVendorList"
      }
    ]
  },
  "1294": {
    "domain": {
      "_text": "Media"
    },
    "name": {
      "_text": "Account Login"
    },
    "code": {
      "_text": "0x050e"
    },
    "define": {
      "_text": "ACCOUNT_LOGIN_CLUSTER"
    },
    "client": {
      "_attributes": {
        "init": "false",
        "tick": "false"
      },
      "_text": "true"
    },
    "server": {
      "_attributes": {
        "init": "false",
        "tick": "false"
      },
      "_text": "true"
    },
    "description": {
      "_text": "This cluster provides commands that facilitate user account login on a Content App or a node. For example, a Content App running on a Video Player device, which is represented as an endpoint (see [TV Architecture]), can use this cluster to help make the user account on the Content App match the user account on the Client."
    },
    "command": [
      {
        "_attributes": {
          "source": "client",
          "code": "0x00",
          "name": "GetSetupPIN",
          "response": "GetSetupPINResponse",
          "mustUseTimedInvoke": "true",
          "optional": "false"
        },
        "description": {
          "_text": "Upon receipt, the Content App checks if the account associated with the client Temp Account Identifier Rotating ID is the same acount that is active on the given Content App. If the accounts are the same, then the Content App includes the Setup PIN in the GetSetupPIN Response."
        },
        "arg": {
          "_attributes": {
            "name": "TempAccountIdentifier",
            "minLength": "16",
            "length": "100",
            "type": "CHAR_STRING"
          }
        }
      },
      {
        "_attributes": {
          "source": "client",
          "code": "0x02",
          "name": "Login",
          "mustUseTimedInvoke": "true",
          "optional": "false"
        },
        "description": {
          "_text": "Upon receipt, the Content App checks if the account associated with the client’s Temp Account Identifier (Rotating ID) has a current active Setup PIN with the given value. If the Setup PIN is valid for the user account associated with the Temp Account Identifier, then the Content App MAY make that user account active."
        },
        "arg": [
          {
            "_attributes": {
              "name": "TempAccountIdentifier",
              "minLength": "16",
              "length": "100",
              "type": "CHAR_STRING"
            }
          },
          {
            "_attributes": {
              "name": "SetupPIN",
              "minLength": "11",
              "type": "CHAR_STRING"
            }
          }
        ]
      },
      {
        "_attributes": {
          "source": "client",
          "code": "0x03",
          "name": "Logout",
          "mustUseTimedInvoke": "true",
          "optional": "false"
        },
        "description": {
          "_text": "The purpose of this command is to instruct the Content App to clear the current user account. This command SHOULD be used by clients of a Content App to indicate the end of a user session."
        }
      },
      {
        "_attributes": {
          "source": "server",
          "code": "0x01",
          "name": "GetSetupPINResponse",
          "optional": "false",
          "disableDefaultResponse": "true"
        },
        "description": {
          "_text": "This message is sent in response to the GetSetupPIN Request, and contains the Setup PIN code, or null when the accounts identified in the request does not match the active account of the running Content App."
        },
        "arg": {
          "_attributes": {
            "name": "SetupPIN",
            "type": "CHAR_STRING"
          }
        }
      }
    ]
  },
  "4166": {
    "domain": {
      "_text": "General"
    },
    "name": {
      "_text": "Client Monitoring"
    },
    "code": {
      "_text": "0x1046"
    },
    "define": {
      "_text": "CLIENT_MONITORING_CLUSTER"
    },
    "description": {
      "_text": "Client Monitoring allows for ensuring that listed clients meet the required monitoring conditions on the server."
    },
    "attribute": [
      {
        "_attributes": {
          "side": "server",
          "code": "0x00",
          "define": "IDLE_MODE_INTERVAL",
          "type": "INT32U",
          "min": "0x12C",
          "max": "0X5265C00",
          "default": "0x12C",
          "writable": "false",
          "optional": "false",
          "isNullable": "false"
        },
        "_text": "IdleModeInterval"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x01",
          "define": "ACTIVE_MODE_INTERVAL",
          "type": "INT32U",
          "min": "0x12C",
          "max": "0X5265C00",
          "default": "0x12C",
          "writable": "false",
          "optional": "false",
          "isNullable": "false"
        },
        "_text": "ActiveModeInterval"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x02",
          "define": "ACTIVE_MODE_THRESHOLD",
          "type": "INT16U",
          "min": "0x12C",
          "max": "0xEA60",
          "default": "0xFA0",
          "writable": "false",
          "optional": "false",
          "isNullable": "false"
        },
        "_text": "ActiveModeThreshold"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x03",
          "define": "EXPECTED_CLIENTS",
          "type": "ARRAY",
          "entryType": "MonitoringRegistration",
          "length": "4",
          "writable": "false",
          "optional": "false",
          "isNullable": "false"
        },
        "_text": "ExpectedClients"
      }
    ],
    "_comment": " TODO: Revisit the number of entries per fabric",
    "command": [
      {
        "_attributes": {
          "source": "client",
          "code": "0x00",
          "name": "RegisterClientMonitoring",
          "optional": "false"
        },
        "description": {
          "_text": " Register a client to the end device "
        },
        "arg": [
          {
            "_attributes": {
              "name": "ClientNodeId",
              "type": "node_id"
            }
          },
          {
            "_attributes": {
              "name": "ICid",
              "type": "INT64U"
            }
          }
        ],
        "access": {
          "_attributes": {
            "op": "invoke",
            "privilege": "manage"
          }
        }
      },
      {
        "_attributes": {
          "source": "client",
          "code": "0x01",
          "name": "UnregisterClientMonitoring",
          "optional": "false"
        },
        "description": {
          "_text": " Unregister a client from an end device "
        },
        "arg": [
          {
            "_attributes": {
              "name": "ClientNodeId",
              "type": "node_id"
            }
          },
          {
            "_attributes": {
              "name": "ICid",
              "type": "INT64U"
            }
          }
        ],
        "access": {
          "_attributes": {
            "op": "invoke",
            "privilege": "manage"
          }
        }
      },
      {
        "_attributes": {
          "source": "client",
          "code": "0x02",
          "name": "StayAwakeRequest",
          "optional": "true"
        },
        "description": {
          "_text": "Request the end device to stay in Active Mode for an additional ActiveModeThreshold"
        },
        "access": {
          "_attributes": {
            "op": "invoke",
            "privilege": "manage"
          }
        }
      }
    ]
  },
  "4294048773": {
    "domain": {
      "_text": "CHIP"
    },
    "name": {
      "_text": "Unit Testing"
    },
    "code": {
      "_text": "0xFFF1FC05"
    },
    "define": {
      "_text": "UNIT_TESTING_CLUSTER"
    },
    "description": {
      "_text": "The Test Cluster is meant to validate the generated code"
    },
    "_comment": [
      " Base data types ",
      " Reading/writing the following two attributes will respond with a\n         general error or a cluster-specific error respectively ",
      " This attribute should not be enabled on the server side ",
      " Test Commands "
    ],
    "attribute": [
      {
        "_attributes": {
          "side": "server",
          "code": "0x0000",
          "define": "BOOLEAN",
          "type": "BOOLEAN",
          "writable": "true",
          "default": "false",
          "optional": "false"
        },
        "_text": "boolean"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0001",
          "define": "BITMAP8",
          "type": "Bitmap8MaskMap",
          "writable": "true",
          "default": "0",
          "optional": "false"
        },
        "_text": "bitmap8"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0002",
          "define": "BITMAP16",
          "type": "Bitmap16MaskMap",
          "writable": "true",
          "default": "0",
          "optional": "false"
        },
        "_text": "bitmap16"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0003",
          "define": "BITMAP32",
          "type": "Bitmap32MaskMap",
          "writable": "true",
          "default": "0",
          "optional": "false"
        },
        "_text": "bitmap32"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0004",
          "define": "BITMAP64",
          "type": "Bitmap64MaskMap",
          "writable": "true",
          "default": "0",
          "optional": "false"
        },
        "_text": "bitmap64"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0005",
          "define": "INT8U",
          "type": "INT8U",
          "writable": "true",
          "default": "0",
          "optional": "false"
        },
        "_text": "int8u"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0006",
          "define": "INT16U",
          "type": "INT16U",
          "writable": "true",
          "default": "0",
          "optional": "false"
        },
        "_text": "int16u"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0007",
          "define": "INT24U",
          "type": "INT24U",
          "writable": "true",
          "default": "0",
          "optional": "false"
        },
        "_text": "int24u"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0008",
          "define": "INT32U",
          "type": "INT32U",
          "writable": "true",
          "default": "0",
          "optional": "false"
        },
        "_text": "int32u"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0009",
          "define": "INT40U",
          "type": "INT40U",
          "writable": "true",
          "default": "0",
          "optional": "false"
        },
        "_text": "int40u"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x000A",
          "define": "INT48U",
          "type": "INT48U",
          "writable": "true",
          "default": "0",
          "optional": "false"
        },
        "_text": "int48u"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x000B",
          "define": "INT56U",
          "type": "INT56U",
          "writable": "true",
          "default": "0",
          "optional": "false"
        },
        "_text": "int56u"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x000C",
          "define": "INT64U",
          "type": "INT64U",
          "writable": "true",
          "default": "0",
          "optional": "false"
        },
        "_text": "int64u"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x000D",
          "define": "INT8S",
          "type": "INT8S",
          "writable": "true",
          "default": "0",
          "optional": "false"
        },
        "_text": "int8s"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x000E",
          "define": "INT16S",
          "type": "INT16S",
          "writable": "true",
          "default": "0",
          "optional": "false"
        },
        "_text": "int16s"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x000F",
          "define": "INT24S",
          "type": "INT24S",
          "writable": "true",
          "default": "0",
          "optional": "false"
        },
        "_text": "int24s"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0010",
          "define": "INT32S",
          "type": "INT32S",
          "writable": "true",
          "default": "0",
          "optional": "false"
        },
        "_text": "int32s"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0011",
          "define": "INT40S",
          "type": "INT40S",
          "writable": "true",
          "default": "0",
          "optional": "false"
        },
        "_text": "int40s"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0012",
          "define": "INT48S",
          "type": "INT48S",
          "writable": "true",
          "default": "0",
          "optional": "false"
        },
        "_text": "int48s"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0013",
          "define": "INT56S",
          "type": "INT56S",
          "writable": "true",
          "default": "0",
          "optional": "false"
        },
        "_text": "int56s"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0014",
          "define": "INT64S",
          "type": "INT64S",
          "writable": "true",
          "default": "0",
          "optional": "false"
        },
        "_text": "int64s"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0015",
          "define": "ENUM8",
          "type": "ENUM8",
          "writable": "true",
          "default": "0",
          "optional": "false"
        },
        "_text": "enum8"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0016",
          "define": "ENUM16",
          "type": "ENUM16",
          "writable": "true",
          "default": "0",
          "optional": "false"
        },
        "_text": "enum16"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0017",
          "define": "FLOAT_SINGLE",
          "type": "SINGLE",
          "writable": "true",
          "default": "0",
          "optional": "false"
        },
        "_text": "float_single"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0018",
          "define": "FLOAT_DOUBLE",
          "type": "DOUBLE",
          "writable": "true",
          "default": "0",
          "optional": "false"
        },
        "_text": "float_double"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0019",
          "define": "OCTET_STRING",
          "type": "OCTET_STRING",
          "length": "10",
          "writable": "true",
          "optional": "false"
        },
        "_text": "octet_string"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x001A",
          "define": "LIST",
          "type": "ARRAY",
          "entryType": "INT8U",
          "length": "10",
          "writable": "true",
          "optional": "false"
        },
        "_text": "list_int8u"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x001B",
          "define": "LIST_OCTET_STRING",
          "type": "ARRAY",
          "entryType": "OCTET_STRING",
          "length": "254",
          "writable": "true",
          "optional": "false"
        },
        "_text": "list_octet_string"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x001C",
          "define": "LIST_STRUCT_OCTET_STRING",
          "type": "ARRAY",
          "entryType": "TestListStructOctet",
          "length": "254",
          "writable": "true",
          "optional": "false"
        },
        "_text": "list_struct_octet_string"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x001D",
          "define": "LONG_OCTET_STRING",
          "type": "LONG_OCTET_STRING",
          "length": "1000",
          "writable": "true",
          "optional": "false"
        },
        "_text": "long_octet_string"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x001E",
          "define": "CHAR_STRING",
          "type": "CHAR_STRING",
          "length": "10",
          "writable": "true",
          "optional": "false"
        },
        "_text": "char_string"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x001F",
          "define": "LONG_CHAR_STRING",
          "type": "LONG_CHAR_STRING",
          "length": "1000",
          "writable": "true",
          "optional": "false"
        },
        "_text": "long_char_string"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0020",
          "define": "EPOCH_US",
          "type": "EPOCH_US",
          "writable": "true",
          "optional": "false"
        },
        "_text": "epoch_us"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0021",
          "define": "EPOCH_S",
          "type": "EPOCH_S",
          "writable": "true",
          "optional": "false"
        },
        "_text": "epoch_s"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0022",
          "define": "TEST_VENDOR_ID",
          "type": "vendor_id",
          "writable": "true",
          "optional": "false",
          "default": "0"
        },
        "_text": "vendor_id"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0023",
          "define": "LIST_OF_STRUCTS_WITH_OPTIONALS",
          "type": "ARRAY",
          "entryType": "NullablesAndOptionalsStruct",
          "writable": "true",
          "optional": "false"
        },
        "_text": "list_nullables_and_optionals_struct"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0024",
          "define": "SIMPLE_ENUM",
          "type": "SimpleEnum",
          "writable": "true",
          "optional": "false"
        },
        "_text": "enum_attr"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0025",
          "define": "STRUCT",
          "type": "SimpleStruct",
          "writable": "true",
          "optional": "false"
        },
        "_text": "struct_attr"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0026",
          "define": "RANGE_RESTRICTED_INT8U",
          "type": "int8u",
          "min": "20",
          "max": "100",
          "writable": "true",
          "optional": "false",
          "default": "70"
        },
        "_text": "range_restricted_int8u"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0027",
          "define": "RANGE_RESTRICTED_INT8s",
          "type": "int8s",
          "min": "-40",
          "max": "50",
          "writable": "true",
          "optional": "false",
          "default": "-5"
        },
        "_text": "range_restricted_int8s"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0028",
          "define": "RANGE_RESTRICTED_INT16U",
          "type": "int16u",
          "min": "100",
          "max": "1000",
          "writable": "true",
          "optional": "false",
          "default": "200"
        },
        "_text": "range_restricted_int16u"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0029",
          "define": "RANGE_RESTRICTED_INT16s",
          "type": "int16s",
          "min": "-150",
          "max": "200",
          "writable": "true",
          "optional": "false",
          "default": "-5"
        },
        "_text": "range_restricted_int16s"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x002A",
          "define": "LIST_LONG_OCTET_STRING",
          "type": "ARRAY",
          "entryType": "LONG_OCTET_STRING",
          "length": "1000",
          "writable": "true",
          "optional": "false"
        },
        "_text": "list_long_octet_string"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x002B",
          "define": "LIST_FABRIC_SCOPED",
          "type": "ARRAY",
          "entryType": "TestFabricScoped",
          "length": "10",
          "writable": "true",
          "optional": "false"
        },
        "_text": "list_fabric_scoped"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0030",
          "define": "TIMED_WRITE_BOOLEAN",
          "type": "BOOLEAN",
          "writable": "true",
          "mustUseTimedWrite": "true"
        },
        "_text": "timed_write_boolean"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0031",
          "define": "GENERAL_ERROR_BOOLEAN",
          "type": "BOOLEAN",
          "writable": "true",
          "optional": "false"
        },
        "_text": "general_error_boolean"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x0032",
          "define": "CLUSTER_ERROR_BOOLEAN",
          "type": "BOOLEAN",
          "writable": "true",
          "optional": "false"
        },
        "_text": "cluster_error_boolean"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x4000",
          "define": "NULLABLE_BOOLEAN",
          "type": "BOOLEAN",
          "writable": "true",
          "default": "false",
          "isNullable": "true",
          "optional": "false"
        },
        "_text": "nullable_boolean"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x4001",
          "define": "NULLABLE_BITMAP8",
          "type": "Bitmap8MaskMap",
          "writable": "true",
          "default": "0",
          "isNullable": "true",
          "optional": "false"
        },
        "_text": "nullable_bitmap8"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x4002",
          "define": "NULLABLE_BITMAP16",
          "type": "Bitmap16MaskMap",
          "writable": "true",
          "default": "0",
          "isNullable": "true",
          "optional": "false"
        },
        "_text": "nullable_bitmap16"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x4003",
          "define": "NULLABLE_BITMAP32",
          "type": "Bitmap32MaskMap",
          "writable": "true",
          "default": "0",
          "isNullable": "true",
          "optional": "false"
        },
        "_text": "nullable_bitmap32"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x4004",
          "define": "NULLABLE_BITMAP64",
          "type": "Bitmap64MaskMap",
          "writable": "true",
          "default": "0",
          "isNullable": "true",
          "optional": "false"
        },
        "_text": "nullable_bitmap64"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x4005",
          "define": "NULLABLE_INT8U",
          "type": "INT8U",
          "writable": "true",
          "default": "0",
          "isNullable": "true",
          "optional": "false"
        },
        "_text": "nullable_int8u"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x4006",
          "define": "NULLABLE_INT16U",
          "type": "INT16U",
          "writable": "true",
          "default": "0",
          "isNullable": "true",
          "optional": "false"
        },
        "_text": "nullable_int16u"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x4007",
          "define": "NULLABLE_INT24U",
          "type": "INT24U",
          "writable": "true",
          "default": "0",
          "isNullable": "true",
          "optional": "false"
        },
        "_text": "nullable_int24u"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x4008",
          "define": "NULLABLE_INT32U",
          "type": "INT32U",
          "writable": "true",
          "default": "0",
          "isNullable": "true",
          "optional": "false"
        },
        "_text": "nullable_int32u"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x4009",
          "define": "NULLABLE_INT40U",
          "type": "INT40U",
          "writable": "true",
          "default": "0",
          "isNullable": "true",
          "optional": "false"
        },
        "_text": "nullable_int40u"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x400A",
          "define": "NULLABLE_INT48U",
          "type": "INT48U",
          "writable": "true",
          "default": "0",
          "isNullable": "true",
          "optional": "false"
        },
        "_text": "nullable_int48u"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x400B",
          "define": "NULLABLE_INT56U",
          "type": "INT56U",
          "writable": "true",
          "default": "0",
          "isNullable": "true",
          "optional": "false"
        },
        "_text": "nullable_int56u"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x400C",
          "define": "NULLABLE_INT64U",
          "type": "INT64U",
          "writable": "true",
          "default": "0",
          "isNullable": "true",
          "optional": "false"
        },
        "_text": "nullable_int64u"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x400D",
          "define": "NULLABLE_INT8S",
          "type": "INT8S",
          "writable": "true",
          "default": "0",
          "isNullable": "true",
          "optional": "false"
        },
        "_text": "nullable_int8s"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x400E",
          "define": "NULLABLE_INT16S",
          "type": "INT16S",
          "writable": "true",
          "default": "0",
          "isNullable": "true",
          "optional": "false"
        },
        "_text": "nullable_int16s"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x400F",
          "define": "NULLABLE_INT24S",
          "type": "INT24S",
          "writable": "true",
          "default": "0",
          "isNullable": "true",
          "optional": "false"
        },
        "_text": "nullable_int24s"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x4010",
          "define": "NULLABLE_INT32S",
          "type": "INT32S",
          "writable": "true",
          "default": "0",
          "isNullable": "true",
          "optional": "false"
        },
        "_text": "nullable_int32s"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x4011",
          "define": "NULLABLE_INT40S",
          "type": "INT40S",
          "writable": "true",
          "default": "0",
          "isNullable": "true",
          "optional": "false"
        },
        "_text": "nullable_int40s"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x4012",
          "define": "NULLABLE_INT48S",
          "type": "INT48S",
          "writable": "true",
          "default": "0",
          "isNullable": "true",
          "optional": "false"
        },
        "_text": "nullable_int48s"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x4013",
          "define": "NULLABLE_INT56S",
          "type": "INT56S",
          "writable": "true",
          "default": "0",
          "isNullable": "true",
          "optional": "false"
        },
        "_text": "nullable_int56s"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x4014",
          "define": "NULLABLE_INT64S",
          "type": "INT64S",
          "writable": "true",
          "default": "0",
          "isNullable": "true",
          "optional": "false"
        },
        "_text": "nullable_int64s"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x4015",
          "define": "NULLABLE_ENUM8",
          "type": "ENUM8",
          "writable": "true",
          "default": "0",
          "isNullable": "true",
          "optional": "false"
        },
        "_text": "nullable_enum8"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x4016",
          "define": "NULLABLE_ENUM16",
          "type": "ENUM16",
          "writable": "true",
          "default": "0",
          "isNullable": "true",
          "optional": "false"
        },
        "_text": "nullable_enum16"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x4017",
          "define": "NULLABLE_FLOAT_SINGLE",
          "type": "SINGLE",
          "writable": "true",
          "default": "0",
          "isNullable": "true",
          "optional": "false"
        },
        "_text": "nullable_float_single"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x4018",
          "define": "NULLABLE_FLOAT_DOUBLE",
          "type": "DOUBLE",
          "writable": "true",
          "default": "0",
          "isNullable": "true",
          "optional": "false"
        },
        "_text": "nullable_float_double"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x4019",
          "define": "NULLABLE_OCTET_STRING",
          "type": "OCTET_STRING",
          "length": "10",
          "writable": "true",
          "isNullable": "true",
          "optional": "false"
        },
        "_text": "nullable_octet_string"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x401E",
          "define": "NULLABLE_CHAR_STRING",
          "type": "CHAR_STRING",
          "length": "10",
          "writable": "true",
          "isNullable": "true",
          "optional": "false"
        },
        "_text": "nullable_char_string"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x4024",
          "define": "NULLABLE_SIMPLE_ENUM",
          "type": "SimpleEnum",
          "writable": "true",
          "isNullable": "true",
          "optional": "false"
        },
        "_text": "nullable_enum_attr"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x4025",
          "define": "NULLABLE_STRUCT",
          "type": "SimpleStruct",
          "writable": "true",
          "isNullable": "true",
          "optional": "false"
        },
        "_text": "nullable_struct"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x4026",
          "define": "NULLABLE_RANGE_RESTRICTED_INT8U",
          "type": "int8u",
          "min": "20",
          "max": "100",
          "writable": "true",
          "isNullable": "true",
          "optional": "false",
          "default": "70"
        },
        "_text": "nullable_range_restricted_int8u"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x4027",
          "define": "NULLABLE_RANGE_RESTRICTED_INT8s",
          "type": "int8s",
          "min": "-40",
          "max": "50",
          "writable": "true",
          "isNullable": "true",
          "optional": "false",
          "default": "-5"
        },
        "_text": "nullable_range_restricted_int8s"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x4028",
          "define": "NULLABLE_RANGE_RESTRICTED_INT16U",
          "type": "int16u",
          "min": "100",
          "max": "1000",
          "writable": "true",
          "isNullable": "true",
          "optional": "false",
          "default": "200"
        },
        "_text": "nullable_range_restricted_int16u"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x4029",
          "define": "NULLABLE_RANGE_RESTRICTED_INT16S",
          "type": "int16s",
          "min": "-150",
          "max": "200",
          "writable": "true",
          "isNullable": "true",
          "optional": "false",
          "default": "-5"
        },
        "_text": "nullable_range_restricted_int16s"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x402A",
          "define": "WRITE_ONLY_INT8U",
          "type": "INT8U",
          "writable": "true",
          "default": "0",
          "optional": "true"
        },
        "_text": "write_only_int8u"
      },
      {
        "_attributes": {
          "side": "server",
          "code": "0x00FF",
          "define": "UNSUPPORTED",
          "type": "BOOLEAN",
          "writable": "true",
          "optional": "true"
        },
        "_text": "unsupported"
      }
    ],
    "command": [
      {
        "_attributes": {
          "source": "client",
          "code": "0x00",
          "name": "Test",
          "optional": "false"
        },
        "description": {
          "_text": "\n        Simple command without any parameters and without a specific response\n      "
        }
      },
      {
        "_attributes": {
          "source": "client",
          "code": "0x01",
          "name": "TestNotHandled",
          "optional": "false"
        },
        "description": {
          "_text": "\n        Simple command without any parameters and without a specific response not handled by the server\n      "
        }
      },
      {
        "_attributes": {
          "source": "client",
          "code": "0x02",
          "name": "TestSpecific",
          "response": "TestSpecificResponse",
          "optional": "false"
        },
        "description": {
          "_text": "\n        Simple command without any parameters and with a specific response\n      "
        }
      },
      {
        "_attributes": {
          "source": "client",
          "code": "0x03",
          "name": "TestUnknownCommand",
          "optional": "true"
        },
        "description": {
          "_text": "\n        Simple command that should not be added to the server.\n      "
        }
      },
      {
        "_attributes": {
          "source": "client",
          "code": "0x04",
          "name": "TestAddArguments",
          "response": "TestAddArgumentsResponse",
          "optional": "true"
        },
        "description": {
          "_text": "\n        Command that takes two arguments and returns their sum.\n      "
        },
        "arg": [
          {
            "_attributes": {
              "name": "arg1",
              "type": "INT8U"
            }
          },
          {
            "_attributes": {
              "name": "arg2",
              "type": "INT8U"
            }
          }
        ]
      },
      {
        "_attributes": {
          "source": "client",
          "code": "0x05",
          "name": "TestSimpleArgumentRequest",
          "response": "TestSimpleArgumentResponse",
          "optional": "true"
        },
        "description": {
          "_text": "\n        Command that takes an argument which is bool\n      "
        },
        "arg": {
          "_attributes": {
            "name": "arg1",
            "type": "BOOLEAN"
          }
        }
      },
      {
        "_attributes": {
          "source": "client",
          "code": "0x06",
          "name": "TestStructArrayArgumentRequest",
          "response": "TestStructArrayArgumentResponse",
          "optional": "true"
        },
        "description": {
          "_text": "\n        Command that takes various arguments that are arrays, including an array of structs which have a list member.\n      "
        },
        "arg": [
          {
            "_attributes": {
              "name": "arg1",
              "type": "NestedStructList",
              "array": "true"
            }
          },
          {
            "_attributes": {
              "name": "arg2",
              "type": "SimpleStruct",
              "array": "true"
            }
          },
          {
            "_attributes": {
              "name": "arg3",
              "type": "SimpleEnum",
              "array": "true"
            }
          },
          {
            "_attributes": {
              "name": "arg4",
              "type": "BOOLEAN",
              "array": "true"
            }
          },
          {
            "_attributes": {
              "name": "arg5",
              "type": "SimpleEnum"
            }
          },
          {
            "_attributes": {
              "name": "arg6",
              "type": "BOOLEAN"
            }
          }
        ]
      },
      {
        "_attributes": {
          "source": "client",
          "code": "0x07",
          "name": "TestStructArgumentRequest",
          "response": "BooleanResponse",
          "optional": "true"
        },
        "description": {
          "_text": "\n        Command that takes an argument which is struct.  The response echoes the\n        'b' field of the single arg.\n      "
        },
        "arg": {
          "_attributes": {
            "name": "arg1",
            "type": "SimpleStruct"
          }
        }
      },
      {
        "_attributes": {
          "source": "client",
          "code": "0x08",
          "name": "TestNestedStructArgumentRequest",
          "response": "BooleanResponse",
          "optional": "true"
        },
        "description": {
          "_text": "\n        Command that takes an argument which is nested struct.  The response\n        echoes the 'b' field of ar1.c.\n      "
        },
        "arg": {
          "_attributes": {
            "name": "arg1",
            "type": "NestedStruct"
          }
        }
      },
      {
        "_attributes": {
          "source": "client",
          "code": "0x09",
          "name": "TestListStructArgumentRequest",
          "response": "BooleanResponse",
          "optional": "true"
        },
        "description": {
          "_text": "\n        Command that takes an argument which is a list of structs.  The response\n        returns false if there is some struct in the list whose 'b' field is\n        false, and true otherwise (including if the list is empty).\n      "
        },
        "arg": {
          "_attributes": {
            "name": "arg1",
            "type": "SimpleStruct",
            "array": "true"
          }
        }
      },
      {
        "_attributes": {
          "source": "client",
          "code": "0x0A",
          "name": "TestListInt8UArgumentRequest",
          "response": "BooleanResponse",
          "optional": "true"
        },
        "description": {
          "_text": "\n        Command that takes an argument which is a list of INT8U.  The response\n        returns false if the list contains a 0 in it, true otherwise (including\n        if the list is empty).\n      "
        },
        "arg": {
          "_attributes": {
            "name": "arg1",
            "type": "INT8U",
            "array": "true"
          }
        }
      },
      {
        "_attributes": {
          "source": "client",
          "code": "0x0B",
          "name": "TestNestedStructListArgumentRequest",
          "response": "BooleanResponse",
          "optional": "true"
        },
        "description": {
          "_text": "\n        Command that takes an argument which is a Nested Struct List.  The\n        response returns false if there is some struct in arg1 (either directly\n        in arg1.c or in the arg1.d list) whose 'b' field is false, and true\n        otherwise.\n      "
        },
        "arg": {
          "_attributes": {
            "name": "arg1",
            "type": "NestedStructList"
          }
        }
      },
      {
        "_attributes": {
          "source": "client",
          "code": "0x0C",
          "name": "TestListNestedStructListArgumentRequest",
          "response": "BooleanResponse",
          "optional": "true"
        },
        "description": {
          "_text": "\n        Command that takes an argument which is a list of Nested Struct List.\n        The response returns false if there is some struct in arg1 (either\n        directly in as the 'c' field of an entry 'd' list of an entry) whose 'b'\n        field is false, and true otherwise (including if the list is empty).\n      "
        },
        "arg": {
          "_attributes": {
            "name": "arg1",
            "type": "NestedStructList",
            "array": "true"
          }
        }
      },
      {
        "_attributes": {
          "source": "client",
          "code": "0x0D",
          "name": "TestListInt8UReverseRequest",
          "response": "TestListInt8UReverseResponse",
          "optional": "true"
        },
        "description": {
          "_text": "\n        Command that takes an argument which is a list of INT8U and expects a\n        response that reverses the list.\n      "
        },
        "arg": {
          "_attributes": {
            "name": "arg1",
            "type": "INT8U",
            "array": "true"
          }
        }
      },
      {
        "_attributes": {
          "source": "client",
          "code": "0x0E",
          "name": "TestEnumsRequest",
          "response": "TestEnumsResponse",
          "optional": "true"
        },
        "description": {
          "_text": "\n        Command that sends a vendor id and an enum.  The server is expected to\n        echo them back.\n      "
        },
        "arg": [
          {
            "_attributes": {
              "name": "arg1",
              "type": "vendor_id"
            }
          },
          {
            "_attributes": {
              "name": "arg2",
              "type": "SimpleEnum"
            }
          }
        ]
      },
      {
        "_attributes": {
          "source": "client",
          "code": "0x0F",
          "name": "TestNullableOptionalRequest",
          "optional": "true",
          "response": "TestNullableOptionalResponse"
        },
        "description": {
          "_text": "\n        Command that takes an argument which is nullable and optional.  The\n        response returns a boolean indicating whether the argument was present,\n        if that's true a boolean indicating whether the argument was null, and\n        if that' false the argument it received.\n      "
        },
        "arg": {
          "_attributes": {
            "name": "arg1",
            "type": "INT8U",
            "optional": "true",
            "isNullable": "true"
          }
        }
      },
      {
        "_attributes": {
          "source": "client",
          "code": "0x10",
          "name": "TestComplexNullableOptionalRequest",
          "optional": "true",
          "response": "TestComplexNullableOptionalResponse"
        },
        "description": {
          "_text": "\n        Command that takes various arguments which can be nullable and/or optional.  The\n        response returns information about which things were received and what\n        their state was.\n      "
        },
        "arg": [
          {
            "_attributes": {
              "name": "NullableInt",
              "type": "INT16U",
              "isNullable": "true"
            }
          },
          {
            "_attributes": {
              "name": "OptionalInt",
              "type": "INT16U",
              "optional": "true"
            }
          },
          {
            "_attributes": {
              "name": "NullableOptionalInt",
              "type": "INT16U",
              "isNullable": "true",
              "optional": "true"
            }
          },
          {
            "_attributes": {
              "name": "NullableString",
              "type": "CHAR_STRING",
              "isNullable": "true"
            }
          },
          {
            "_attributes": {
              "name": "OptionalString",
              "type": "CHAR_STRING",
              "optional": "true"
            }
          },
          {
            "_attributes": {
              "name": "NullableOptionalString",
              "type": "CHAR_STRING",
              "isNullable": "true",
              "optional": "true"
            }
          },
          {
            "_attributes": {
              "name": "NullableStruct",
              "type": "SimpleStruct",
              "isNullable": "true"
            }
          },
          {
            "_attributes": {
              "name": "OptionalStruct",
              "type": "SimpleStruct",
              "optional": "true"
            }
          },
          {
            "_attributes": {
              "name": "NullableOptionalStruct",
              "type": "SimpleStruct",
              "isNullable": "true",
              "optional": "true"
            }
          },
          {
            "_attributes": {
              "name": "NullableList",
              "type": "SimpleEnum",
              "isNullable": "true",
              "array": "true"
            }
          },
          {
            "_attributes": {
              "name": "OptionalList",
              "type": "SimpleEnum",
              "optional": "true",
              "array": "true"
            }
          },
          {
            "_attributes": {
              "name": "NullableOptionalList",
              "type": "SimpleEnum",
              "isNullable": "true",
              "array": "true",
              "optional": "true"
            }
          }
        ]
      },
      {
        "_attributes": {
          "source": "client",
          "code": "0x11",
          "name": "SimpleStructEchoRequest",
          "response": "SimpleStructResponse",
          "optional": "true"
        },
        "description": {
          "_text": "\n        Command that takes an argument which is a struct.  The response echoes\n        the struct back.\n      "
        },
        "arg": {
          "_attributes": {
            "name": "arg1",
            "type": "SimpleStruct"
          }
        }
      },
      {
        "_attributes": {
          "source": "client",
          "code": "0x12",
          "name": "TimedInvokeRequest",
          "mustUseTimedInvoke": "true",
          "optional": "true"
        },
        "description": {
          "_text": "\n        Command that just responds with a success status if the timed invoke\n        conditions are met.\n      "
        }
      },
      {
        "_attributes": {
          "source": "client",
          "code": "0x13",
          "name": "TestSimpleOptionalArgumentRequest",
          "optional": "true"
        },
        "description": {
          "_text": "\n        Command that takes an optional argument which is bool. It responds with a success value if the optional is set to any value.\n      "
        },
        "arg": {
          "_attributes": {
            "name": "arg1",
            "type": "BOOLEAN",
            "optional": "true"
          }
        }
      },
      {
        "_attributes": {
          "source": "client",
          "code": "0x14",
          "name": "TestEmitTestEventRequest",
          "optional": "true",
          "response": "TestEmitTestEventResponse"
        },
        "description": {
          "_text": "\n        Command that takes identical arguments to the fields of the TestEvent and logs the TestEvent to the buffer.  Command returns an event ID as the response.\n      "
        },
        "arg": [
          {
            "_attributes": {
              "name": "arg1",
              "type": "INT8U"
            }
          },
          {
            "_attributes": {
              "name": "arg2",
              "type": "SimpleEnum"
            }
          },
          {
            "_attributes": {
              "name": "arg3",
              "type": "BOOLEAN"
            }
          }
        ]
      },
      {
        "_attributes": {
          "source": "client",
          "code": "0x15",
          "name": "TestEmitTestFabricScopedEventRequest",
          "optional": "true",
          "response": "TestEmitTestFabricScopedEventResponse"
        },
        "description": {
          "_text": "\n        Command that takes identical arguments to the fields of the TestFabricScopedEvent and logs the TestFabricScopedEvent to the buffer.  Command returns an event ID as the response.\n      "
        },
        "arg": {
          "_attributes": {
            "name": "arg1",
            "type": "INT8U"
          }
        }
      },
      {
        "_attributes": {
          "source": "server",
          "code": "0x00",
          "name": "TestSpecificResponse",
          "optional": "true",
          "disableDefaultResponse": "true"
        },
        "description": {
          "_text": "\n        Simple response for TestWithResponse with a simple return value\n      "
        },
        "arg": {
          "_attributes": {
            "name": "returnValue",
            "type": "INT8U"
          }
        }
      },
      {
        "_attributes": {
          "source": "server",
          "code": "0x01",
          "name": "TestAddArgumentsResponse",
          "optional": "true",
          "disableDefaultResponse": "true"
        },
        "description": {
          "_text": "\n        Response for TestAddArguments that returns the sum.\n      "
        },
        "arg": {
          "_attributes": {
            "name": "returnValue",
            "type": "INT8U"
          }
        }
      },
      {
        "_attributes": {
          "source": "server",
          "code": "0x02",
          "name": "TestSimpleArgumentResponse",
          "optional": "true",
          "disableDefaultResponse": "true"
        },
        "description": {
          "_text": "\n        Simple response for TestSimpleArgumentRequest with a simple return value\n      "
        },
        "arg": {
          "_attributes": {
            "name": "returnValue",
            "type": "BOOLEAN"
          }
        }
      },
      {
        "_attributes": {
          "source": "server",
          "code": "0x03",
          "name": "TestStructArrayArgumentResponse",
          "optional": "true",
          "disableDefaultResponse": "true"
        },
        "description": {
          "_text": "\n        Response for TestStructArrayArgumentRequest with complicated return arguments\n      "
        },
        "arg": [
          {
            "_attributes": {
              "name": "arg1",
              "type": "NestedStructList",
              "array": "true"
            }
          },
          {
            "_attributes": {
              "name": "arg2",
              "type": "SimpleStruct",
              "array": "true"
            }
          },
          {
            "_attributes": {
              "name": "arg3",
              "type": "SimpleEnum",
              "array": "true"
            }
          },
          {
            "_attributes": {
              "name": "arg4",
              "type": "BOOLEAN",
              "array": "true"
            }
          },
          {
            "_attributes": {
              "name": "arg5",
              "type": "SimpleEnum"
            }
          },
          {
            "_attributes": {
              "name": "arg6",
              "type": "BOOLEAN"
            }
          }
        ]
      },
      {
        "_attributes": {
          "source": "server",
          "code": "0x04",
          "name": "TestListInt8UReverseResponse",
          "optional": "true",
          "disableDefaultResponse": "true"
        },
        "description": {
          "_text": "\n        Response that delivers the reversed list of uint8.\n      "
        },
        "arg": {
          "_attributes": {
            "name": "arg1",
            "type": "INT8U",
            "array": "true"
          }
        }
      },
      {
        "_attributes": {
          "source": "server",
          "code": "0x05",
          "name": "TestEnumsResponse",
          "optional": "true",
          "disableDefaultResponse": "true"
        },
        "description": {
          "_text": "\n        Response that delivers a vendor id and an enum..\n      "
        },
        "arg": [
          {
            "_attributes": {
              "name": "arg1",
              "type": "vendor_id"
            }
          },
          {
            "_attributes": {
              "name": "arg2",
              "type": "SimpleEnum"
            }
          }
        ]
      },
      {
        "_attributes": {
          "source": "server",
          "code": "0x06",
          "name": "TestNullableOptionalResponse",
          "optional": "true",
          "disableDefaultResponse": "true"
        },
        "description": {
          "_text": "\n        Delivers information about the argument TestNullableOptionalRequest had,\n        and the original value if there was one.\n      "
        },
        "arg": [
          {
            "_attributes": {
              "name": "wasPresent",
              "type": "BOOLEAN"
            }
          },
          {
            "_attributes": {
              "name": "wasNull",
              "type": "BOOLEAN",
              "optional": "true"
            }
          },
          {
            "_attributes": {
              "name": "value",
              "type": "INT8U",
              "optional": "true"
            }
          },
          {
            "_attributes": {
              "name": "originalValue",
              "type": "INT8U",
              "optional": "true",
              "isNullable": "true"
            }
          }
        ]
      },
      {
        "_attributes": {
          "source": "server",
          "code": "0x07",
          "name": "TestComplexNullableOptionalResponse",
          "optional": "true",
          "disableDefaultResponse": "true"
        },
        "description": {
          "_text": "\n        Delivers information about the arguments TestComplexNullableOptionalRequest had.\n      "
        },
        "arg": [
          {
            "_attributes": {
              "name": "NullableIntWasNull",
              "type": "BOOLEAN"
            }
          },
          {
            "_attributes": {
              "name": "NullableIntValue",
              "type": "INT16U",
              "optional": "true"
            }
          },
          {
            "_attributes": {
              "name": "OptionalIntWasPresent",
              "type": "BOOLEAN"
            }
          },
          {
            "_attributes": {
              "name": "OptionalIntValue",
              "type": "INT16U",
              "optional": "true"
            }
          },
          {
            "_attributes": {
              "name": "NullableOptionalIntWasPresent",
              "type": "BOOLEAN"
            }
          },
          {
            "_attributes": {
              "name": "NullableOptionalIntWasNull",
              "type": "BOOLEAN",
              "optional": "true"
            }
          },
          {
            "_attributes": {
              "name": "NullableOptionalIntValue",
              "type": "INT16U",
              "optional": "true"
            }
          },
          {
            "_attributes": {
              "name": "NullableStringWasNull",
              "type": "BOOLEAN"
            }
          },
          {
            "_attributes": {
              "name": "NullableStringValue",
              "type": "CHAR_STRING",
              "optional": "true"
            }
          },
          {
            "_attributes": {
              "name": "OptionalStringWasPresent",
              "type": "BOOLEAN"
            }
          },
          {
            "_attributes": {
              "name": "OptionalStringValue",
              "type": "CHAR_STRING",
              "optional": "true"
            }
          },
          {
            "_attributes": {
              "name": "NullableOptionalStringWasPresent",
              "type": "BOOLEAN"
            }
          },
          {
            "_attributes": {
              "name": "NullableOptionalStringWasNull",
              "type": "BOOLEAN",
              "optional": "true"
            }
          },
          {
            "_attributes": {
              "name": "NullableOptionalStringValue",
              "type": "CHAR_STRING",
              "optional": "true"
            }
          },
          {
            "_attributes": {
              "name": "NullableStructWasNull",
              "type": "BOOLEAN"
            }
          },
          {
            "_attributes": {
              "name": "NullableStructValue",
              "type": "SimpleStruct",
              "optional": "true"
            }
          },
          {
            "_attributes": {
              "name": "OptionalStructWasPresent",
              "type": "BOOLEAN"
            }
          },
          {
            "_attributes": {
              "name": "OptionalStructValue",
              "type": "SimpleStruct",
              "optional": "true"
            }
          },
          {
            "_attributes": {
              "name": "NullableOptionalStructWasPresent",
              "type": "BOOLEAN"
            }
          },
          {
            "_attributes": {
              "name": "NullableOptionalStructWasNull",
              "type": "BOOLEAN",
              "optional": "true"
            }
          },
          {
            "_attributes": {
              "name": "NullableOptionalStructValue",
              "type": "SimpleStruct",
              "optional": "true"
            }
          },
          {
            "_attributes": {
              "name": "NullableListWasNull",
              "type": "BOOLEAN"
            }
          },
          {
            "_attributes": {
              "name": "NullableListValue",
              "type": "SimpleEnum",
              "array": "true",
              "optional": "true"
            }
          },
          {
            "_attributes": {
              "name": "OptionalListWasPresent",
              "type": "BOOLEAN"
            }
          },
          {
            "_attributes": {
              "name": "OptionalListValue",
              "type": "SimpleEnum",
              "array": "true",
              "optional": "true"
            }
          },
          {
            "_attributes": {
              "name": "NullableOptionalListWasPresent",
              "type": "BOOLEAN"
            }
          },
          {
            "_attributes": {
              "name": "NullableOptionalListWasNull",
              "type": "BOOLEAN",
              "optional": "true"
            }
          },
          {
            "_attributes": {
              "name": "NullableOptionalListValue",
              "type": "SimpleEnum",
              "array": "true",
              "optional": "true"
            }
          }
        ]
      },
      {
        "_attributes": {
          "source": "server",
          "code": "0x08",
          "name": "BooleanResponse",
          "optional": "true",
          "disableDefaultResponse": "true"
        },
        "description": {
          "_text": "\n        Delivers a single boolean argument. What the argument means depends on\n        what we're responding to.\n      "
        },
        "arg": {
          "_attributes": {
            "name": "value",
            "type": "BOOLEAN"
          }
        }
      },
      {
        "_attributes": {
          "source": "server",
          "code": "0x09",
          "name": "SimpleStructResponse",
          "optional": "true",
          "disableDefaultResponse": "true"
        },
        "description": {
          "_text": "\n        Command that returns a single argument which is a struct.  The contents\n        of the struct depend on what we are responding to.\n      "
        },
        "arg": {
          "_attributes": {
            "name": "arg1",
            "type": "SimpleStruct"
          }
        }
      },
      {
        "_attributes": {
          "source": "server",
          "code": "0x0A",
          "name": "TestEmitTestEventResponse",
          "optional": "true",
          "disableDefaultResponse": "true"
        },
        "description": {
          "_text": "\n        Delivers the ID of an event in response to test command emitting fabric scoped events.\n      "
        },
        "arg": {
          "_attributes": {
            "name": "value",
            "type": "INT64U"
          }
        }
      },
      {
        "_attributes": {
          "source": "server",
          "code": "0x0B",
          "name": "TestEmitTestFabricScopedEventResponse",
          "optional": "true",
          "disableDefaultResponse": "true"
        },
        "description": {
          "_text": "\n        Delivers the ID of an event in response to test command emitting fabric scope events.\n      "
        },
        "arg": {
          "_attributes": {
            "name": "value",
            "type": "INT64U"
          }
        }
      }
    ],
    "event": [
      {
        "_attributes": {
          "code": "0x0001",
          "name": "TestEvent",
          "priority": "info",
          "side": "server"
        },
        "description": {
          "_text": "Example test event"
        },
        "field": [
          {
            "_attributes": {
              "id": "1",
              "name": "arg1",
              "type": "INT8U"
            }
          },
          {
            "_attributes": {
              "id": "2",
              "name": "arg2",
              "type": "SimpleEnum"
            }
          },
          {
            "_attributes": {
              "id": "3",
              "name": "arg3",
              "type": "BOOLEAN"
            }
          },
          {
            "_attributes": {
              "id": "4",
              "name": "arg4",
              "type": "SimpleStruct"
            }
          },
          {
            "_attributes": {
              "id": "5",
              "name": "arg5",
              "type": "SimpleStruct",
              "array": "true"
            }
          },
          {
            "_attributes": {
              "id": "6",
              "name": "arg6",
              "type": "SimpleEnum",
              "array": "true"
            }
          }
        ]
      },
      {
        "_attributes": {
          "code": "0x0002",
          "name": "TestFabricScopedEvent",
          "priority": "info",
          "side": "server",
          "isFabricSensitive": "true"
        },
        "description": {
          "_text": "Example test event"
        }
      }
    ]
  },
  "4294048774": {
    "domain": {
      "_text": "CHIP"
    },
    "name": {
      "_text": "Fault Injection"
    },
    "code": {
      "_text": "0xFFF1FC06"
    },
    "define": {
      "_text": "FAULT_INJECTION_CLUSTER"
    },
    "description": {
      "_text": "The Fault Injection Cluster provide a means for a test harness to configure faults(for example triggering a fault in the system)."
    },
    "command": [
      {
        "_attributes": {
          "source": "client",
          "code": "0x00",
          "name": "FailAtFault",
          "optional": "false"
        },
        "description": {
          "_text": "Configure a fault to be triggered deterministically"
        },
        "arg": [
          {
            "_attributes": {
              "name": "Type",
              "type": "FaultType"
            }
          },
          {
            "_attributes": {
              "name": "Id",
              "type": "INT32U"
            }
          },
          {
            "_attributes": {
              "name": "NumCallsToSkip",
              "type": "INT32U"
            }
          },
          {
            "_attributes": {
              "name": "NumCallsToFail",
              "type": "INT32U"
            }
          },
          {
            "_attributes": {
              "name": "TakeMutex",
              "type": "BOOLEAN"
            }
          }
        ],
        "access": {
          "_attributes": {
            "op": "invoke",
            "role": "manage"
          }
        }
      },
      {
        "_attributes": {
          "source": "client",
          "code": "0x01",
          "name": "FailRandomlyAtFault",
          "optional": "false"
        },
        "description": {
          "_text": "Configure a fault to be triggered randomly, with a given probability defined as a percentage"
        },
        "arg": [
          {
            "_attributes": {
              "name": "Type",
              "type": "FaultType"
            }
          },
          {
            "_attributes": {
              "name": "Id",
              "type": "INT32U"
            }
          },
          {
            "_attributes": {
              "name": "Percentage",
              "type": "INT8U"
            }
          }
        ],
        "access": {
          "_attributes": {
            "op": "invoke",
            "role": "manage"
          }
        }
      }
    ]
  }
}
