{
  "3": {
    "properties": {
      "3": {
        "title": "Identify",
        "description": "Attributes and commands for putting a device into Identification mode (e.g. flashing a light).",
        "uriVariables": {
          "attribute": {
            "type": "integer",
            "description": "Attrbute to read from the device",
            "oneOf": [
              {
                "type": "integer",
                "title": "IDENTIFY_TIME",
                "const": 0
              },
              {
                "type": "integer",
                "title": "IDENTIFY_TYPE",
                "const": 1
              }
            ]
          }
        }
      }
    },
    "actions": {
      "3": {
        "title": "Identify",
        "description": "Attributes and commands for putting a device into Identification mode (e.g. flashing a light).",
        "input": {
          "type": "object",
          "properties": {
            "command": {
              "type": "object",
              "description": "Command to send to the device",
              "oneOf": [
                {
                  "type": "object",
                  "description": "\n        Command description for Identify\n      ",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 0
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "IdentifyTime": {
                          "type": "string",
                          "description": "INT16U"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "\n        Command description for TriggerEffect\n      ",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 64
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "EffectIdentifier": {
                          "type": "string",
                          "description": "IdentifyEffectIdentifier"
                        },
                        "EffectVariant": {
                          "type": "string",
                          "description": "IdentifyEffectVariant"
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        }
      }
    }
  },
  "4": {
    "properties": {
      "4": {
        "title": "Groups",
        "description": "Attributes and commands for group configuration and manipulation.",
        "uriVariables": {
          "attribute": {
            "type": "integer",
            "description": "Attrbute to read from the device",
            "oneOf": [
              {
                "type": "integer",
                "title": "GROUP_NAME_SUPPORT",
                "const": 0
              }
            ]
          }
        }
      }
    },
    "actions": {
      "4": {
        "title": "Groups",
        "description": "Attributes and commands for group configuration and manipulation.",
        "input": {
          "type": "object",
          "properties": {
            "command": {
              "type": "object",
              "description": "Command to send to the device",
              "oneOf": [
                {
                  "type": "object",
                  "description": "\n        Command description for AddGroup\n      ",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 0
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "GroupID": {
                          "type": "string",
                          "description": "group_id"
                        },
                        "GroupName": {
                          "type": "string",
                          "description": "CHAR_STRING"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "\n        Command description for ViewGroup\n      ",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 1
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "GroupID": {
                          "type": "string",
                          "description": "group_id"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "\n        Command description for GetGroupMembership\n      ",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 2
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "GroupList": {
                          "type": "string",
                          "description": "group_id"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "\n        Command description for RemoveGroup\n      ",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 3
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "GroupID": {
                          "type": "string",
                          "description": "group_id"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "\n        Command description for RemoveAllGroups\n      ",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 4
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "\n        Command description for AddGroupIfIdentifying\n      ",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 5
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "GroupID": {
                          "type": "string",
                          "description": "group_id"
                        },
                        "GroupName": {
                          "type": "string",
                          "description": "CHAR_STRING"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "\n        Command description for AddGroupResponse\n      ",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 0
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "Status": {
                          "type": "string",
                          "description": "ENUM8"
                        },
                        "GroupID": {
                          "type": "string",
                          "description": "group_id"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "\n        Command description for ViewGroupResponse\n      ",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 1
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "Status": {
                          "type": "string",
                          "description": "ENUM8"
                        },
                        "GroupID": {
                          "type": "string",
                          "description": "group_id"
                        },
                        "GroupName": {
                          "type": "string",
                          "description": "CHAR_STRING"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "\n        Command description for GetGroupMembershipResponse\n      ",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 2
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "Capacity": {
                          "type": "string",
                          "description": "INT8U"
                        },
                        "GroupList": {
                          "type": "string",
                          "description": "group_id"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "\n        Command description for RemoveGroupResponse\n      ",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 3
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "Status": {
                          "type": "string",
                          "description": "ENUM8"
                        },
                        "GroupID": {
                          "type": "string",
                          "description": "group_id"
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        }
      }
    }
  },
  "5": {
    "properties": {
      "5": {
        "title": "Scenes",
        "description": "Attributes and commands for scene configuration and manipulation.",
        "uriVariables": {
          "attribute": {
            "type": "integer",
            "description": "Attrbute to read from the device",
            "oneOf": [
              {
                "type": "integer",
                "title": "SCENE_COUNT",
                "const": 0
              },
              {
                "type": "integer",
                "title": "CURRENT_SCENE",
                "const": 1
              },
              {
                "type": "integer",
                "title": "CURRENT_GROUP",
                "const": 2
              },
              {
                "type": "integer",
                "title": "SCENE_VALID",
                "const": 3
              },
              {
                "type": "integer",
                "title": "SCENE_NAME_SUPPORT",
                "const": 4
              },
              {
                "type": "integer",
                "title": "LAST_CONFIGURED_BY",
                "const": 5
              }
            ]
          }
        }
      }
    },
    "actions": {
      "5": {
        "title": "Scenes",
        "description": "Attributes and commands for scene configuration and manipulation.",
        "input": {
          "type": "object",
          "properties": {
            "command": {
              "type": "object",
              "description": "Command to send to the device",
              "oneOf": [
                {
                  "type": "object",
                  "description": "\n        Add a scene to the scene table. Extension field sets are supported, and are inputed as '{\"ClusterID\": VALUE, \"AttributeValueList\":[{\"AttributeId\": VALUE, \"AttributeValue\": VALUE}]}'\n      ",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 0
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "GroupID": {
                          "type": "string",
                          "description": "group_id"
                        },
                        "SceneID": {
                          "type": "string",
                          "description": "INT8U"
                        },
                        "TransitionTime": {
                          "type": "string",
                          "description": "INT16U"
                        },
                        "SceneName": {
                          "type": "string",
                          "description": "CHAR_STRING"
                        },
                        "ExtensionFieldSets": {
                          "type": "string",
                          "description": "ExtensionFieldSet"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "\n        Retrieves the requested scene entry from its Scene table.\n      ",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 1
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "GroupID": {
                          "type": "string",
                          "description": "group_id"
                        },
                        "SceneID": {
                          "type": "string",
                          "description": "INT8U"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "\n        Removes the requested scene entry, corresponding to the value of the GroupID field, from its Scene Table\n      ",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 2
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "GroupID": {
                          "type": "string",
                          "description": "group_id"
                        },
                        "SceneID": {
                          "type": "string",
                          "description": "INT8U"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "\n        Remove all scenes, corresponding to the value of the GroupID field, from its Scene Table\n      ",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 3
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "GroupID": {
                          "type": "string",
                          "description": "group_id"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "\n        Adds the scene entry into its Scene Table along with all extension field sets corresponding to the current state of other clusters on the same endpoint\n      ",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 4
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "GroupID": {
                          "type": "string",
                          "description": "group_id"
                        },
                        "SceneID": {
                          "type": "string",
                          "description": "INT8U"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "\n        Set the attributes and corresponding state for each other cluster implemented on the endpoint accordingly to the resquested scene entry in the Scene Table\n      ",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 5
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "GroupID": {
                          "type": "string",
                          "description": "group_id"
                        },
                        "SceneID": {
                          "type": "string",
                          "description": "INT8U"
                        },
                        "TransitionTime": {
                          "type": "string",
                          "description": "INT16U"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "\n        Get an unused scene identifier when no commissioning tool is in the network, or for a commissioning tool to get the used scene identifiers within a certain group \n      ",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 6
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "GroupID": {
                          "type": "string",
                          "description": "group_id"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "\n        Allows a scene to be added using a finer scene transition time than the AddScene command.\n      ",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 64
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "GroupID": {
                          "type": "string",
                          "description": "group_id"
                        },
                        "SceneID": {
                          "type": "string",
                          "description": "INT8U"
                        },
                        "TransitionTime": {
                          "type": "string",
                          "description": "INT16U"
                        },
                        "SceneName": {
                          "type": "string",
                          "description": "CHAR_STRING"
                        },
                        "ExtensionFieldSets": {
                          "type": "string",
                          "description": "ExtensionFieldSet"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "\n        Allows a scene to be retrieved using a finer scene transition time than the ViewScene command\n      ",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 65
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "GroupID": {
                          "type": "string",
                          "description": "group_id"
                        },
                        "SceneID": {
                          "type": "string",
                          "description": "INT8U"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "\n        Allows a client to efficiently copy scenes from one group/scene identifier pair to another group/scene identifier pair.\n      ",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 66
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "Mode": {
                          "type": "string",
                          "description": "ScenesCopyMode"
                        },
                        "GroupIdentifierFrom": {
                          "type": "string",
                          "description": "group_id"
                        },
                        "SceneIdentifierFrom": {
                          "type": "string",
                          "description": "INT8U"
                        },
                        "GroupIdentifierTo": {
                          "type": "string",
                          "description": "group_id"
                        },
                        "SceneIdentifierTo": {
                          "type": "string",
                          "description": "INT8U"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "\n        The command is generated in response to a received unicast AddScene command,\n      ",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 0
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "Status": {
                          "type": "string",
                          "description": "ENUM8"
                        },
                        "GroupID": {
                          "type": "string",
                          "description": "group_id"
                        },
                        "SceneID": {
                          "type": "string",
                          "description": "INT8U"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "\n        The command is generated in response to a received unicast ViewScene command \n      ",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 1
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "Status": {
                          "type": "string",
                          "description": "ENUM8"
                        },
                        "GroupID": {
                          "type": "string",
                          "description": "group_id"
                        },
                        "SceneID": {
                          "type": "string",
                          "description": "INT8U"
                        },
                        "TransitionTime": {
                          "type": "string",
                          "description": "INT16U"
                        },
                        "SceneName": {
                          "type": "string",
                          "description": "CHAR_STRING"
                        },
                        "ExtensionFieldSets": {
                          "type": "string",
                          "description": "ExtensionFieldSet"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "\n        The command is generated in response to a received unicast RemoveScene command\n      ",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 2
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "Status": {
                          "type": "string",
                          "description": "ENUM8"
                        },
                        "GroupID": {
                          "type": "string",
                          "description": "group_id"
                        },
                        "SceneID": {
                          "type": "string",
                          "description": "INT8U"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "\n        The command is generated in response to a received unicast RemoveAllScenes command\n      ",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 3
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "Status": {
                          "type": "string",
                          "description": "ENUM8"
                        },
                        "GroupID": {
                          "type": "string",
                          "description": "group_id"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "\n        The command is generated in response to a received unicast StoreScene command\n      ",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 4
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "Status": {
                          "type": "string",
                          "description": "ENUM8"
                        },
                        "GroupID": {
                          "type": "string",
                          "description": "group_id"
                        },
                        "SceneID": {
                          "type": "string",
                          "description": "INT8U"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "\n        The command is generated in response to a received unicast GetSceneMembership command\n      ",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 6
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "Status": {
                          "type": "string",
                          "description": "ENUM8"
                        },
                        "Capacity": {
                          "type": "string",
                          "description": "INT8U"
                        },
                        "GroupID": {
                          "type": "string",
                          "description": "group_id"
                        },
                        "SceneList": {
                          "type": "string",
                          "description": "INT8U"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "\n        The command is generated in response to a received unicast EnhancedAddScene command\n      ",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 64
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "Status": {
                          "type": "string",
                          "description": "ENUM8"
                        },
                        "GroupID": {
                          "type": "string",
                          "description": "group_id"
                        },
                        "SceneID": {
                          "type": "string",
                          "description": "INT8U"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "\n        The command is generated in response to a received unicast EnhancedViewScene command\n      ",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 65
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "Status": {
                          "type": "string",
                          "description": "ENUM8"
                        },
                        "GroupID": {
                          "type": "string",
                          "description": "group_Id"
                        },
                        "SceneID": {
                          "type": "string",
                          "description": "INT8U"
                        },
                        "TransitionTime": {
                          "type": "string",
                          "description": "INT16U"
                        },
                        "SceneName": {
                          "type": "string",
                          "description": "CHAR_STRING"
                        },
                        "ExtensionFieldSets": {
                          "type": "string",
                          "description": "ExtensionFieldSet"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "\n        The command is generated in response to a received unicast CopyScene command\n      ",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 66
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "Status": {
                          "type": "string",
                          "description": "ENUM8"
                        },
                        "GroupIdentifierFrom": {
                          "type": "string",
                          "description": "group_Id"
                        },
                        "SceneIdentifierFrom": {
                          "type": "string",
                          "description": "INT8U"
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        }
      }
    }
  },
  "6": {
    "properties": {
      "6": {
        "title": "On/Off",
        "description": "Attributes and commands for switching devices between 'On' and 'Off' states.",
        "uriVariables": {
          "attribute": {
            "type": "integer",
            "description": "Attrbute to read from the device",
            "oneOf": [
              {
                "type": "integer",
                "title": "ON_OFF",
                "const": 0,
                "@type": "saref:OnOffState"
              },
              {
                "type": "integer",
                "title": "GLOBAL_SCENE_CONTROL",
                "const": 16384
              },
              {
                "type": "integer",
                "title": "ON_TIME",
                "const": 16385
              },
              {
                "type": "integer",
                "title": "OFF_WAIT_TIME",
                "const": 16386
              },
              {
                "type": "integer",
                "title": "START_UP_ON_OFF",
                "description": "StartUpOnOff",
                "const": 16387
              }
            ]
          }
        }
      }
    },
    "actions": {
      "6": {
        "title": "On/Off",
        "description": "Attributes and commands for switching devices between 'On' and 'Off' states.",
        "input": {
          "type": "object",
          "properties": {
            "command": {
              "type": "object",
              "description": "Command to send to the device",
              "oneOf": [
                {
                  "type": "object",
                  "description": "On receipt of this command, a device SHALL enter its ‘Off’ state. This state is device dependent, but it is recommended that it is used for power off or similar functions. On receipt of the Off command, the OnTime attribute SHALL be set to 0.",
                  "@type": "saref:OffCommand",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 0
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "On receipt of this command, a device SHALL enter its ‘On’ state. This state is device dependent, but it is recommended that it is used for power on or similar functions. On receipt of the On command, if the value of the OnTime attribute is equal to 0, the device SHALL set the OffWaitTime attribute to 0.",
                  "@type": "saref:OnCommand",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 1
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "On receipt of this command, if a device is in its ‘Off’ state it SHALL enter its ‘On’ state. Otherwise, if it is in its ‘On’ state it SHALL enter its ‘Off’ state. On receipt of the Toggle command, if the value of the OnOff attribute is equal to FALSE and if the value of the OnTime attribute is equal to 0, the device SHALL set the OffWaitTime attribute to 0. If the value of the OnOff attribute is equal to TRUE, the OnTime attribute SHALL be set to 0.",
                  "@type": "saref:ToggleCommand",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 2
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "The OffWithEffect command allows devices to be turned off using enhanced ways of fading.",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 64
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "EffectIdentifier": {
                          "type": "string",
                          "description": "OnOffEffectIdentifier"
                        },
                        "EffectVariant": {
                          "type": "string",
                          "description": "OnOffDelayedAllOffEffectVariant"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "The OnWithRecallGlobalScene command allows the recall of the settings when the device was turned off.",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 65
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "The OnWithTimedOff command allows devices to be turned on for a specific duration with a guarded off duration so that SHOULD the device be subsequently switched off, further OnWithTimedOff commands, received during this time, are prevented from turning the devices back on.",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 66
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "OnOffControl": {
                          "type": "string",
                          "description": "OnOffControl"
                        },
                        "OnTime": {
                          "type": "string",
                          "description": "int16u"
                        },
                        "OffWaitTime": {
                          "type": "string",
                          "description": "int16u"
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        }
      }
    }
  },
  "8": {
    "properties": {
      "8": {
        "title": "Level Control",
        "description": "Attributes and commands for controlling devices that can be set to a level between fully 'On' and fully 'Off.'",
        "uriVariables": {
          "attribute": {
            "type": "integer",
            "description": "Attrbute to read from the device",
            "oneOf": [
              {
                "type": "integer",
                "title": "CURRENT_LEVEL",
                "const": 0,
                "@type": "saref:MultiLevelState"
              },
              {
                "type": "integer",
                "title": "LEVEL_CONTROL_REMAINING_TIME",
                "const": 1
              },
              {
                "type": "integer",
                "title": "MINIMUM_LEVEL",
                "const": 2
              },
              {
                "type": "integer",
                "title": "MAXIMUM_LEVEL",
                "const": 3
              },
              {
                "type": "integer",
                "title": "CURRENT_FREQUENCY",
                "const": 4
              },
              {
                "type": "integer",
                "title": "MIN_FREQUENCY",
                "const": 5
              },
              {
                "type": "integer",
                "title": "MAX_FREQUENCY",
                "const": 6
              },
              {
                "type": "integer",
                "title": "ON_OFF_TRANSITION_TIME",
                "const": 16
              },
              {
                "type": "integer",
                "title": "ON_LEVEL",
                "const": 17
              },
              {
                "type": "integer",
                "title": "ON_TRANSITION_TIME",
                "const": 18
              },
              {
                "type": "integer",
                "title": "OFF_TRANSITION_TIME",
                "const": 19
              },
              {
                "type": "integer",
                "title": "DEFAULT_MOVE_RATE",
                "const": 20
              },
              {
                "type": "integer",
                "title": "OPTIONS",
                "const": 15
              },
              {
                "type": "integer",
                "title": "START_UP_CURRENT_LEVEL",
                "description": "StartUpCurrentLevel",
                "const": 16384
              }
            ]
          }
        }
      }
    },
    "actions": {
      "8": {
        "title": "Level Control",
        "description": "Attributes and commands for controlling devices that can be set to a level between fully 'On' and fully 'Off.'",
        "input": {
          "type": "object",
          "properties": {
            "command": {
              "type": "object",
              "description": "Command to send to the device",
              "oneOf": [
                {
                  "type": "object",
                  "description": "\n        Command description for MoveToLevel\n      ",
                  "@type": "saref:SetLevelCommand",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 0
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "Level": {
                          "type": "string",
                          "description": "INT8U"
                        },
                        "TransitionTime": {
                          "type": "string",
                          "description": "INT16U"
                        },
                        "OptionsMask": {
                          "type": "string",
                          "description": "LevelControlOptions"
                        },
                        "OptionsOverride": {
                          "type": "string",
                          "description": "LevelControlOptions"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "\n        Command description for Move\n      ",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 1
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "MoveMode": {
                          "type": "string",
                          "description": "MoveMode"
                        },
                        "Rate": {
                          "type": "string",
                          "description": "INT8U"
                        },
                        "OptionsMask": {
                          "type": "string",
                          "description": "LevelControlOptions"
                        },
                        "OptionsOverride": {
                          "type": "string",
                          "description": "LevelControlOptions"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "\n        Command description for Step\n      ",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 2
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "StepMode": {
                          "type": "string",
                          "description": "StepMode"
                        },
                        "StepSize": {
                          "type": "string",
                          "description": "INT8U"
                        },
                        "TransitionTime": {
                          "type": "string",
                          "description": "INT16U"
                        },
                        "OptionsMask": {
                          "type": "string",
                          "description": "LevelControlOptions"
                        },
                        "OptionsOverride": {
                          "type": "string",
                          "description": "LevelControlOptions"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "\n        Command description for Stop\n      ",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 3
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "OptionsMask": {
                          "type": "string",
                          "description": "LevelControlOptions"
                        },
                        "OptionsOverride": {
                          "type": "string",
                          "description": "LevelControlOptions"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "\n        Command description for MoveToLevelWithOnOff\n      ",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 4
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "Level": {
                          "type": "string",
                          "description": "INT8U"
                        },
                        "TransitionTime": {
                          "type": "string",
                          "description": "INT16U"
                        },
                        "OptionsMask": {
                          "type": "string",
                          "description": "LevelControlOptions"
                        },
                        "OptionsOverride": {
                          "type": "string",
                          "description": "LevelControlOptions"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "\n        Command description for MoveWithOnOff\n      ",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 5
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "MoveMode": {
                          "type": "string",
                          "description": "MoveMode"
                        },
                        "Rate": {
                          "type": "string",
                          "description": "INT8U"
                        },
                        "OptionsMask": {
                          "type": "string",
                          "description": "LevelControlOptions"
                        },
                        "OptionsOverride": {
                          "type": "string",
                          "description": "LevelControlOptions"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "\n        Command description for StepWithOnOff\n      ",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 6
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "StepMode": {
                          "type": "string",
                          "description": "StepMode"
                        },
                        "StepSize": {
                          "type": "string",
                          "description": "INT8U"
                        },
                        "TransitionTime": {
                          "type": "string",
                          "description": "INT16U"
                        },
                        "OptionsMask": {
                          "type": "string",
                          "description": "LevelControlOptions"
                        },
                        "OptionsOverride": {
                          "type": "string",
                          "description": "LevelControlOptions"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "\n        Command description for StopWithOnOff\n      ",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 7
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "OptionsMask": {
                          "type": "string",
                          "description": "LevelControlOptions"
                        },
                        "OptionsOverride": {
                          "type": "string",
                          "description": "LevelControlOptions"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "\n        Change the currrent frequency to the provided one, or a close\n        approximation if the exact provided one is not possible.\n      ",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 8
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "Frequency": {
                          "type": "string",
                          "description": "INT16U"
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        }
      }
    }
  },
  "28": {
    "properties": {
      "28": {
        "title": "Pulse Width Modulation",
        "description": "Cluster to control pulse width modulation",
        "uriVariables": {
          "attribute": {
            "type": "integer",
            "description": "Attrbute to read from the device",
            "oneOf": []
          }
        }
      }
    },
    "actions": {
      "28": {
        "title": "Pulse Width Modulation",
        "description": "Cluster to control pulse width modulation",
        "input": {
          "type": "object",
          "properties": {
            "command": {
              "type": "object",
              "description": "Command to send to the device",
              "oneOf": []
            }
          }
        }
      }
    }
  },
  "29": {
    "properties": {
      "29": {
        "title": "Descriptor",
        "description": "The Descriptor Cluster is meant to replace the support from the Zigbee Device Object (ZDO) for describing a node, its endpoints and clusters.",
        "uriVariables": {
          "attribute": {
            "type": "integer",
            "description": "Attrbute to read from the device",
            "oneOf": [
              {
                "type": "integer",
                "title": "DEVICE_LIST",
                "const": 0
              },
              {
                "type": "integer",
                "title": "SERVER_LIST",
                "const": 1
              },
              {
                "type": "integer",
                "title": "CLIENT_LIST",
                "const": 2
              },
              {
                "type": "integer",
                "title": "PARTS_LIST",
                "const": 3
              }
            ]
          }
        }
      }
    },
    "actions": {
      "29": {
        "title": "Descriptor",
        "description": "The Descriptor Cluster is meant to replace the support from the Zigbee Device Object (ZDO) for describing a node, its endpoints and clusters.",
        "input": {
          "type": "object",
          "properties": {
            "command": {
              "type": "object",
              "description": "Command to send to the device",
              "oneOf": []
            }
          }
        }
      }
    }
  },
  "30": {
    "properties": {
      "30": {
        "title": "Binding",
        "description": "The Binding Cluster is meant to replace the support from the Zigbee Device Object (ZDO) for supporting the binding table.",
        "uriVariables": {
          "attribute": {
            "type": "integer",
            "description": "Attrbute to read from the device",
            "oneOf": [
              {
                "type": "integer",
                "title": "BINDING_LIST",
                "const": 0
              }
            ]
          }
        }
      }
    },
    "actions": {
      "30": {
        "title": "Binding",
        "description": "The Binding Cluster is meant to replace the support from the Zigbee Device Object (ZDO) for supporting the binding table.",
        "input": {
          "type": "object",
          "properties": {
            "command": {
              "type": "object",
              "description": "Command to send to the device",
              "oneOf": []
            }
          }
        }
      }
    }
  },
  "31": {
    "properties": {
      "31": {
        "title": "Access Control",
        "description": "The Access Control Cluster exposes a data model view of a\n      Node's Access Control List (ACL), which codifies the rules used to manage\n      and enforce Access Control for the Node's endpoints and their associated\n      cluster instances.",
        "uriVariables": {
          "attribute": {
            "type": "integer",
            "description": "Attrbute to read from the device",
            "oneOf": [
              {
                "type": "integer",
                "title": "ACL",
                "description": "ACL",
                "const": 0
              },
              {
                "type": "integer",
                "title": "EXTENSION",
                "description": "Extension",
                "const": 1
              },
              {
                "type": "integer",
                "title": "SUBJECTS_PER_ACCESS_CONTROL_ENTRY",
                "description": "SubjectsPerAccessControlEntry",
                "const": 2
              },
              {
                "type": "integer",
                "title": "TARGETS_PER_ACCESS_CONTROL_ENTRY",
                "description": "TargetsPerAccessControlEntry",
                "const": 3
              },
              {
                "type": "integer",
                "title": "ACCESS_CONTROL_ENTRIES_PER_FABRIC",
                "description": "AccessControlEntriesPerFabric",
                "const": 4
              }
            ]
          }
        }
      }
    },
    "actions": {
      "31": {
        "title": "Access Control",
        "description": "The Access Control Cluster exposes a data model view of a\n      Node's Access Control List (ACL), which codifies the rules used to manage\n      and enforce Access Control for the Node's endpoints and their associated\n      cluster instances.",
        "input": {
          "type": "object",
          "properties": {
            "command": {
              "type": "object",
              "description": "Command to send to the device",
              "oneOf": []
            }
          }
        }
      }
    }
  },
  "37": {
    "properties": {
      "37": {
        "title": "Actions",
        "description": "This cluster provides a standardized way for a Node (typically a Bridge, but could be any Node) to expose action information.",
        "uriVariables": {
          "attribute": {
            "type": "integer",
            "description": "Attrbute to read from the device",
            "oneOf": [
              {
                "type": "integer",
                "title": "ACTION_LIST",
                "const": 0
              },
              {
                "type": "integer",
                "title": "ENDPOINT_LIST",
                "const": 1
              },
              {
                "type": "integer",
                "title": "SETUP_URL",
                "const": 2
              }
            ]
          }
        }
      }
    },
    "actions": {
      "37": {
        "title": "Actions",
        "description": "This cluster provides a standardized way for a Node (typically a Bridge, but could be any Node) to expose action information.",
        "input": {
          "type": "object",
          "properties": {
            "command": {
              "type": "object",
              "description": "Command to send to the device",
              "oneOf": [
                {
                  "type": "object",
                  "description": "This command triggers an action (state change) on the involved endpoints.",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 0
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "ActionID": {
                          "type": "string",
                          "description": "INT16U"
                        },
                        "InvokeID": {
                          "type": "string",
                          "description": "INT32U"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "This command triggers an action (state change) on the involved endpoints, with a specified time to transition from the current state to the new state.",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 1
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "ActionID": {
                          "type": "string",
                          "description": "INT16U"
                        },
                        "InvokeID": {
                          "type": "string",
                          "description": "INT32U"
                        },
                        "TransitionTime": {
                          "type": "string",
                          "description": "INT16U"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "This command triggers the commencement of an action on the involved endpoints.",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 2
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "ActionID": {
                          "type": "string",
                          "description": "INT16U"
                        },
                        "InvokeID": {
                          "type": "string",
                          "description": "INT32U"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "This command triggers the commencement of an action (with a duration) on the involved endpoints.",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 3
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "ActionID": {
                          "type": "string",
                          "description": "INT16U"
                        },
                        "InvokeID": {
                          "type": "string",
                          "description": "INT32U"
                        },
                        "Duration": {
                          "type": "string",
                          "description": "INT32U"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "This command stops the ongoing action on the involved endpoints.",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 4
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "ActionID": {
                          "type": "string",
                          "description": "INT16U"
                        },
                        "InvokeID": {
                          "type": "string",
                          "description": "INT32U"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "This command pauses an ongoing action.",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 5
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "ActionID": {
                          "type": "string",
                          "description": "INT16U"
                        },
                        "InvokeID": {
                          "type": "string",
                          "description": "INT32U"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "This command pauses an ongoing action with a duration.",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 6
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "ActionID": {
                          "type": "string",
                          "description": "INT16U"
                        },
                        "InvokeID": {
                          "type": "string",
                          "description": "INT32U"
                        },
                        "Duration": {
                          "type": "string",
                          "description": "INT32U"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "This command resumes a previously paused action.",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 7
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "ActionID": {
                          "type": "string",
                          "description": "INT16U"
                        },
                        "InvokeID": {
                          "type": "string",
                          "description": "INT32U"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "This command enables a certain action or automation.",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 8
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "ActionID": {
                          "type": "string",
                          "description": "INT16U"
                        },
                        "InvokeID": {
                          "type": "string",
                          "description": "INT32U"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "This command enables a certain action or automation with a duration.",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 9
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "ActionID": {
                          "type": "string",
                          "description": "INT16U"
                        },
                        "InvokeID": {
                          "type": "string",
                          "description": "INT32U"
                        },
                        "Duration": {
                          "type": "string",
                          "description": "INT32U"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "This command disables a certain action or automation.",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 10
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "ActionID": {
                          "type": "string",
                          "description": "INT16U"
                        },
                        "InvokeID": {
                          "type": "string",
                          "description": "INT32U"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "This command disables a certain action or automation with a duration.",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 11
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "ActionID": {
                          "type": "string",
                          "description": "INT16U"
                        },
                        "InvokeID": {
                          "type": "string",
                          "description": "INT32U"
                        },
                        "Duration": {
                          "type": "string",
                          "description": "INT32U"
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        }
      }
    }
  },
  "40": {
    "properties": {
      "40": {
        "title": "Basic Information",
        "description": "This cluster provides attributes and events for determining basic information about Nodes, which supports both\n      Commissioning and operational determination of Node characteristics, such as Vendor ID, Product ID and serial number,\n      which apply to the whole Node. Also allows setting user device information such as location.",
        "uriVariables": {
          "attribute": {
            "type": "integer",
            "description": "Attrbute to read from the device",
            "oneOf": [
              {
                "type": "integer",
                "title": "DATA_MODEL_REVISION",
                "const": 0
              },
              {
                "type": "integer",
                "title": "VENDOR_NAME",
                "const": 1
              },
              {
                "type": "integer",
                "title": "VENDOR_ID",
                "const": 2
              },
              {
                "type": "integer",
                "title": "PRODUCT_NAME",
                "const": 3
              },
              {
                "type": "integer",
                "title": "PRODUCT_ID",
                "const": 4
              },
              {
                "type": "integer",
                "title": "NODE_LABEL",
                "description": "NodeLabel",
                "const": 5
              },
              {
                "type": "integer",
                "title": "LOCATION",
                "description": "Location",
                "const": 6
              },
              {
                "type": "integer",
                "title": "HARDWARE_VERSION",
                "const": 7
              },
              {
                "type": "integer",
                "title": "HARDWARE_VERSION_STRING",
                "const": 8
              },
              {
                "type": "integer",
                "title": "SOFTWARE_VERSION",
                "const": 9
              },
              {
                "type": "integer",
                "title": "SOFTWARE_VERSION_STRING",
                "const": 16
              },
              {
                "type": "integer",
                "title": "MANUFACTURING_DATE",
                "const": 17
              },
              {
                "type": "integer",
                "title": "PART_NUMBER",
                "const": 18
              },
              {
                "type": "integer",
                "title": "PRODUCT_URL",
                "const": 19
              },
              {
                "type": "integer",
                "title": "PRODUCT_LABEL",
                "const": 20
              },
              {
                "type": "integer",
                "title": "SERIAL_NUMBER",
                "const": 21
              },
              {
                "type": "integer",
                "title": "LOCAL_CONFIG_DISABLED",
                "description": "LocalConfigDisabled",
                "const": 22
              },
              {
                "type": "integer",
                "title": "REACHABLE",
                "const": 23
              },
              {
                "type": "integer",
                "title": "UNIQUE_ID",
                "const": 24
              },
              {
                "type": "integer",
                "title": "CAPABILITY_MINIMA",
                "const": 25
              }
            ]
          }
        }
      }
    },
    "actions": {
      "40": {
        "title": "Basic Information",
        "description": "This cluster provides attributes and events for determining basic information about Nodes, which supports both\n      Commissioning and operational determination of Node characteristics, such as Vendor ID, Product ID and serial number,\n      which apply to the whole Node. Also allows setting user device information such as location.",
        "input": {
          "type": "object",
          "properties": {
            "command": {
              "type": "object",
              "description": "Command to send to the device",
              "oneOf": []
            }
          }
        }
      }
    }
  },
  "43": {
    "properties": {
      "43": {
        "title": "Localization Configuration",
        "description": "Nodes should be expected to be deployed to any and all regions of the world. These global regions\n      may have differing common languages, units of measurements, and numerical formatting\n      standards. As such, Nodes that visually or audibly convey information need a mechanism by which\n      they can be configured to use a user’s preferred language, units, etc",
        "uriVariables": {
          "attribute": {
            "type": "integer",
            "description": "Attrbute to read from the device",
            "oneOf": [
              {
                "type": "integer",
                "title": "ACTIVE_LOCALE",
                "const": 0
              },
              {
                "type": "integer",
                "title": "SUPPORTED_LOCALES",
                "const": 1
              }
            ]
          }
        }
      }
    },
    "actions": {
      "43": {
        "title": "Localization Configuration",
        "description": "Nodes should be expected to be deployed to any and all regions of the world. These global regions\n      may have differing common languages, units of measurements, and numerical formatting\n      standards. As such, Nodes that visually or audibly convey information need a mechanism by which\n      they can be configured to use a user’s preferred language, units, etc",
        "input": {
          "type": "object",
          "properties": {
            "command": {
              "type": "object",
              "description": "Command to send to the device",
              "oneOf": []
            }
          }
        }
      }
    }
  },
  "44": {
    "properties": {
      "44": {
        "title": "Time Format Localization",
        "description": "Nodes should be expected to be deployed to any and all regions of the world. These global regions\n      may have differing preferences for how dates and times are conveyed. As such, Nodes that visually\n      or audibly convey time information need a mechanism by which they can be configured to use a\n      user’s preferred format.",
        "uriVariables": {
          "attribute": {
            "type": "integer",
            "description": "Attrbute to read from the device",
            "oneOf": [
              {
                "type": "integer",
                "title": "HOUR_FORMAT",
                "const": 0
              },
              {
                "type": "integer",
                "title": "ACTIVE_CALENDAR_TYPE",
                "const": 1
              },
              {
                "type": "integer",
                "title": "SUPPORTED_CALENDAR_TYPES",
                "const": 2
              }
            ]
          }
        }
      }
    },
    "actions": {
      "44": {
        "title": "Time Format Localization",
        "description": "Nodes should be expected to be deployed to any and all regions of the world. These global regions\n      may have differing preferences for how dates and times are conveyed. As such, Nodes that visually\n      or audibly convey time information need a mechanism by which they can be configured to use a\n      user’s preferred format.",
        "input": {
          "type": "object",
          "properties": {
            "command": {
              "type": "object",
              "description": "Command to send to the device",
              "oneOf": []
            }
          }
        }
      }
    }
  },
  "45": {
    "properties": {
      "45": {
        "title": "Unit Localization",
        "description": "Nodes should be expected to be deployed to any and all regions of the world. These global regions\n      may have differing preferences for the units in which values are conveyed in communication to a\n      user. As such, Nodes that visually or audibly convey measurable values to the user need a\n      mechanism by which they can be configured to use a user’s preferred unit.",
        "uriVariables": {
          "attribute": {
            "type": "integer",
            "description": "Attrbute to read from the device",
            "oneOf": [
              {
                "type": "integer",
                "title": "TEMPERATURE_UNIT",
                "const": 0
              }
            ]
          }
        }
      }
    },
    "actions": {
      "45": {
        "title": "Unit Localization",
        "description": "Nodes should be expected to be deployed to any and all regions of the world. These global regions\n      may have differing preferences for the units in which values are conveyed in communication to a\n      user. As such, Nodes that visually or audibly convey measurable values to the user need a\n      mechanism by which they can be configured to use a user’s preferred unit.",
        "input": {
          "type": "object",
          "properties": {
            "command": {
              "type": "object",
              "description": "Command to send to the device",
              "oneOf": []
            }
          }
        }
      }
    }
  },
  "46": {
    "properties": {
      "46": {
        "title": "Power Source Configuration",
        "description": "This cluster is used to describe the configuration and capabilities of a Device's power system.",
        "uriVariables": {
          "attribute": {
            "type": "integer",
            "description": "Attrbute to read from the device",
            "oneOf": [
              {
                "type": "integer",
                "title": "SOURCES",
                "const": 0
              }
            ]
          }
        }
      }
    },
    "actions": {
      "46": {
        "title": "Power Source Configuration",
        "description": "This cluster is used to describe the configuration and capabilities of a Device's power system.",
        "input": {
          "type": "object",
          "properties": {
            "command": {
              "type": "object",
              "description": "Command to send to the device",
              "oneOf": []
            }
          }
        }
      }
    }
  },
  "47": {
    "properties": {
      "47": {
        "title": "Power Source",
        "description": "This cluster is used to describe the configuration and capabilities of a physical power source that provides power to the Node.",
        "uriVariables": {
          "attribute": {
            "type": "integer",
            "description": "Attrbute to read from the device",
            "oneOf": [
              {
                "type": "integer",
                "title": "POWER_SOURCE_STATUS",
                "const": 0
              },
              {
                "type": "integer",
                "title": "POWER_SOURCE_ORDER",
                "const": 1
              },
              {
                "type": "integer",
                "title": "POWER_SOURCE_DESCRIPTION",
                "const": 2
              },
              {
                "type": "integer",
                "title": "POWER_SOURCE_WIRED_ASSESSED_INPUT_VOLTAGE",
                "const": 3
              },
              {
                "type": "integer",
                "title": "POWER_SOURCE_WIRED_ASSESSED_INPUT_FREQUENCY",
                "const": 4
              },
              {
                "type": "integer",
                "title": "POWER_SOURCE_WIRED_CURRENT_TYPE",
                "const": 5
              },
              {
                "type": "integer",
                "title": "POWER_SOURCE_WIRED_ASSESSED_CURRENT",
                "const": 6
              },
              {
                "type": "integer",
                "title": "POWER_SOURCE_WIRED_NOMINAL_VOLTAGE",
                "const": 7
              },
              {
                "type": "integer",
                "title": "POWER_SOURCE_WIRED_MAXIMUM_CURRENT",
                "const": 8
              },
              {
                "type": "integer",
                "title": "POWER_SOURCE_WIRED_PRESENT",
                "const": 9
              },
              {
                "type": "integer",
                "title": "POWER_SOURCE_ACTIVE_WIRED_FAULTS",
                "const": 10
              },
              {
                "type": "integer",
                "title": "POWER_SOURCE_BAT_VOLTAGE",
                "const": 11
              },
              {
                "type": "integer",
                "title": "POWER_SOURCE_BAT_PERCENT_REMAINING",
                "const": 12
              },
              {
                "type": "integer",
                "title": "POWER_SOURCE_BAT_TIME_REMAINING",
                "const": 13
              },
              {
                "type": "integer",
                "title": "POWER_SOURCE_BAT_CHARGE_LEVEL",
                "const": 14
              },
              {
                "type": "integer",
                "title": "POWER_SOURCE_BAT_REPLACEMENT_NEEDED",
                "const": 15
              },
              {
                "type": "integer",
                "title": "POWER_SOURCE_BAT_REPLACEABILITY",
                "const": 16
              },
              {
                "type": "integer",
                "title": "POWER_SOURCE_BAT_PRESENT",
                "const": 17
              },
              {
                "type": "integer",
                "title": "POWER_SOURCE_ACTIVE_BAT_FAULTS",
                "const": 18
              },
              {
                "type": "integer",
                "title": "POWER_SOURCE_BAT_REPLACEMENT_DESCRIPTION",
                "const": 19
              },
              {
                "type": "integer",
                "title": "POWER_SOURCE_BAT_COMMON_DESIGNATION",
                "const": 20
              },
              {
                "type": "integer",
                "title": "POWER_SOURCE_BAT_ANSI_DESIGNATION",
                "const": 21
              },
              {
                "type": "integer",
                "title": "POWER_SOURCE_BAT_IEC_DESIGNATION",
                "const": 22
              },
              {
                "type": "integer",
                "title": "POWER_SOURCE_BAT_APPROVED_CHEMISTRY",
                "const": 23
              },
              {
                "type": "integer",
                "title": "POWER_SOURCE_BAT_CAPACITY",
                "const": 24
              },
              {
                "type": "integer",
                "title": "POWER_SOURCE_BAT_QUANTITY",
                "const": 25
              },
              {
                "type": "integer",
                "title": "POWER_SOURCE_BAT_CHARGE_STATE",
                "const": 26
              },
              {
                "type": "integer",
                "title": "POWER_SOURCE_BAT_TIME_TO_FULL_CHARGE",
                "const": 27
              },
              {
                "type": "integer",
                "title": "POWER_SOURCE_BAT_FUNCTIONAL_WHILE_CHARGING",
                "const": 28
              },
              {
                "type": "integer",
                "title": "POWER_SOURCE_BAT_CHARGING_CURRENT",
                "const": 29
              },
              {
                "type": "integer",
                "title": "POWER_SOURCE_ACTIVE_BAT_CHARGE_FAULTS",
                "const": 30
              }
            ]
          }
        }
      }
    },
    "actions": {
      "47": {
        "title": "Power Source",
        "description": "This cluster is used to describe the configuration and capabilities of a physical power source that provides power to the Node.",
        "input": {
          "type": "object",
          "properties": {
            "command": {
              "type": "object",
              "description": "Command to send to the device",
              "oneOf": []
            }
          }
        }
      }
    }
  },
  "48": {
    "properties": {
      "48": {
        "title": "General Commissioning",
        "description": "This cluster is used to manage global aspects of the Commissioning flow.",
        "uriVariables": {
          "attribute": {
            "type": "integer",
            "description": "Attrbute to read from the device",
            "oneOf": [
              {
                "type": "integer",
                "title": "BREADCRUMB",
                "description": "Breadcrumb",
                "const": 0
              },
              {
                "type": "integer",
                "title": "BASIC_COMMISSIONING_INFO",
                "const": 1
              },
              {
                "type": "integer",
                "title": "REGULATORY_CONFIG",
                "const": 2
              },
              {
                "type": "integer",
                "title": "LOCATION_CAPABILITY",
                "const": 3
              },
              {
                "type": "integer",
                "title": "SUPPORTS_CONCURRENT_CONNECTION",
                "const": 4
              }
            ]
          }
        }
      }
    },
    "actions": {
      "48": {
        "title": "General Commissioning",
        "description": "This cluster is used to manage global aspects of the Commissioning flow.",
        "input": {
          "type": "object",
          "properties": {
            "command": {
              "type": "object",
              "description": "Command to send to the device",
              "oneOf": [
                {
                  "type": "object",
                  "description": "Arm the persistent fail-safe timer with an expiry time of now + ExpiryLengthSeconds using device clock",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 0
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "ExpiryLengthSeconds": {
                          "type": "string",
                          "description": "INT16U"
                        },
                        "Breadcrumb": {
                          "type": "string",
                          "description": "INT64U"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "Success/failure response for ArmFailSafe command",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 1
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "ErrorCode": {
                          "type": "string",
                          "description": "CommissioningError"
                        },
                        "DebugText": {
                          "type": "string",
                          "description": "CHAR_STRING"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "Set the regulatory configuration to be used during commissioning",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 2
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "NewRegulatoryConfig": {
                          "type": "string",
                          "description": "RegulatoryLocationType"
                        },
                        "CountryCode": {
                          "type": "string",
                          "description": "CHAR_STRING"
                        },
                        "Breadcrumb": {
                          "type": "string",
                          "description": "INT64U"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "Success/failure response for SetRegulatoryConfig command",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 3
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "ErrorCode": {
                          "type": "string",
                          "description": "CommissioningError"
                        },
                        "DebugText": {
                          "type": "string",
                          "description": "CHAR_STRING"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "Signals the Server that the Client has successfully completed all steps of Commissioning/Recofiguration needed during fail-safe period.",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 4
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "Indicates to client whether CommissioningComplete command succeeded",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 5
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "ErrorCode": {
                          "type": "string",
                          "description": "CommissioningError"
                        },
                        "DebugText": {
                          "type": "string",
                          "description": "CHAR_STRING"
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        }
      }
    }
  },
  "49": {
    "properties": {
      "49": {
        "title": "Network Commissioning",
        "description": "Functionality to configure, enable, disable network credentials and access on a Matter device.",
        "uriVariables": {
          "attribute": {
            "type": "integer",
            "description": "Attrbute to read from the device",
            "oneOf": [
              {
                "type": "integer",
                "title": "MAX_NETWORKS",
                "description": "MaxNetworks",
                "const": 0
              },
              {
                "type": "integer",
                "title": "NETWORKS",
                "description": "Networks",
                "const": 1
              },
              {
                "type": "integer",
                "title": "SCAN_MAX_TIME_SECONDS",
                "const": 2
              },
              {
                "type": "integer",
                "title": "CONNECT_MAX_TIME_SECONDS",
                "const": 3
              },
              {
                "type": "integer",
                "title": "INTERFACE_ENABLED",
                "description": "InterfaceEnabled",
                "const": 4
              },
              {
                "type": "integer",
                "title": "LAST_NETWORKING_STATUS",
                "description": "LastNetworkingStatus",
                "const": 5
              },
              {
                "type": "integer",
                "title": "LAST_NETWORK_ID",
                "description": "LastNetworkID",
                "const": 6
              },
              {
                "type": "integer",
                "title": "LAST_CONNECT_ERROR_VALUE",
                "description": "LastConnectErrorValue",
                "const": 7
              }
            ]
          }
        }
      }
    },
    "actions": {
      "49": {
        "title": "Network Commissioning",
        "description": "Functionality to configure, enable, disable network credentials and access on a Matter device.",
        "input": {
          "type": "object",
          "properties": {
            "command": {
              "type": "object",
              "description": "Command to send to the device",
              "oneOf": [
                {
                  "type": "object",
                  "description": "Detemine the set of networks the device sees as available.",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 0
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "SSID": {
                          "type": "string",
                          "description": "OCTET_STRING"
                        },
                        "Breadcrumb": {
                          "type": "string",
                          "description": "INT64U"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "Relay the set of networks the device sees as available back to the client.",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 1
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "NetworkingStatus": {
                          "type": "string",
                          "description": "NetworkCommissioningStatus"
                        },
                        "DebugText": {
                          "type": "string",
                          "description": "CHAR_STRING"
                        },
                        "WiFiScanResults": {
                          "type": "string",
                          "description": "WiFiInterfaceScanResult"
                        },
                        "ThreadScanResults": {
                          "type": "string",
                          "description": "ThreadInterfaceScanResult"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "Add or update the credentials for a given Wi-Fi network.",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 2
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "SSID": {
                          "type": "string",
                          "description": "OCTET_STRING"
                        },
                        "Credentials": {
                          "type": "string",
                          "description": "OCTET_STRING"
                        },
                        "breadcrumb": {
                          "type": "string",
                          "description": "INT64U"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "Add or update the credentials for a given Thread network.",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 3
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "OperationalDataset": {
                          "type": "string",
                          "description": "OCTET_STRING"
                        },
                        "Breadcrumb": {
                          "type": "string",
                          "description": "INT64U"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "Remove the definition of a given network (including its credentials).",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 4
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "NetworkID": {
                          "type": "string",
                          "description": "OCTET_STRING"
                        },
                        "Breadcrumb": {
                          "type": "string",
                          "description": "INT64U"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "Response command for various commands that add/remove/modify network credentials.",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 5
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "NetworkingStatus": {
                          "type": "string",
                          "description": "NetworkCommissioningStatus"
                        },
                        "DebugText": {
                          "type": "string",
                          "description": "CHAR_STRING"
                        },
                        "NetworkIndex": {
                          "type": "string",
                          "description": "INT8U"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "Connect to the specified network, using previously-defined credentials.",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 6
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "NetworkID": {
                          "type": "string",
                          "description": "OCTET_STRING"
                        },
                        "Breadcrumb": {
                          "type": "string",
                          "description": "INT64U"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "Command that indicates whether we have succcessfully connected to a network.",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 7
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "NetworkingStatus": {
                          "type": "string",
                          "description": "NetworkCommissioningStatus"
                        },
                        "DebugText": {
                          "type": "string",
                          "description": "CHAR_STRING"
                        },
                        "ErrorValue": {
                          "type": "string",
                          "description": "INT32S"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "Modify the order in which networks will be presented in the Networks attribute.",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 8
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "NetworkID": {
                          "type": "string",
                          "description": "OCTET_STRING"
                        },
                        "NetworkIndex": {
                          "type": "string",
                          "description": "INT8U"
                        },
                        "Breadcrumb": {
                          "type": "string",
                          "description": "INT64U"
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        }
      }
    }
  },
  "50": {
    "properties": {
      "50": {
        "title": "Diagnostic Logs",
        "description": "The cluster provides commands for retrieving unstructured diagnostic logs from a Node that may be used to aid in diagnostics.",
        "uriVariables": {
          "attribute": {
            "type": "integer",
            "description": "Attrbute to read from the device",
            "oneOf": []
          }
        }
      }
    },
    "actions": {
      "50": {
        "title": "Diagnostic Logs",
        "description": "The cluster provides commands for retrieving unstructured diagnostic logs from a Node that may be used to aid in diagnostics.",
        "input": {
          "type": "object",
          "properties": {
            "command": {
              "type": "object",
              "description": "Command to send to the device",
              "oneOf": [
                {
                  "type": "object",
                  "description": "Retrieving diagnostic logs from a Node",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 0
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "Intent": {
                          "type": "string",
                          "description": "LogsIntent"
                        },
                        "RequestedProtocol": {
                          "type": "string",
                          "description": "LogsTransferProtocol"
                        },
                        "TransferFileDesignator": {
                          "type": "string",
                          "description": "OCTET_STRING"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "Response to the RetrieveLogsRequest",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 1
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "Status": {
                          "type": "string",
                          "description": "LogsStatus"
                        },
                        "LogContent": {
                          "type": "string",
                          "description": "OCTET_STRING"
                        },
                        "UTCTimeStamp": {
                          "type": "string",
                          "description": "epoch_s"
                        },
                        "TimeSinceBoot": {
                          "type": "string",
                          "description": "INT32U"
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        }
      }
    }
  },
  "51": {
    "properties": {
      "51": {
        "title": "General Diagnostics",
        "description": "The General Diagnostics Cluster, along with other diagnostics clusters, provide a means to acquire standardized diagnostics metrics that MAY be used by a Node to assist a user or Administrative Node in diagnosing potential problems.",
        "uriVariables": {
          "attribute": {
            "type": "integer",
            "description": "Attrbute to read from the device",
            "oneOf": [
              {
                "type": "integer",
                "title": "NETWORK_INTERFACES",
                "const": 0
              },
              {
                "type": "integer",
                "title": "REBOOT_COUNT",
                "const": 1
              },
              {
                "type": "integer",
                "title": "UP_TIME",
                "const": 2
              },
              {
                "type": "integer",
                "title": "TOTAL_OPERATIONAL_HOURS",
                "const": 3
              },
              {
                "type": "integer",
                "title": "BOOT_REASONS",
                "const": 4
              },
              {
                "type": "integer",
                "title": "ACTIVE_HARDWARE_FAULTS",
                "const": 5
              },
              {
                "type": "integer",
                "title": "ACTIVE_RADIO_FAULTS",
                "const": 6
              },
              {
                "type": "integer",
                "title": "ACTIVE_NETWORK_FAULTS",
                "const": 7
              },
              {
                "type": "integer",
                "title": "TEST_EVENT_TRIGGERS_ENABLED",
                "const": 8
              }
            ]
          }
        }
      }
    },
    "actions": {
      "51": {
        "title": "General Diagnostics",
        "description": "The General Diagnostics Cluster, along with other diagnostics clusters, provide a means to acquire standardized diagnostics metrics that MAY be used by a Node to assist a user or Administrative Node in diagnosing potential problems.",
        "input": {
          "type": "object",
          "properties": {
            "command": {
              "type": "object",
              "description": "Command to send to the device",
              "oneOf": [
                {
                  "type": "object",
                  "description": "Provide a means for certification tests to trigger some test-plan-specific events",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 0
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "EnableKey": {
                          "type": "string",
                          "description": "OCTET_STRING"
                        },
                        "EventTrigger": {
                          "type": "string",
                          "description": "INT64U"
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        }
      }
    }
  },
  "52": {
    "properties": {
      "52": {
        "title": "Software Diagnostics",
        "description": "The Software Diagnostics Cluster provides a means to acquire standardized diagnostics metrics that MAY be used by a Node to assist a user or Administrative Node in diagnosing potential problems.",
        "uriVariables": {
          "attribute": {
            "type": "integer",
            "description": "Attrbute to read from the device",
            "oneOf": [
              {
                "type": "integer",
                "title": "THREAD_METRICS",
                "const": 0
              },
              {
                "type": "integer",
                "title": "CURRENT_HEAP_FREE",
                "const": 1
              },
              {
                "type": "integer",
                "title": "CURRENT_HEAP_USED",
                "const": 2
              },
              {
                "type": "integer",
                "title": "CURRENT_HEAP_HIGH_WATERMARK",
                "const": 3
              }
            ]
          }
        }
      }
    },
    "actions": {
      "52": {
        "title": "Software Diagnostics",
        "description": "The Software Diagnostics Cluster provides a means to acquire standardized diagnostics metrics that MAY be used by a Node to assist a user or Administrative Node in diagnosing potential problems.",
        "input": {
          "type": "object",
          "properties": {
            "command": {
              "type": "object",
              "description": "Command to send to the device",
              "oneOf": [
                {
                  "type": "object",
                  "description": "Reception of this command SHALL reset the values: The StackFreeMinimum field of the ThreadMetrics attribute, CurrentHeapHighWaterMark attribute.",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 0
                    }
                  }
                }
              ]
            }
          }
        }
      }
    }
  },
  "53": {
    "properties": {
      "53": {
        "title": "Thread Network Diagnostics",
        "description": "The Thread Network Diagnostics Cluster provides a means to acquire standardized diagnostics metrics that MAY be used by a Node to assist a user or Administrative Node in diagnosing potential problems",
        "uriVariables": {
          "attribute": {
            "type": "integer",
            "description": "Attrbute to read from the device",
            "oneOf": [
              {
                "type": "integer",
                "title": "CHANNEL",
                "const": 0
              },
              {
                "type": "integer",
                "title": "ROUTING_ROLE",
                "const": 1
              },
              {
                "type": "integer",
                "title": "NETWORK_NAME",
                "const": 2
              },
              {
                "type": "integer",
                "title": "DIAG_PAN_ID",
                "const": 3
              },
              {
                "type": "integer",
                "title": "DIAG_EXTENDED_PAN_ID",
                "const": 4
              },
              {
                "type": "integer",
                "title": "MESH_LOCAL_PREFIX",
                "const": 5
              },
              {
                "type": "integer",
                "title": "DIAG_OVERRUN_COUNT",
                "const": 6
              },
              {
                "type": "integer",
                "title": "NEIGHBOR_TABLE",
                "const": 7
              },
              {
                "type": "integer",
                "title": "ROUTE_TABLE",
                "const": 8
              },
              {
                "type": "integer",
                "title": "PARTITION_ID",
                "const": 9
              },
              {
                "type": "integer",
                "title": "WEIGHTING",
                "const": 10
              },
              {
                "type": "integer",
                "title": "DATA_VERSION",
                "const": 11
              },
              {
                "type": "integer",
                "title": "STABLE_DATA_VERSION",
                "const": 12
              },
              {
                "type": "integer",
                "title": "LEADER_ROUTER_ID",
                "const": 13
              },
              {
                "type": "integer",
                "title": "DETACHED_ROLE_COUNT",
                "const": 14
              },
              {
                "type": "integer",
                "title": "CHILD_ROLE_COUNT",
                "const": 15
              },
              {
                "type": "integer",
                "title": "ROUTER_ROLE_COUNT",
                "const": 16
              },
              {
                "type": "integer",
                "title": "LEADER_ROLE_COUNT",
                "const": 17
              },
              {
                "type": "integer",
                "title": "ATTACH_ATTEMPT_COUNT",
                "const": 18
              },
              {
                "type": "integer",
                "title": "PARTITION_ID_CHANGE_COUNT",
                "const": 19
              },
              {
                "type": "integer",
                "title": "BETTER_PARTITION_ATTACH_ATTEMPT_COUNT",
                "const": 20
              },
              {
                "type": "integer",
                "title": "PARENT_CHANGE_COUNT",
                "const": 21
              },
              {
                "type": "integer",
                "title": "TX_TOTAL_COUNT",
                "const": 22
              },
              {
                "type": "integer",
                "title": "TX_UNICAST_COUNT",
                "const": 23
              },
              {
                "type": "integer",
                "title": "TX_BROADCAST_COUNT",
                "const": 24
              },
              {
                "type": "integer",
                "title": "TX_ACK_REQUESTED_COUNT",
                "const": 25
              },
              {
                "type": "integer",
                "title": "TX_ACKED_COUNT",
                "const": 26
              },
              {
                "type": "integer",
                "title": "TX_NO_ACK_REQUESTED_COUNT",
                "const": 27
              },
              {
                "type": "integer",
                "title": "TX_DATA_COUNT",
                "const": 28
              },
              {
                "type": "integer",
                "title": "TX_DATA_POLL_COUNT",
                "const": 29
              },
              {
                "type": "integer",
                "title": "TX_BEACON_COUNT",
                "const": 30
              },
              {
                "type": "integer",
                "title": "TX_BEACON_REQUEST_COUNT",
                "const": 31
              },
              {
                "type": "integer",
                "title": "TX_OTHER_COUNT",
                "const": 32
              },
              {
                "type": "integer",
                "title": "TX_RETRY_COUNT",
                "const": 33
              },
              {
                "type": "integer",
                "title": "TX_DIRECT_MAX_RETRY_EXPIRY_COUNT",
                "const": 34
              },
              {
                "type": "integer",
                "title": "TX_INDIRECT_MAX_RETRY_EXPIRY_COUNT",
                "const": 35
              },
              {
                "type": "integer",
                "title": "TX_ERR_CCA_COUNT",
                "const": 36
              },
              {
                "type": "integer",
                "title": "TX_ERR_ABORT_COUNT",
                "const": 37
              },
              {
                "type": "integer",
                "title": "TX_ERR_BUSY_CHANNEL_COUNT",
                "const": 38
              },
              {
                "type": "integer",
                "title": "RX_TOTAL_COUNT",
                "const": 39
              },
              {
                "type": "integer",
                "title": "RX_UNICAST_COUNT",
                "const": 40
              },
              {
                "type": "integer",
                "title": "RX_BROADCAST_COUNT",
                "const": 41
              },
              {
                "type": "integer",
                "title": "RX_DATA_COUNT",
                "const": 42
              },
              {
                "type": "integer",
                "title": "RX_DATA_POLL_COUNT",
                "const": 43
              },
              {
                "type": "integer",
                "title": "RX_BEACON_COUNT",
                "const": 44
              },
              {
                "type": "integer",
                "title": "RX_BEACON_REQUEST_COUNT",
                "const": 45
              },
              {
                "type": "integer",
                "title": "RX_OTHER_COUNT",
                "const": 46
              },
              {
                "type": "integer",
                "title": "RX_ADDRESS_FILTERED_COUNT",
                "const": 47
              },
              {
                "type": "integer",
                "title": "RX_DESTADDR_FILTERED_COUNT",
                "const": 48
              },
              {
                "type": "integer",
                "title": "RX_DUPLICATED_COUNT",
                "const": 49
              },
              {
                "type": "integer",
                "title": "RX_ERR_NO_FRAME_COUNT",
                "const": 50
              },
              {
                "type": "integer",
                "title": "RX_ERR_UNKNOWN_NEIGHBOR_COUNT",
                "const": 51
              },
              {
                "type": "integer",
                "title": "RX_ERR_INVALID_SRC_ADDR_COUNT",
                "const": 52
              },
              {
                "type": "integer",
                "title": "RX_ERR_SEC_COUNT",
                "const": 53
              },
              {
                "type": "integer",
                "title": "RX_ERR_FCS_COUNT",
                "const": 54
              },
              {
                "type": "integer",
                "title": "RX_ERR_OTHER_COUNT",
                "const": 55
              },
              {
                "type": "integer",
                "title": "ACTIVE_TIMESTAMP",
                "const": 56
              },
              {
                "type": "integer",
                "title": "PENDING_TIMESTAMP",
                "const": 57
              },
              {
                "type": "integer",
                "title": "DELAY",
                "const": 58
              },
              {
                "type": "integer",
                "title": "SECURITY_POLICY",
                "const": 59
              },
              {
                "type": "integer",
                "title": "DIAG_CHANNEL_MASK",
                "const": 60
              },
              {
                "type": "integer",
                "title": "OPERATIONAL_DATASET_COMPONENTS",
                "const": 61
              },
              {
                "type": "integer",
                "title": "ACTIVE_THREAD_NETWORK_FAULTS",
                "const": 62
              }
            ]
          }
        }
      }
    },
    "actions": {
      "53": {
        "title": "Thread Network Diagnostics",
        "description": "The Thread Network Diagnostics Cluster provides a means to acquire standardized diagnostics metrics that MAY be used by a Node to assist a user or Administrative Node in diagnosing potential problems",
        "input": {
          "type": "object",
          "properties": {
            "command": {
              "type": "object",
              "description": "Command to send to the device",
              "oneOf": [
                {
                  "type": "object",
                  "description": "Reception of this command SHALL reset the OverrunCount attributes to 0",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 0
                    }
                  }
                }
              ]
            }
          }
        }
      }
    }
  },
  "54": {
    "properties": {
      "54": {
        "title": "WiFi Network Diagnostics",
        "description": "The Wi-Fi Network Diagnostics Cluster provides a means to acquire standardized diagnostics metrics that MAY be used by a Node to assist a user or Administrative Node in diagnosing potential problems.",
        "uriVariables": {
          "attribute": {
            "type": "integer",
            "description": "Attrbute to read from the device",
            "oneOf": [
              {
                "type": "integer",
                "title": "BSSID",
                "const": 0
              },
              {
                "type": "integer",
                "title": "SECURITY_TYPE",
                "const": 1
              },
              {
                "type": "integer",
                "title": "WIFI_VERSION",
                "const": 2
              },
              {
                "type": "integer",
                "title": "CHANNEL_NUMBER",
                "const": 3
              },
              {
                "type": "integer",
                "title": "RSSI",
                "const": 4
              },
              {
                "type": "integer",
                "title": "BEACON_LOST_COUNT",
                "const": 5
              },
              {
                "type": "integer",
                "title": "BEACON_RX_COUNT",
                "const": 6
              },
              {
                "type": "integer",
                "title": "PACKET_MULTICAST_RX_COUNT",
                "const": 7
              },
              {
                "type": "integer",
                "title": "PACKET_MULTICAST_TX_COUNT",
                "const": 8
              },
              {
                "type": "integer",
                "title": "PACKET_UNICAST_RX_COUNT",
                "const": 9
              },
              {
                "type": "integer",
                "title": "PACKET_UNICAST_TX_COUNT",
                "const": 10
              },
              {
                "type": "integer",
                "title": "CURRENT_MAX_RATE",
                "const": 11
              },
              {
                "type": "integer",
                "title": "OVERRUN_COUNT",
                "const": 12
              }
            ]
          }
        }
      }
    },
    "actions": {
      "54": {
        "title": "WiFi Network Diagnostics",
        "description": "The Wi-Fi Network Diagnostics Cluster provides a means to acquire standardized diagnostics metrics that MAY be used by a Node to assist a user or Administrative Node in diagnosing potential problems.",
        "input": {
          "type": "object",
          "properties": {
            "command": {
              "type": "object",
              "description": "Command to send to the device",
              "oneOf": [
                {
                  "type": "object",
                  "description": "Reception of this command SHALL reset the Breacon and Packet related count attributes to 0",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 0
                    }
                  }
                }
              ]
            }
          }
        }
      }
    }
  },
  "55": {
    "properties": {
      "55": {
        "title": "Ethernet Network Diagnostics",
        "description": "The Ethernet Network Diagnostics Cluster provides a means to acquire standardized diagnostics metrics that MAY be used by a Node to assist a user or Administrative Node in diagnosing potential problems.",
        "uriVariables": {
          "attribute": {
            "type": "integer",
            "description": "Attrbute to read from the device",
            "oneOf": [
              {
                "type": "integer",
                "title": "PHY_RATE",
                "const": 0
              },
              {
                "type": "integer",
                "title": "FULL_DUPLEX",
                "const": 1
              },
              {
                "type": "integer",
                "title": "PACKET_RX_COUNT",
                "const": 2
              },
              {
                "type": "integer",
                "title": "PACKET_TX_COUNT",
                "const": 3
              },
              {
                "type": "integer",
                "title": "TX_ERR_COUNT",
                "const": 4
              },
              {
                "type": "integer",
                "title": "COLLISION_COUNT",
                "const": 5
              },
              {
                "type": "integer",
                "title": "ETHERNET_OVERRUN_COUNT",
                "const": 6
              },
              {
                "type": "integer",
                "title": "CARRIER_DETECT",
                "const": 7
              },
              {
                "type": "integer",
                "title": "TIME_SINCE_RESET",
                "const": 8
              }
            ]
          }
        }
      }
    },
    "actions": {
      "55": {
        "title": "Ethernet Network Diagnostics",
        "description": "The Ethernet Network Diagnostics Cluster provides a means to acquire standardized diagnostics metrics that MAY be used by a Node to assist a user or Administrative Node in diagnosing potential problems.",
        "input": {
          "type": "object",
          "properties": {
            "command": {
              "type": "object",
              "description": "Command to send to the device",
              "oneOf": [
                {
                  "type": "object",
                  "description": "Reception of this command SHALL reset the attributes: PacketRxCount, PacketTxCount, TxErrCount, CollisionCount, OverrunCount to 0",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 0
                    }
                  }
                }
              ]
            }
          }
        }
      }
    }
  },
  "56": {
    "properties": {
      "56": {
        "title": "Time Synchronization",
        "description": "Accurate time is required for a number of reasons, including scheduling, display and validating\nsecurity materials.",
        "uriVariables": {
          "attribute": {
            "type": "integer",
            "description": "Attrbute to read from the device",
            "oneOf": [
              {
                "type": "integer",
                "title": "UTC_TIME",
                "const": 0
              },
              {
                "type": "integer",
                "title": "GRANULARITY",
                "const": 1
              },
              {
                "type": "integer",
                "title": "TIME_SOURCE",
                "const": 2
              },
              {
                "type": "integer",
                "title": "TRUSTED_TIME_NODE_ID",
                "description": "TrustedTimeNodeId",
                "const": 3
              },
              {
                "type": "integer",
                "title": "DEFAULT_NTP",
                "description": "DefaultNtp",
                "const": 4
              },
              {
                "type": "integer",
                "title": "TIME_ZONE",
                "description": "TimeZone",
                "const": 5
              },
              {
                "type": "integer",
                "title": "DST_OFFSET",
                "description": "DstOffset",
                "const": 6
              },
              {
                "type": "integer",
                "title": "LOCAL_TIME",
                "const": 7
              },
              {
                "type": "integer",
                "title": "TIME_ZONE_DATABASE",
                "const": 8
              },
              {
                "type": "integer",
                "title": "NTP_SERVER_PORT",
                "const": 9
              }
            ]
          }
        }
      }
    },
    "actions": {
      "56": {
        "title": "Time Synchronization",
        "description": "Accurate time is required for a number of reasons, including scheduling, display and validating\nsecurity materials.",
        "input": {
          "type": "object",
          "properties": {
            "command": {
              "type": "object",
              "description": "Command to send to the device",
              "oneOf": [
                {
                  "type": "object",
                  "description": "Upon receipt of this command, the server MAY update its UTCTime Attribute to match the time specified in the command",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 0
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "UtcTime": {
                          "type": "string",
                          "description": "epoch_us"
                        },
                        "Granularity": {
                          "type": "string",
                          "description": "GranularityEnum"
                        },
                        "TimeSource": {
                          "type": "string",
                          "description": "TimeSourceEnum"
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        }
      }
    }
  },
  "57": {
    "properties": {
      "57": {
        "title": "Bridged Device Basic Information",
        "description": "This Cluster serves two purposes towards a Node communicating with a Bridge: indicate that the functionality on\n          the Endpoint where it is placed (and its Parts) is bridged from a non-CHIP technology; and provide a centralized\n          collection of attributes that the Node MAY collect to aid in conveying information regarding the Bridged Device to a user,\n          such as the vendor name, the model name, or user-assigned name.",
        "uriVariables": {
          "attribute": {
            "type": "integer",
            "description": "Attrbute to read from the device",
            "oneOf": [
              {
                "type": "integer",
                "title": "VENDOR_NAME",
                "const": 1
              },
              {
                "type": "integer",
                "title": "VENDOR_ID",
                "const": 2
              },
              {
                "type": "integer",
                "title": "PRODUCT_NAME",
                "const": 3
              },
              {
                "type": "integer",
                "title": "NODE_LABEL",
                "const": 5
              },
              {
                "type": "integer",
                "title": "HARDWARE_VERSION",
                "const": 7
              },
              {
                "type": "integer",
                "title": "HARDWARE_VERSION_STRING",
                "const": 8
              },
              {
                "type": "integer",
                "title": "SOFTWARE_VERSION",
                "const": 9
              },
              {
                "type": "integer",
                "title": "SOFTWARE_VERSION_STRING",
                "const": 16
              },
              {
                "type": "integer",
                "title": "MANUFACTURING_DATE",
                "const": 17
              },
              {
                "type": "integer",
                "title": "PART_NUMBER",
                "const": 18
              },
              {
                "type": "integer",
                "title": "PRODUCT_URL",
                "const": 19
              },
              {
                "type": "integer",
                "title": "PRODUCT_LABEL",
                "const": 20
              },
              {
                "type": "integer",
                "title": "SERIAL_NUMBER",
                "const": 21
              },
              {
                "type": "integer",
                "title": "REACHABLE",
                "const": 23
              },
              {
                "type": "integer",
                "title": "UNIQUE_ID",
                "const": 24
              }
            ]
          }
        }
      }
    },
    "actions": {
      "57": {
        "title": "Bridged Device Basic Information",
        "description": "This Cluster serves two purposes towards a Node communicating with a Bridge: indicate that the functionality on\n          the Endpoint where it is placed (and its Parts) is bridged from a non-CHIP technology; and provide a centralized\n          collection of attributes that the Node MAY collect to aid in conveying information regarding the Bridged Device to a user,\n          such as the vendor name, the model name, or user-assigned name.",
        "input": {
          "type": "object",
          "properties": {
            "command": {
              "type": "object",
              "description": "Command to send to the device",
              "oneOf": []
            }
          }
        }
      }
    }
  },
  "59": {
    "properties": {
      "59": {
        "title": "Switch",
        "description": "This cluster exposes interactions with a switch device, for the purpose of using those interactions by other devices.\nTwo types of switch devices are supported: latching switch (e.g. rocker switch) and momentary switch (e.g. push button), distinguished with their feature flags.\nInteractions with the switch device are exposed as attributes (for the latching switch) and as events (for both types of switches). An interested party MAY subscribe to these attributes/events and thus be informed of the interactions, and can perform actions based on this, for example by sending commands to perform an action such as controlling a light or a window shade.",
        "uriVariables": {
          "attribute": {
            "type": "integer",
            "description": "Attrbute to read from the device",
            "oneOf": [
              {
                "type": "integer",
                "title": "NUMBER_OF_POSITIONS",
                "const": 0
              },
              {
                "type": "integer",
                "title": "CURRENT_POSITION",
                "const": 1
              },
              {
                "type": "integer",
                "title": "MULTI_PRESS_MAX",
                "const": 2
              }
            ]
          }
        }
      }
    },
    "actions": {
      "59": {
        "title": "Switch",
        "description": "This cluster exposes interactions with a switch device, for the purpose of using those interactions by other devices.\nTwo types of switch devices are supported: latching switch (e.g. rocker switch) and momentary switch (e.g. push button), distinguished with their feature flags.\nInteractions with the switch device are exposed as attributes (for the latching switch) and as events (for both types of switches). An interested party MAY subscribe to these attributes/events and thus be informed of the interactions, and can perform actions based on this, for example by sending commands to perform an action such as controlling a light or a window shade.",
        "input": {
          "type": "object",
          "properties": {
            "command": {
              "type": "object",
              "description": "Command to send to the device",
              "oneOf": []
            }
          }
        }
      }
    }
  },
  "60": {
    "properties": {
      "60": {
        "title": "Administrator Commissioning",
        "description": "Commands to trigger a Node to allow a new Administrator to commission it.",
        "uriVariables": {
          "attribute": {
            "type": "integer",
            "description": "Attrbute to read from the device",
            "oneOf": [
              {
                "type": "integer",
                "title": "WINDOW_STATUS",
                "const": 0
              },
              {
                "type": "integer",
                "title": "ADMIN_FABRIC_INDEX",
                "const": 1
              },
              {
                "type": "integer",
                "title": "ADMIN_VENDOR_ID",
                "const": 2
              }
            ]
          }
        }
      }
    },
    "actions": {
      "60": {
        "title": "Administrator Commissioning",
        "description": "Commands to trigger a Node to allow a new Administrator to commission it.",
        "input": {
          "type": "object",
          "properties": {
            "command": {
              "type": "object",
              "description": "Command to send to the device",
              "oneOf": [
                {
                  "type": "object",
                  "description": "This command is used by a current Administrator to instruct a Node to go into commissioning mode using enhanced commissioning method.",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 0
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "CommissioningTimeout": {
                          "type": "string",
                          "description": "INT16U"
                        },
                        "PAKEPasscodeVerifier": {
                          "type": "string",
                          "description": "OCTET_STRING"
                        },
                        "Discriminator": {
                          "type": "string",
                          "description": "INT16U"
                        },
                        "Iterations": {
                          "type": "string",
                          "description": "INT32U"
                        },
                        "Salt": {
                          "type": "string",
                          "description": "OCTET_STRING"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "This command is used by a current Administrator to instruct a Node to go into commissioning mode using basic commissioning method, if the node supports it.",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 1
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "CommissioningTimeout": {
                          "type": "string",
                          "description": "INT16U"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "This command is used by a current Administrator to instruct a Node to revoke any active Open Commissioning Window or Open Basic Commissioning Window command.",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 2
                    }
                  }
                }
              ]
            }
          }
        }
      }
    }
  },
  "62": {
    "properties": {
      "62": {
        "title": "Operational Credentials",
        "description": "This cluster is used to add or remove Operational Credentials on a Commissionee or Node, as well as manage the associated Fabrics.",
        "uriVariables": {
          "attribute": {
            "type": "integer",
            "description": "Attrbute to read from the device",
            "oneOf": [
              {
                "type": "integer",
                "title": "NOCS",
                "description": "NOCs",
                "const": 0
              },
              {
                "type": "integer",
                "title": "FABRICS",
                "const": 1
              },
              {
                "type": "integer",
                "title": "SUPPORTED_FABRICS",
                "const": 2
              },
              {
                "type": "integer",
                "title": "COMMISSIONED_FABRICS",
                "const": 3
              },
              {
                "type": "integer",
                "title": "TRUSTED_ROOT_CERTIFICATES",
                "const": 4
              },
              {
                "type": "integer",
                "title": "CURRENT_FABRIC_INDEX",
                "const": 5
              }
            ]
          }
        }
      }
    },
    "actions": {
      "62": {
        "title": "Operational Credentials",
        "description": "This cluster is used to add or remove Operational Credentials on a Commissionee or Node, as well as manage the associated Fabrics.",
        "input": {
          "type": "object",
          "properties": {
            "command": {
              "type": "object",
              "description": "Command to send to the device",
              "oneOf": [
                {
                  "type": "object",
                  "description": "Sender is requesting attestation information from the receiver.",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 0
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "AttestationNonce": {
                          "type": "string",
                          "description": "OCTET_STRING"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "An attestation information confirmation from the server.",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 1
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "AttestationElements": {
                          "type": "string",
                          "description": "OCTET_STRING"
                        },
                        "AttestationSignature": {
                          "type": "string",
                          "description": "OCTET_STRING"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "Sender is requesting a device attestation certificate from the receiver.",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 2
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "CertificateType": {
                          "type": "string",
                          "description": "CertificateChainTypeEnum"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "A device attestation certificate (DAC) or product attestation intermediate (PAI) certificate from the server.",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 3
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "Certificate": {
                          "type": "string",
                          "description": "OCTET_STRING"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "Sender is requesting a certificate signing request (CSR) from the receiver.",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 4
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "CSRNonce": {
                          "type": "string",
                          "description": "OCTET_STRING"
                        },
                        "IsForUpdateNOC": {
                          "type": "string",
                          "description": "boolean"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "A certificate signing request (CSR) from the server.",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 5
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "NOCSRElements": {
                          "type": "string",
                          "description": "OCTET_STRING"
                        },
                        "AttestationSignature": {
                          "type": "string",
                          "description": "OCTET_STRING"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "Sender is requesting to add the new node operational certificates.",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 6
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "NOCValue": {
                          "type": "string",
                          "description": "OCTET_STRING"
                        },
                        "ICACValue": {
                          "type": "string",
                          "description": "OCTET_STRING"
                        },
                        "IPKValue": {
                          "type": "string",
                          "description": "OCTET_STRING"
                        },
                        "CaseAdminSubject": {
                          "type": "string",
                          "description": "Int64u"
                        },
                        "AdminVendorId": {
                          "type": "string",
                          "description": "VENDOR_ID"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "Sender is requesting to update the node operational certificates.",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 7
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "NOCValue": {
                          "type": "string",
                          "description": "OCTET_STRING"
                        },
                        "ICACValue": {
                          "type": "string",
                          "description": "OCTET_STRING"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "Response to AddNOC or UpdateNOC commands.",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 8
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "StatusCode": {
                          "type": "string",
                          "description": "NodeOperationalCertStatusEnum"
                        },
                        "FabricIndex": {
                          "type": "string",
                          "description": "fabric_idx"
                        },
                        "DebugText": {
                          "type": "string",
                          "description": "CHAR_STRING"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "This command SHALL be used by an Administrative Node to set the user-visible Label field for a given Fabric, as reflected by entries in the Fabrics attribute.",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 9
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "Label": {
                          "type": "string",
                          "description": "CHAR_STRING"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "This command is used by Administrative Nodes to remove a given fabric index and delete all associated fabric-scoped data.",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 10
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "FabricIndex": {
                          "type": "string",
                          "description": "fabric_idx"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "This command SHALL add a Trusted Root CA Certificate, provided as its CHIP Certificate representation.",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 11
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "RootCACertificate": {
                          "type": "string",
                          "description": "OCTET_STRING"
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        }
      }
    }
  },
  "63": {
    "properties": {
      "63": {
        "title": "Group Key Management",
        "description": "The Group Key Management Cluster is the mechanism by which group keys are managed.",
        "uriVariables": {
          "attribute": {
            "type": "integer",
            "description": "Attrbute to read from the device",
            "oneOf": [
              {
                "type": "integer",
                "title": "GROUP_KEY_MAP",
                "description": "GroupKeyMap",
                "const": 0
              },
              {
                "type": "integer",
                "title": "GROUP_TABLE",
                "const": 1
              },
              {
                "type": "integer",
                "title": "MAX_GROUPS_PER_FABRIC",
                "const": 2
              },
              {
                "type": "integer",
                "title": "MAX_GROUP_KEYS_PER_FABRIC",
                "const": 3
              }
            ]
          }
        }
      }
    },
    "actions": {
      "63": {
        "title": "Group Key Management",
        "description": "The Group Key Management Cluster is the mechanism by which group keys are managed.",
        "input": {
          "type": "object",
          "properties": {
            "command": {
              "type": "object",
              "description": "Command to send to the device",
              "oneOf": [
                {
                  "type": "object",
                  "description": "Write a new set of keys for the given key set id.",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 0
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "GroupKeySet": {
                          "type": "string",
                          "description": "GroupKeySetStruct"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "Read the keys for a given key set id.",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 1
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "GroupKeySetID": {
                          "type": "string",
                          "description": "INT16U"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "\n       Response to KeySetRead\n      ",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 2
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "GroupKeySet": {
                          "type": "string",
                          "description": "GroupKeySetStruct"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "Revoke a Root Key from a Group",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 3
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "GroupKeySetID": {
                          "type": "string",
                          "description": "INT16U"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "Return the list of Group Key Sets associated with the accessing fabric",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 4
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "GroupKeySetIDs": {
                          "type": "string",
                          "description": "INT16U"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "\n        Reseponse to KeySetReadAllIndices\n      ",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 5
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "GroupKeySetIDs": {
                          "type": "string",
                          "description": "INT16U"
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        }
      }
    }
  },
  "64": {
    "properties": {
      "64": {
        "title": "Fixed Label",
        "description": "The Fixed Label Cluster provides a feature for the device to tag an endpoint with zero or more read only\nlabels.",
        "uriVariables": {
          "attribute": {
            "type": "integer",
            "description": "Attrbute to read from the device",
            "oneOf": [
              {
                "type": "integer",
                "title": "LABEL_LIST",
                "const": 0
              }
            ]
          }
        }
      }
    },
    "actions": {
      "64": {
        "title": "Fixed Label",
        "description": "The Fixed Label Cluster provides a feature for the device to tag an endpoint with zero or more read only\nlabels.",
        "input": {
          "type": "object",
          "properties": {
            "command": {
              "type": "object",
              "description": "Command to send to the device",
              "oneOf": []
            }
          }
        }
      }
    }
  },
  "65": {
    "properties": {
      "65": {
        "title": "User Label",
        "description": "The User Label Cluster provides a feature to tag an endpoint with zero or more labels.",
        "uriVariables": {
          "attribute": {
            "type": "integer",
            "description": "Attrbute to read from the device",
            "oneOf": [
              {
                "type": "integer",
                "title": "LABEL_LIST",
                "description": "LabelList",
                "const": 0
              }
            ]
          }
        }
      }
    },
    "actions": {
      "65": {
        "title": "User Label",
        "description": "The User Label Cluster provides a feature to tag an endpoint with zero or more labels.",
        "input": {
          "type": "object",
          "properties": {
            "command": {
              "type": "object",
              "description": "Command to send to the device",
              "oneOf": []
            }
          }
        }
      }
    }
  },
  "66": {
    "properties": {
      "66": {
        "title": "Proxy Configuration",
        "description": "Cluster to control Proxy Configuration",
        "uriVariables": {
          "attribute": {
            "type": "integer",
            "description": "Attrbute to read from the device",
            "oneOf": []
          }
        }
      }
    },
    "actions": {
      "66": {
        "title": "Proxy Configuration",
        "description": "Cluster to control Proxy Configuration",
        "input": {
          "type": "object",
          "properties": {
            "command": {
              "type": "object",
              "description": "Command to send to the device",
              "oneOf": []
            }
          }
        }
      }
    }
  },
  "67": {
    "properties": {
      "67": {
        "title": "Proxy Discovery",
        "description": "Cluster to control Proxy Discovery",
        "uriVariables": {
          "attribute": {
            "type": "integer",
            "description": "Attrbute to read from the device",
            "oneOf": []
          }
        }
      }
    },
    "actions": {
      "67": {
        "title": "Proxy Discovery",
        "description": "Cluster to control Proxy Discovery",
        "input": {
          "type": "object",
          "properties": {
            "command": {
              "type": "object",
              "description": "Command to send to the device",
              "oneOf": []
            }
          }
        }
      }
    }
  },
  "68": {
    "properties": {
      "68": {
        "title": "Proxy Valid",
        "description": "Cluster to control Proxy Valid",
        "uriVariables": {
          "attribute": {
            "type": "integer",
            "description": "Attrbute to read from the device",
            "oneOf": []
          }
        }
      }
    },
    "actions": {
      "68": {
        "title": "Proxy Valid",
        "description": "Cluster to control Proxy Valid",
        "input": {
          "type": "object",
          "properties": {
            "command": {
              "type": "object",
              "description": "Command to send to the device",
              "oneOf": []
            }
          }
        }
      }
    }
  },
  "69": {
    "properties": {
      "69": {
        "title": "Boolean State",
        "description": "This cluster provides an interface to a boolean state called StateValue.",
        "uriVariables": {
          "attribute": {
            "type": "integer",
            "description": "Attrbute to read from the device",
            "oneOf": [
              {
                "type": "integer",
                "title": "STATE_VALUE",
                "const": 0
              }
            ]
          }
        }
      }
    },
    "actions": {
      "69": {
        "title": "Boolean State",
        "description": "This cluster provides an interface to a boolean state called StateValue.",
        "input": {
          "type": "object",
          "properties": {
            "command": {
              "type": "object",
              "description": "Command to send to the device",
              "oneOf": []
            }
          }
        }
      }
    }
  },
  "80": {
    "properties": {
      "80": {
        "title": "Mode Select",
        "description": "Attributes and commands for selecting a mode from a list of supported options.",
        "uriVariables": {
          "attribute": {
            "type": "integer",
            "description": "Attrbute to read from the device",
            "oneOf": [
              {
                "type": "integer",
                "title": "MODE_DESCRIPTION",
                "const": 0
              },
              {
                "type": "integer",
                "title": "STANDARD_NAMESPACE",
                "const": 1
              },
              {
                "type": "integer",
                "title": "SUPPORTED_MODES",
                "const": 2
              },
              {
                "type": "integer",
                "title": "CURRENT_MODE",
                "const": 3
              },
              {
                "type": "integer",
                "title": "START_UP_MODE",
                "const": 4
              },
              {
                "type": "integer",
                "title": "ON_MODE",
                "const": 5
              }
            ]
          }
        }
      }
    },
    "actions": {
      "80": {
        "title": "Mode Select",
        "description": "Attributes and commands for selecting a mode from a list of supported options.",
        "input": {
          "type": "object",
          "properties": {
            "command": {
              "type": "object",
              "description": "Command to send to the device",
              "oneOf": [
                {
                  "type": "object",
                  "description": "\n        On receipt of this command, if the NewMode field matches the Mode field in an entry of the SupportedModes list, the server SHALL set the CurrentMode attribute to the NewMode value, otherwise, the server SHALL respond with an INVALID_COMMAND status response.\n      ",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 0
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "NewMode": {
                          "type": "string",
                          "description": "INT8U"
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        }
      }
    }
  },
  "257": {
    "properties": {
      "257": {
        "title": "Door Lock",
        "description": "An interface to a generic way to secure a door",
        "uriVariables": {
          "attribute": {
            "type": "integer",
            "description": "Attrbute to read from the device",
            "oneOf": [
              {
                "type": "integer",
                "title": "LOCK_STATE",
                "const": 0
              },
              {
                "type": "integer",
                "title": "LOCK_TYPE",
                "const": 1
              },
              {
                "type": "integer",
                "title": "ACTUATOR_ENABLED",
                "const": 2
              },
              {
                "type": "integer",
                "title": "DOOR_STATE",
                "const": 3
              },
              {
                "type": "integer",
                "title": "DOOR_OPEN_EVENTS",
                "description": "DoorOpenEvents",
                "const": 4
              },
              {
                "type": "integer",
                "title": "DOOR_CLOSED_EVENTS",
                "description": "DoorClosedEvents",
                "const": 5
              },
              {
                "type": "integer",
                "title": "OPEN_PERIOD",
                "description": "OpenPeriod",
                "const": 6
              },
              {
                "type": "integer",
                "title": "NUM_TOTAL_USERS_SUPPORTED",
                "const": 23
              },
              {
                "type": "integer",
                "title": "NUM_PIN_USERS_SUPPORTED",
                "const": 24
              },
              {
                "type": "integer",
                "title": "NUM_RFID_USERS_SUPPORTED",
                "const": 25
              },
              {
                "type": "integer",
                "title": "NUM_WEEKDAY_SCHEDULES_SUPPORTED_PER_USER",
                "const": 32
              },
              {
                "type": "integer",
                "title": "NUM_YEARDAY_SCHEDULES_SUPPORTED_PER_USER",
                "const": 33
              },
              {
                "type": "integer",
                "title": "NUM_HOLIDAY_SCHEDULES_SUPPORTED",
                "const": 34
              },
              {
                "type": "integer",
                "title": "MAX_PIN_LENGTH",
                "const": 35
              },
              {
                "type": "integer",
                "title": "MIN_PIN_LENGTH",
                "const": 36
              },
              {
                "type": "integer",
                "title": "MAX_RFID_CODE_LENGTH",
                "const": 37
              },
              {
                "type": "integer",
                "title": "MIN_RFID_CODE_LENGTH",
                "const": 38
              },
              {
                "type": "integer",
                "title": "CREDENTIAL_RULES_SUPPORT",
                "const": 39
              },
              {
                "type": "integer",
                "title": "NUM_CREDENTIALS_SUPPORTED_PER_USER",
                "const": 40
              },
              {
                "type": "integer",
                "title": "LANGUAGE",
                "description": "Language",
                "const": 51
              },
              {
                "type": "integer",
                "title": "LED_SETTINGS",
                "description": "LEDSettings",
                "const": 52
              },
              {
                "type": "integer",
                "title": "AUTO_RELOCK_TIME",
                "description": "AutoRelockTime",
                "const": 53
              },
              {
                "type": "integer",
                "title": "SOUND_VOLUME",
                "description": "SoundVolume",
                "const": 54
              },
              {
                "type": "integer",
                "title": "OPERATING_MODE",
                "description": "OperatingMode",
                "const": 55
              },
              {
                "type": "integer",
                "title": "SUPPORTED_OPERATING_MODES",
                "const": 56
              },
              {
                "type": "integer",
                "title": "DEFAULT_CONFIGURATION_REGISTER",
                "const": 57
              },
              {
                "type": "integer",
                "title": "ENABLE_LOCAL_PROGRAMMING",
                "description": "EnableLocalProgramming",
                "const": 64
              },
              {
                "type": "integer",
                "title": "ENABLE_ONE_TOUCH_LOCKING",
                "description": "EnableOneTouchLocking",
                "const": 65
              },
              {
                "type": "integer",
                "title": "ENABLE_INSIDE_STATUS_LED",
                "description": "EnableInsideStatusLED",
                "const": 66
              },
              {
                "type": "integer",
                "title": "ENABLE_PRIVACY_MODE_BUTTON",
                "description": "EnablePrivacyModeButton",
                "const": 67
              },
              {
                "type": "integer",
                "title": "LOCAL_PROGRAMMING_FEATURES",
                "description": "LocalProgrammingFeatures",
                "const": 68
              },
              {
                "type": "integer",
                "title": "WRONG_CODE_ENTRY_LIMIT",
                "description": "WrongCodeEntryLimit",
                "const": 72
              },
              {
                "type": "integer",
                "title": "USER_CODE_TEMPORARY_DISABLE_TIME",
                "description": "UserCodeTemporaryDisableTime",
                "const": 73
              },
              {
                "type": "integer",
                "title": "SEND_PIN_OVER_THE_AIR",
                "description": "SendPINOverTheAir",
                "const": 80
              },
              {
                "type": "integer",
                "title": "REQUIRE_PIN_FOR_REMOTE_OPERATION",
                "description": "RequirePINforRemoteOperation",
                "const": 81
              },
              {
                "type": "integer",
                "title": "EXPIRING_USER_TIMEOUT",
                "description": "ExpiringUserTimeout",
                "const": 83
              }
            ]
          }
        }
      }
    },
    "actions": {
      "257": {
        "title": "Door Lock",
        "description": "An interface to a generic way to secure a door",
        "input": {
          "type": "object",
          "properties": {
            "command": {
              "type": "object",
              "description": "Command to send to the device",
              "oneOf": [
                {
                  "type": "object",
                  "description": "This command causes the lock device to lock the door.",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 0
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "PINCode": {
                          "type": "string",
                          "description": "OCTET_STRING"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "This command causes the lock device to unlock the door.",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 1
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "PINCode": {
                          "type": "string",
                          "description": "OCTET_STRING"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "This command causes the lock device to unlock the door with a timeout parameter.",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 3
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "Timeout": {
                          "type": "string",
                          "description": "INT16U"
                        },
                        "PINCode": {
                          "type": "string",
                          "description": "OCTET_STRING"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "Set a weekly repeating schedule for a specified user.",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 17
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "WeekDayIndex": {
                          "type": "string",
                          "description": "INT8U"
                        },
                        "UserIndex": {
                          "type": "string",
                          "description": "INT16U"
                        },
                        "DaysMask": {
                          "type": "string",
                          "description": "DaysMaskMap"
                        },
                        "StartHour": {
                          "type": "string",
                          "description": "INT8U"
                        },
                        "StartMinute": {
                          "type": "string",
                          "description": "INT8U"
                        },
                        "EndHour": {
                          "type": "string",
                          "description": "INT8U"
                        },
                        "EndMinute": {
                          "type": "string",
                          "description": "INT8U"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "Retrieve the specific weekly schedule for the specific user.",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 18
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "WeekDayIndex": {
                          "type": "string",
                          "description": "INT8U"
                        },
                        "UserIndex": {
                          "type": "string",
                          "description": "INT16U"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "Returns the weekly repeating schedule data for the specified schedule index.",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 18
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "WeekDayIndex": {
                          "type": "string",
                          "description": "INT8U"
                        },
                        "UserIndex": {
                          "type": "string",
                          "description": "INT16U"
                        },
                        "Status": {
                          "type": "string",
                          "description": "DlStatus"
                        },
                        "DaysMask": {
                          "type": "string",
                          "description": "DaysMaskMap"
                        },
                        "StartHour": {
                          "type": "string",
                          "description": "INT8U"
                        },
                        "StartMinute": {
                          "type": "string",
                          "description": "INT8U"
                        },
                        "EndHour": {
                          "type": "string",
                          "description": "INT8U"
                        },
                        "EndMinute": {
                          "type": "string",
                          "description": "INT8U"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "Clear the specific weekly schedule or all weekly schedules for the specific user.",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 19
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "WeekDayIndex": {
                          "type": "string",
                          "description": "INT8U"
                        },
                        "UserIndex": {
                          "type": "string",
                          "description": "INT16U"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "Set a time-specific schedule ID for a specified user.",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 20
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "YearDayIndex": {
                          "type": "string",
                          "description": "INT8U"
                        },
                        "UserIndex": {
                          "type": "string",
                          "description": "INT16U"
                        },
                        "LocalStartTime": {
                          "type": "string",
                          "description": "epoch_s"
                        },
                        "LocalEndTime": {
                          "type": "string",
                          "description": "epoch_s"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "Returns the year day schedule data for the specified schedule and user indexes.",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 21
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "YearDayIndex": {
                          "type": "string",
                          "description": "INT8U"
                        },
                        "UserIndex": {
                          "type": "string",
                          "description": "INT16U"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "Returns the year day schedule data for the specified schedule and user indexes.",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 21
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "YearDayIndex": {
                          "type": "string",
                          "description": "INT8U"
                        },
                        "UserIndex": {
                          "type": "string",
                          "description": "INT16U"
                        },
                        "Status": {
                          "type": "string",
                          "description": "DlStatus"
                        },
                        "LocalStartTime": {
                          "type": "string",
                          "description": "epoch_s"
                        },
                        "LocalEndTime": {
                          "type": "string",
                          "description": "epoch_s"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "Clears the specific year day schedule or all year day schedules for the specific user.",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 22
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "YearDayIndex": {
                          "type": "string",
                          "description": "INT8U"
                        },
                        "UserIndex": {
                          "type": "string",
                          "description": "INT16U"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "Set the holiday Schedule by specifying local start time and local end time with respect to any Lock Operating Mode.",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 23
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "HolidayIndex": {
                          "type": "string",
                          "description": "INT8U"
                        },
                        "LocalStartTime": {
                          "type": "string",
                          "description": "epoch_s"
                        },
                        "LocalEndTime": {
                          "type": "string",
                          "description": "epoch_s"
                        },
                        "OperatingMode": {
                          "type": "string",
                          "description": "OperatingModeEnum"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "Get the holiday schedule for the specified index.",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 24
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "HolidayIndex": {
                          "type": "string",
                          "description": "INT8U"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "Returns the Holiday Schedule Entry for the specified Holiday ID.",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 24
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "HolidayIndex": {
                          "type": "string",
                          "description": "INT8U"
                        },
                        "Status": {
                          "type": "string",
                          "description": "DlStatus"
                        },
                        "LocalStartTime": {
                          "type": "string",
                          "description": "epoch_s"
                        },
                        "LocalEndTime": {
                          "type": "string",
                          "description": "epoch_s"
                        },
                        "OperatingMode": {
                          "type": "string",
                          "description": "OperatingModeEnum"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "Clears the holiday schedule or all holiday schedules.",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 25
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "HolidayIndex": {
                          "type": "string",
                          "description": "INT8U"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "Set User into the lock.",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 38
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "OperationType": {
                          "type": "string",
                          "description": "DataOperationTypeEnum"
                        },
                        "UserIndex": {
                          "type": "string",
                          "description": "INT16U"
                        },
                        "UserName": {
                          "type": "string",
                          "description": "CHAR_STRING"
                        },
                        "UserUniqueID": {
                          "type": "string",
                          "description": "INT32U"
                        },
                        "UserStatus": {
                          "type": "string",
                          "description": "UserStatusEnum"
                        },
                        "UserType": {
                          "type": "string",
                          "description": "UserTypeEnum"
                        },
                        "CredentialRule": {
                          "type": "string",
                          "description": "CredentialRuleEnum"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "Retrieve User.",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 39
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "UserIndex": {
                          "type": "string",
                          "description": "INT16U"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "Returns the User for the specified UserIndex.",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 40
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "UserIndex": {
                          "type": "string",
                          "description": "INT16U"
                        },
                        "UserName": {
                          "type": "string",
                          "description": "CHAR_STRING"
                        },
                        "UserUniqueID": {
                          "type": "string",
                          "description": "INT32U"
                        },
                        "UserStatus": {
                          "type": "string",
                          "description": "UserStatusEnum"
                        },
                        "UserType": {
                          "type": "string",
                          "description": "UserTypeEnum"
                        },
                        "CredentialRule": {
                          "type": "string",
                          "description": "CredentialRuleEnum"
                        },
                        "Credentials": {
                          "type": "string",
                          "description": "CredentialStruct"
                        },
                        "CreatorFabricIndex": {
                          "type": "string",
                          "description": "fabric_idx"
                        },
                        "LastModifiedFabricIndex": {
                          "type": "string",
                          "description": "fabric_idx"
                        },
                        "NextUserIndex": {
                          "type": "string",
                          "description": "INT16U"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "Clears a User or all Users.",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 41
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "UserIndex": {
                          "type": "string",
                          "description": "INT16U"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "Set a credential (e.g. PIN, RFID, Fingerprint, etc.) into the lock for a new user, existing user, or ProgrammingUser.",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 52
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "OperationType": {
                          "type": "string",
                          "description": "DataOperationTypeEnum"
                        },
                        "Credential": {
                          "type": "string",
                          "description": "CredentialStruct"
                        },
                        "CredentialData": {
                          "type": "string",
                          "description": "LONG_OCTET_STRING"
                        },
                        "UserIndex": {
                          "type": "string",
                          "description": "INT16U"
                        },
                        "UserStatus": {
                          "type": "string",
                          "description": "UserStatusEnum"
                        },
                        "UserType": {
                          "type": "string",
                          "description": "UserTypeEnum"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "Returns the status for setting the specified credential.",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 53
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "Status": {
                          "type": "string",
                          "description": "DlStatus"
                        },
                        "UserIndex": {
                          "type": "string",
                          "description": "INT16U"
                        },
                        "NextCredentialIndex": {
                          "type": "string",
                          "description": "INT16U"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "Retrieve the status of a particular credential (e.g. PIN, RFID, Fingerprint, etc.) by index.",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 54
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "Credential": {
                          "type": "string",
                          "description": "CredentialStruct"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "Returns the status for the specified credential.",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 55
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "CredentialExists": {
                          "type": "string",
                          "description": "boolean"
                        },
                        "UserIndex": {
                          "type": "string",
                          "description": "INT16U"
                        },
                        "CreatorFabricIndex": {
                          "type": "string",
                          "description": "fabric_idx"
                        },
                        "LastModifiedFabricIndex": {
                          "type": "string",
                          "description": "fabric_idx"
                        },
                        "NextCredentialIndex": {
                          "type": "string",
                          "description": "INT16U"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "Clear one, one type, or all credentials except ProgrammingPIN credential.",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 56
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "Credential": {
                          "type": "string",
                          "description": "CredentialStruct"
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        }
      }
    }
  },
  "258": {
    "properties": {
      "258": {
        "title": "Window Covering",
        "description": "Provides an interface for controlling and adjusting automatic window coverings. ",
        "uriVariables": {
          "attribute": {
            "type": "integer",
            "description": "Attrbute to read from the device",
            "oneOf": [
              {
                "type": "integer",
                "title": "WC_TYPE",
                "const": 0
              },
              {
                "type": "integer",
                "title": "WC_PHYSICAL_CLOSED_LIMIT_LIFT",
                "const": 1
              },
              {
                "type": "integer",
                "title": "WC_PHYSICAL_CLOSED_LIMIT_TILT",
                "const": 2
              },
              {
                "type": "integer",
                "title": "WC_CURRENT_POSITION_LIFT",
                "const": 3
              },
              {
                "type": "integer",
                "title": "WC_CURRENT_POSITION_TILT",
                "const": 4
              },
              {
                "type": "integer",
                "title": "WC_NUMBER_OF_ACTUATIONS_LIFT",
                "const": 5
              },
              {
                "type": "integer",
                "title": "WC_NUMBER_OF_ACTUATIONS_TILT",
                "const": 6
              },
              {
                "type": "integer",
                "title": "WC_CONFIG_STATUS",
                "const": 7
              },
              {
                "type": "integer",
                "title": "WC_CURRENT_POSITION_LIFT_PERCENTAGE",
                "const": 8
              },
              {
                "type": "integer",
                "title": "WC_CURRENT_POSITION_TILT_PERCENTAGE",
                "const": 9
              },
              {
                "type": "integer",
                "title": "WC_OPERATIONAL_STATUS",
                "const": 10
              },
              {
                "type": "integer",
                "title": "WC_TARGET_POSITION_LIFT_PERCENT100THS",
                "const": 11
              },
              {
                "type": "integer",
                "title": "WC_TARGET_POSITION_TILT_PERCENT100THS",
                "const": 12
              },
              {
                "type": "integer",
                "title": "WC_END_PRODUCT_TYPE",
                "const": 13
              },
              {
                "type": "integer",
                "title": "WC_CURRENT_POSITION_LIFT_PERCENT100THS",
                "const": 14
              },
              {
                "type": "integer",
                "title": "WC_CURRENT_POSITION_TILT_PERCENT100THS",
                "const": 15
              },
              {
                "type": "integer",
                "title": "WC_INSTALLED_OPEN_LIMIT_LIFT",
                "const": 16
              },
              {
                "type": "integer",
                "title": "WC_INSTALLED_CLOSED_LIMIT_LIFT",
                "const": 17
              },
              {
                "type": "integer",
                "title": "WC_INSTALLED_OPEN_LIMIT_TILT",
                "const": 18
              },
              {
                "type": "integer",
                "title": "WC_INSTALLED_CLOSED_LIMIT_TILT",
                "const": 19
              },
              {
                "type": "integer",
                "title": "WC_MODE",
                "description": "Mode",
                "const": 23
              },
              {
                "type": "integer",
                "title": "WC_SAFETY_STATUS",
                "const": 26
              }
            ]
          }
        }
      }
    },
    "actions": {
      "258": {
        "title": "Window Covering",
        "description": "Provides an interface for controlling and adjusting automatic window coverings. ",
        "input": {
          "type": "object",
          "properties": {
            "command": {
              "type": "object",
              "description": "Command to send to the device",
              "oneOf": [
                {
                  "type": "object",
                  "description": "Moves window covering to InstalledOpenLimitLift and InstalledOpenLimitTilt",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 0
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "Moves window covering to InstalledClosedLimitLift and InstalledCloseLimitTilt",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 1
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "Stop any adjusting of window covering",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 2
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "Go to lift value specified",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 4
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "liftValue": {
                          "type": "string",
                          "description": "INT16U"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "Go to lift percentage specified",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 5
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "liftPercent100thsValue": {
                          "type": "string",
                          "description": "Percent100ths"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "Go to tilt value specified",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 7
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "tiltValue": {
                          "type": "string",
                          "description": "INT16U"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "Go to tilt percentage specified",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 8
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "tiltPercent100thsValue": {
                          "type": "string",
                          "description": "Percent100ths"
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        }
      }
    }
  },
  "512": {
    "properties": {
      "512": {
        "title": "Pump Configuration and Control",
        "description": "An interface for configuring and controlling pumps.",
        "uriVariables": {
          "attribute": {
            "type": "integer",
            "description": "Attrbute to read from the device",
            "oneOf": [
              {
                "type": "integer",
                "title": "MAX_PRESSURE",
                "const": 0
              },
              {
                "type": "integer",
                "title": "MAX_SPEED",
                "const": 1
              },
              {
                "type": "integer",
                "title": "MAX_FLOW",
                "const": 2
              },
              {
                "type": "integer",
                "title": "MIN_CONST_PRESSURE",
                "const": 3
              },
              {
                "type": "integer",
                "title": "MAX_CONST_PRESSURE",
                "const": 4
              },
              {
                "type": "integer",
                "title": "MIN_COMP_PRESSURE",
                "const": 5
              },
              {
                "type": "integer",
                "title": "MAX_COMP_PRESSURE",
                "const": 6
              },
              {
                "type": "integer",
                "title": "MIN_CONST_SPEED",
                "const": 7
              },
              {
                "type": "integer",
                "title": "MAX_CONST_SPEED",
                "const": 8
              },
              {
                "type": "integer",
                "title": "MIN_CONST_FLOW",
                "const": 9
              },
              {
                "type": "integer",
                "title": "MAX_CONST_FLOW",
                "const": 10
              },
              {
                "type": "integer",
                "title": "MIN_CONST_TEMP",
                "const": 11
              },
              {
                "type": "integer",
                "title": "MAX_CONST_TEMP",
                "const": 12
              },
              {
                "type": "integer",
                "title": "PUMP_STATUS",
                "const": 16
              },
              {
                "type": "integer",
                "title": "EFFECTIVE_OPERATION_MODE",
                "const": 17
              },
              {
                "type": "integer",
                "title": "EFFECTIVE_CONTROL_MODE",
                "const": 18
              },
              {
                "type": "integer",
                "title": "CAPACITY",
                "const": 19
              },
              {
                "type": "integer",
                "title": "SPEED",
                "const": 20
              },
              {
                "type": "integer",
                "title": "LIFETIME_RUNNING_HOURS",
                "description": "LifetimeRunningHours",
                "const": 21
              },
              {
                "type": "integer",
                "title": "PUMP_POWER",
                "const": 22
              },
              {
                "type": "integer",
                "title": "LIFETIME_ENERGY_CONSUMED",
                "description": "LifetimeEnergyConsumed",
                "const": 23
              },
              {
                "type": "integer",
                "title": "OPERATION_MODE",
                "description": "OperationMode",
                "const": 32
              },
              {
                "type": "integer",
                "title": "CONTROL_MODE",
                "description": "ControlMode",
                "const": 33
              }
            ]
          }
        }
      }
    },
    "actions": {
      "512": {
        "title": "Pump Configuration and Control",
        "description": "An interface for configuring and controlling pumps.",
        "input": {
          "type": "object",
          "properties": {
            "command": {
              "type": "object",
              "description": "Command to send to the device",
              "oneOf": []
            }
          }
        }
      }
    }
  },
  "513": {
    "properties": {
      "513": {
        "title": "Thermostat",
        "description": "An interface for configuring and controlling the functionality of a thermostat.",
        "uriVariables": {
          "attribute": {
            "type": "integer",
            "description": "Attrbute to read from the device",
            "oneOf": [
              {
                "type": "integer",
                "title": "LOCAL_TEMPERATURE",
                "const": 0
              },
              {
                "type": "integer",
                "title": "OUTDOOR_TEMPERATURE",
                "const": 1
              },
              {
                "type": "integer",
                "title": "THERMOSTAT_OCCUPANCY",
                "const": 2
              },
              {
                "type": "integer",
                "title": "ABS_MIN_HEAT_SETPOINT_LIMIT",
                "const": 3
              },
              {
                "type": "integer",
                "title": "ABS_MAX_HEAT_SETPOINT_LIMIT",
                "const": 4
              },
              {
                "type": "integer",
                "title": "ABS_MIN_COOL_SETPOINT_LIMIT",
                "const": 5
              },
              {
                "type": "integer",
                "title": "ABS_MAX_COOL_SETPOINT_LIMIT",
                "const": 6
              },
              {
                "type": "integer",
                "title": "PI_COOLING_DEMAND",
                "const": 7
              },
              {
                "type": "integer",
                "title": "PI_HEATING_DEMAND",
                "const": 8
              },
              {
                "type": "integer",
                "title": "HVAC_SYSTEM_TYPE_CONFIGURATION",
                "description": "HVACSystemTypeConfiguration",
                "const": 9
              },
              {
                "type": "integer",
                "title": "LOCAL_TEMPERATURE_CALIBRATION",
                "description": "LocalTemperatureCalibration",
                "const": 16
              },
              {
                "type": "integer",
                "title": "OCCUPIED_COOLING_SETPOINT",
                "const": 17
              },
              {
                "type": "integer",
                "title": "OCCUPIED_HEATING_SETPOINT",
                "const": 18
              },
              {
                "type": "integer",
                "title": "UNOCCUPIED_COOLING_SETPOINT",
                "const": 19
              },
              {
                "type": "integer",
                "title": "UNOCCUPIED_HEATING_SETPOINT",
                "const": 20
              },
              {
                "type": "integer",
                "title": "MIN_HEAT_SETPOINT_LIMIT",
                "description": "MinHeatSetpointLimit",
                "const": 21
              },
              {
                "type": "integer",
                "title": "MAX_HEAT_SETPOINT_LIMIT",
                "description": "MaxHeatSetpointLimit",
                "const": 22
              },
              {
                "type": "integer",
                "title": "MIN_COOL_SETPOINT_LIMIT",
                "description": "MinCoolSetpointLimit",
                "const": 23
              },
              {
                "type": "integer",
                "title": "MAX_COOL_SETPOINT_LIMIT",
                "description": "MaxCoolSetpointLimit",
                "const": 24
              },
              {
                "type": "integer",
                "title": "MIN_SETPOINT_DEAD_BAND",
                "description": "MinSetpointDeadBand",
                "const": 25
              },
              {
                "type": "integer",
                "title": "REMOTE_SENSING",
                "description": "RemoteSensing",
                "const": 26
              },
              {
                "type": "integer",
                "title": "CONTROL_SEQUENCE_OF_OPERATION",
                "description": "ControlSequenceOfOperation",
                "const": 27
              },
              {
                "type": "integer",
                "title": "SYSTEM_MODE",
                "description": "SystemMode",
                "const": 28
              },
              {
                "type": "integer",
                "title": "THERMOSTAT_RUNNING_MODE",
                "const": 30
              },
              {
                "type": "integer",
                "title": "START_OF_WEEK",
                "const": 32
              },
              {
                "type": "integer",
                "title": "NUMBER_OF_WEEKLY_TRANSITIONS",
                "const": 33
              },
              {
                "type": "integer",
                "title": "NUMBER_OF_DAILY_TRANSITIONS",
                "const": 34
              },
              {
                "type": "integer",
                "title": "TEMPERATURE_SETPOINT_HOLD",
                "description": "TemperatureSetpointHold",
                "const": 35
              },
              {
                "type": "integer",
                "title": "TEMPERATURE_SETPOINT_HOLD_DURATION",
                "description": "TemperatureSetpointHoldDuration",
                "const": 36
              },
              {
                "type": "integer",
                "title": "THERMOSTAT_PROGRAMMING_OPERATION_MODE",
                "description": "ThermostatProgrammingOperationMode",
                "const": 37
              },
              {
                "type": "integer",
                "title": "THERMOSTAT_RUNNING_STATE",
                "const": 41
              },
              {
                "type": "integer",
                "title": "SETPOINT_CHANGE_SOURCE",
                "const": 48
              },
              {
                "type": "integer",
                "title": "SETPOINT_CHANGE_AMOUNT",
                "const": 49
              },
              {
                "type": "integer",
                "title": "SETPOINT_CHANGE_SOURCE_TIMESTAMP",
                "const": 50
              },
              {
                "type": "integer",
                "title": "OCCUPIED_SETBACK",
                "description": "OccupiedSetback",
                "const": 52
              },
              {
                "type": "integer",
                "title": "OCCUPIED_SETBACK_MIN",
                "const": 53
              },
              {
                "type": "integer",
                "title": "OCCUPIED_SETBACK_MAX",
                "const": 54
              },
              {
                "type": "integer",
                "title": "UNOCCUPIED_SETBACK",
                "description": "UnoccupiedSetback",
                "const": 55
              },
              {
                "type": "integer",
                "title": "UNOCCUPIED_SETBACK_MIN",
                "const": 56
              },
              {
                "type": "integer",
                "title": "UNOCCUPIED_SETBACK_MAX",
                "const": 57
              },
              {
                "type": "integer",
                "title": "EMERGENCY_HEAT_DELTA",
                "description": "EmergencyHeatDelta",
                "const": 58
              },
              {
                "type": "integer",
                "title": "AC_TYPE",
                "description": "ACType",
                "const": 64
              },
              {
                "type": "integer",
                "title": "AC_CAPACITY",
                "description": "ACCapacity",
                "const": 65
              },
              {
                "type": "integer",
                "title": "AC_REFRIGERANT_TYPE",
                "description": "ACRefrigerantType",
                "const": 66
              },
              {
                "type": "integer",
                "title": "AC_COMPRESSOR_TYPE",
                "description": "ACCompressorType",
                "const": 67
              },
              {
                "type": "integer",
                "title": "AC_ERROR_CODE",
                "description": "ACErrorCode",
                "const": 68
              },
              {
                "type": "integer",
                "title": "AC_LOUVER_POSITION",
                "description": "ACLouverPosition",
                "const": 69
              },
              {
                "type": "integer",
                "title": "AC_COIL_TEMPERATURE",
                "const": 70
              },
              {
                "type": "integer",
                "title": "AC_CAPACITY_FORMAT",
                "description": "ACCapacityformat",
                "const": 71
              }
            ]
          }
        }
      }
    },
    "actions": {
      "513": {
        "title": "Thermostat",
        "description": "An interface for configuring and controlling the functionality of a thermostat.",
        "input": {
          "type": "object",
          "properties": {
            "command": {
              "type": "object",
              "description": "Command to send to the device",
              "oneOf": [
                {
                  "type": "object",
                  "description": "\n        Command description for SetpointRaiseLower\n      ",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 0
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "Mode": {
                          "type": "string",
                          "description": "SetpointAdjustMode"
                        },
                        "Amount": {
                          "type": "string",
                          "description": "INT8S"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "\n        Command description for SetWeeklySchedule\n      ",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 1
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "NumberOfTransitionsForSequence": {
                          "type": "string",
                          "description": "INT8U"
                        },
                        "DayOfWeekForSequence": {
                          "type": "string",
                          "description": "DayOfWeek"
                        },
                        "ModeForSequence": {
                          "type": "string",
                          "description": "ModeForSequence"
                        },
                        "Transitions": {
                          "type": "string",
                          "description": "ThermostatScheduleTransition"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "\n        Command description for GetWeeklySchedule\n      ",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 2
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "DaysToReturn": {
                          "type": "string",
                          "description": "DayOfWeek"
                        },
                        "ModeToReturn": {
                          "type": "string",
                          "description": "ModeForSequence"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "\n        The Clear Weekly Schedule command is used to clear the weekly schedule.\n      ",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 3
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "\n        The Current Weekly Schedule Command is sent from the server in response to the Get Weekly Schedule Command.\n      ",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 0
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "NumberOfTransitionsForSequence": {
                          "type": "string",
                          "description": "INT8U"
                        },
                        "DayOfWeekForSequence": {
                          "type": "string",
                          "description": "DayOfWeek"
                        },
                        "ModeForSequence": {
                          "type": "string",
                          "description": "ModeForSequence"
                        },
                        "Transitions": {
                          "type": "string",
                          "description": "ThermostatScheduleTransition"
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        }
      }
    }
  },
  "514": {
    "properties": {
      "514": {
        "title": "Fan Control",
        "description": "An interface for controlling a fan in a heating/cooling system.",
        "uriVariables": {
          "attribute": {
            "type": "integer",
            "description": "Attrbute to read from the device",
            "oneOf": [
              {
                "type": "integer",
                "title": "FAN_MODE",
                "const": 0
              },
              {
                "type": "integer",
                "title": "FAN_MODE_SEQUENCE",
                "const": 1
              },
              {
                "type": "integer",
                "title": "PERCENT_SETTING",
                "const": 2
              },
              {
                "type": "integer",
                "title": "PERCENT_CURRENT",
                "const": 3
              },
              {
                "type": "integer",
                "title": "SPEED_MAX",
                "const": 4
              },
              {
                "type": "integer",
                "title": "SPEED_SETTING",
                "const": 5
              },
              {
                "type": "integer",
                "title": "SPEED_CURRENT",
                "const": 6
              },
              {
                "type": "integer",
                "title": "ROCK_SUPPORT",
                "const": 7
              },
              {
                "type": "integer",
                "title": "ROCK_SETTING",
                "const": 8
              },
              {
                "type": "integer",
                "title": "WIND_SUPPORT",
                "const": 9
              },
              {
                "type": "integer",
                "title": "WIND_SETTING",
                "const": 10
              }
            ]
          }
        }
      }
    },
    "actions": {
      "514": {
        "title": "Fan Control",
        "description": "An interface for controlling a fan in a heating/cooling system.",
        "input": {
          "type": "object",
          "properties": {
            "command": {
              "type": "object",
              "description": "Command to send to the device",
              "oneOf": []
            }
          }
        }
      }
    }
  },
  "516": {
    "properties": {
      "516": {
        "title": "Thermostat User Interface Configuration",
        "description": "An interface for configuring the user interface of a thermostat (which may be remote from the thermostat).",
        "uriVariables": {
          "attribute": {
            "type": "integer",
            "description": "Attrbute to read from the device",
            "oneOf": [
              {
                "type": "integer",
                "title": "TEMPERATURE_DISPLAY_MODE",
                "const": 0
              },
              {
                "type": "integer",
                "title": "KEYPAD_LOCKOUT",
                "description": "KeypadLockout",
                "const": 1
              },
              {
                "type": "integer",
                "title": "SCHEDULE_PROGRAMMING_VISIBILITY",
                "description": "ScheduleProgrammingVisibility",
                "const": 2
              }
            ]
          }
        }
      }
    },
    "actions": {
      "516": {
        "title": "Thermostat User Interface Configuration",
        "description": "An interface for configuring the user interface of a thermostat (which may be remote from the thermostat).",
        "input": {
          "type": "object",
          "properties": {
            "command": {
              "type": "object",
              "description": "Command to send to the device",
              "oneOf": []
            }
          }
        }
      }
    }
  },
  "768": {
    "properties": {
      "768": {
        "title": "Color Control",
        "description": "Attributes and commands for controlling the color properties of a color-capable light.",
        "uriVariables": {
          "attribute": {
            "type": "integer",
            "description": "Attrbute to read from the device",
            "oneOf": [
              {
                "type": "integer",
                "title": "COLOR_CONTROL_CURRENT_HUE",
                "const": 0
              },
              {
                "type": "integer",
                "title": "COLOR_CONTROL_CURRENT_SATURATION",
                "const": 1
              },
              {
                "type": "integer",
                "title": "COLOR_CONTROL_REMAINING_TIME",
                "const": 2
              },
              {
                "type": "integer",
                "title": "COLOR_CONTROL_CURRENT_X",
                "const": 3
              },
              {
                "type": "integer",
                "title": "COLOR_CONTROL_CURRENT_Y",
                "const": 4
              },
              {
                "type": "integer",
                "title": "COLOR_CONTROL_DRIFT_COMPENSATION",
                "const": 5
              },
              {
                "type": "integer",
                "title": "COLOR_CONTROL_COMPENSATION_TEXT",
                "const": 6
              },
              {
                "type": "integer",
                "title": "COLOR_CONTROL_COLOR_TEMPERATURE",
                "const": 7
              },
              {
                "type": "integer",
                "title": "COLOR_CONTROL_COLOR_MODE",
                "const": 8
              },
              {
                "type": "integer",
                "title": "COLOR_CONTROL_OPTIONS",
                "const": 15
              },
              {
                "type": "integer",
                "title": "COLOR_CONTROL_NUMBER_OF_PRIMARIES",
                "const": 16
              },
              {
                "type": "integer",
                "title": "COLOR_CONTROL_PRIMARY_1_X",
                "const": 17
              },
              {
                "type": "integer",
                "title": "COLOR_CONTROL_PRIMARY_1_Y",
                "const": 18
              },
              {
                "type": "integer",
                "title": "COLOR_CONTROL_PRIMARY_1_INTENSITY",
                "const": 19
              },
              {
                "type": "integer",
                "title": "COLOR_CONTROL_PRIMARY_2_X",
                "const": 21
              },
              {
                "type": "integer",
                "title": "COLOR_CONTROL_PRIMARY_2_Y",
                "const": 22
              },
              {
                "type": "integer",
                "title": "COLOR_CONTROL_PRIMARY_2_INTENSITY",
                "const": 23
              },
              {
                "type": "integer",
                "title": "COLOR_CONTROL_PRIMARY_3_X",
                "const": 25
              },
              {
                "type": "integer",
                "title": "COLOR_CONTROL_PRIMARY_3_Y",
                "const": 26
              },
              {
                "type": "integer",
                "title": "COLOR_CONTROL_PRIMARY_3_INTENSITY",
                "const": 27
              },
              {
                "type": "integer",
                "title": "COLOR_CONTROL_PRIMARY_4_X",
                "const": 32
              },
              {
                "type": "integer",
                "title": "COLOR_CONTROL_PRIMARY_4_Y",
                "const": 33
              },
              {
                "type": "integer",
                "title": "COLOR_CONTROL_PRIMARY_4_INTENSITY",
                "const": 34
              },
              {
                "type": "integer",
                "title": "COLOR_CONTROL_PRIMARY_5_X",
                "const": 36
              },
              {
                "type": "integer",
                "title": "COLOR_CONTROL_PRIMARY_5_Y",
                "const": 37
              },
              {
                "type": "integer",
                "title": "COLOR_CONTROL_PRIMARY_5_INTENSITY",
                "const": 38
              },
              {
                "type": "integer",
                "title": "COLOR_CONTROL_PRIMARY_6_X",
                "const": 40
              },
              {
                "type": "integer",
                "title": "COLOR_CONTROL_PRIMARY_6_Y",
                "const": 41
              },
              {
                "type": "integer",
                "title": "COLOR_CONTROL_PRIMARY_6_INTENSITY",
                "const": 42
              },
              {
                "type": "integer",
                "title": "COLOR_CONTROL_WHITE_POINT_X",
                "description": "WhitePointX",
                "const": 48
              },
              {
                "type": "integer",
                "title": "COLOR_CONTROL_WHITE_POINT_Y",
                "description": "WhitePointY",
                "const": 49
              },
              {
                "type": "integer",
                "title": "COLOR_CONTROL_COLOR_POINT_R_X",
                "description": "ColorPointRX",
                "const": 50
              },
              {
                "type": "integer",
                "title": "COLOR_CONTROL_COLOR_POINT_R_Y",
                "description": "ColorPointRY",
                "const": 51
              },
              {
                "type": "integer",
                "title": "COLOR_CONTROL_COLOR_POINT_R_INTENSITY",
                "description": "ColorPointRIntensity",
                "const": 52
              },
              {
                "type": "integer",
                "title": "COLOR_CONTROL_COLOR_POINT_G_X",
                "description": "ColorPointGX",
                "const": 54
              },
              {
                "type": "integer",
                "title": "COLOR_CONTROL_COLOR_POINT_G_Y",
                "description": "ColorPointGY",
                "const": 55
              },
              {
                "type": "integer",
                "title": "COLOR_CONTROL_COLOR_POINT_G_INTENSITY",
                "description": "ColorPointGIntensity",
                "const": 56
              },
              {
                "type": "integer",
                "title": "COLOR_CONTROL_COLOR_POINT_B_X",
                "description": "ColorPointBX",
                "const": 58
              },
              {
                "type": "integer",
                "title": "COLOR_CONTROL_COLOR_POINT_B_Y",
                "description": "ColorPointBY",
                "const": 59
              },
              {
                "type": "integer",
                "title": "COLOR_CONTROL_COLOR_POINT_B_INTENSITY",
                "description": "ColorPointBIntensity",
                "const": 60
              },
              {
                "type": "integer",
                "title": "COLOR_CONTROL_TEMPERATURE_LEVEL_MIN_MIREDS",
                "const": 16397
              },
              {
                "type": "integer",
                "title": "START_UP_COLOR_TEMPERATURE_MIREDS",
                "description": "StartUpColorTemperatureMireds",
                "const": 16400
              }
            ]
          }
        }
      }
    },
    "actions": {
      "768": {
        "title": "Color Control",
        "description": "Attributes and commands for controlling the color properties of a color-capable light.",
        "input": {
          "type": "object",
          "properties": {
            "command": {
              "type": "object",
              "description": "Command to send to the device",
              "oneOf": [
                {
                  "type": "object",
                  "description": "\n        Move to specified hue.\n      ",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 0
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "Hue": {
                          "type": "string",
                          "description": "INT8U"
                        },
                        "Direction": {
                          "type": "string",
                          "description": "HueDirection"
                        },
                        "TransitionTime": {
                          "type": "string",
                          "description": "INT16U"
                        },
                        "OptionsMask": {
                          "type": "string",
                          "description": "BITMAP8"
                        },
                        "OptionsOverride": {
                          "type": "string",
                          "description": "BITMAP8"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "\n        Move hue up or down at specified rate.\n      ",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 1
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "MoveMode": {
                          "type": "string",
                          "description": "HueMoveMode"
                        },
                        "Rate": {
                          "type": "string",
                          "description": "INT8U"
                        },
                        "OptionsMask": {
                          "type": "string",
                          "description": "BITMAP8"
                        },
                        "OptionsOverride": {
                          "type": "string",
                          "description": "BITMAP8"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "\n        Step hue up or down by specified size at specified rate.\n      ",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 2
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "StepMode": {
                          "type": "string",
                          "description": "HueStepMode"
                        },
                        "StepSize": {
                          "type": "string",
                          "description": "INT8U"
                        },
                        "TransitionTime": {
                          "type": "string",
                          "description": "INT8U"
                        },
                        "OptionsMask": {
                          "type": "string",
                          "description": "BITMAP8"
                        },
                        "OptionsOverride": {
                          "type": "string",
                          "description": "BITMAP8"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "\n        Move to specified saturation.\n      ",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 3
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "Saturation": {
                          "type": "string",
                          "description": "INT8U"
                        },
                        "TransitionTime": {
                          "type": "string",
                          "description": "INT16U"
                        },
                        "OptionsMask": {
                          "type": "string",
                          "description": "BITMAP8"
                        },
                        "OptionsOverride": {
                          "type": "string",
                          "description": "BITMAP8"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "\n        Move saturation up or down at specified rate.\n      ",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 4
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "MoveMode": {
                          "type": "string",
                          "description": "SaturationMoveMode"
                        },
                        "Rate": {
                          "type": "string",
                          "description": "INT8U"
                        },
                        "OptionsMask": {
                          "type": "string",
                          "description": "BITMAP8"
                        },
                        "OptionsOverride": {
                          "type": "string",
                          "description": "BITMAP8"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "\n        Step saturation up or down by specified size at specified rate.\n      ",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 5
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "StepMode": {
                          "type": "string",
                          "description": "SaturationStepMode"
                        },
                        "StepSize": {
                          "type": "string",
                          "description": "INT8U"
                        },
                        "TransitionTime": {
                          "type": "string",
                          "description": "INT8U"
                        },
                        "OptionsMask": {
                          "type": "string",
                          "description": "BITMAP8"
                        },
                        "OptionsOverride": {
                          "type": "string",
                          "description": "BITMAP8"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "\n        Move to hue and saturation.\n      ",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 6
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "Hue": {
                          "type": "string",
                          "description": "INT8U"
                        },
                        "Saturation": {
                          "type": "string",
                          "description": "INT8U"
                        },
                        "TransitionTime": {
                          "type": "string",
                          "description": "INT16U"
                        },
                        "OptionsMask": {
                          "type": "string",
                          "description": "BITMAP8"
                        },
                        "OptionsOverride": {
                          "type": "string",
                          "description": "BITMAP8"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "\n        Move to specified color.\n      ",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 7
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "ColorX": {
                          "type": "string",
                          "description": "INT16U"
                        },
                        "ColorY": {
                          "type": "string",
                          "description": "INT16U"
                        },
                        "TransitionTime": {
                          "type": "string",
                          "description": "INT16U"
                        },
                        "OptionsMask": {
                          "type": "string",
                          "description": "BITMAP8"
                        },
                        "OptionsOverride": {
                          "type": "string",
                          "description": "BITMAP8"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "\n        Moves the color.\n      ",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 8
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "RateX": {
                          "type": "string",
                          "description": "INT16S"
                        },
                        "RateY": {
                          "type": "string",
                          "description": "INT16S"
                        },
                        "OptionsMask": {
                          "type": "string",
                          "description": "BITMAP8"
                        },
                        "OptionsOverride": {
                          "type": "string",
                          "description": "BITMAP8"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "\n        Steps the lighting to a specific color.\n      ",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 9
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "StepX": {
                          "type": "string",
                          "description": "INT16S"
                        },
                        "StepY": {
                          "type": "string",
                          "description": "INT16S"
                        },
                        "TransitionTime": {
                          "type": "string",
                          "description": "INT16U"
                        },
                        "OptionsMask": {
                          "type": "string",
                          "description": "BITMAP8"
                        },
                        "OptionsOverride": {
                          "type": "string",
                          "description": "BITMAP8"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "\n        Move to a specific color temperature.\n      ",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 10
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "ColorTemperatureMireds": {
                          "type": "string",
                          "description": "INT16U"
                        },
                        "TransitionTime": {
                          "type": "string",
                          "description": "INT16U"
                        },
                        "OptionsMask": {
                          "type": "string",
                          "description": "BITMAP8"
                        },
                        "OptionsOverride": {
                          "type": "string",
                          "description": "BITMAP8"
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        }
      }
    }
  },
  "769": {
    "properties": {
      "769": {
        "title": "Ballast Configuration",
        "description": "Attributes and commands for configuring a lighting ballast.",
        "uriVariables": {
          "attribute": {
            "type": "integer",
            "description": "Attrbute to read from the device",
            "oneOf": [
              {
                "type": "integer",
                "title": "PHYSICAL_MIN_LEVEL",
                "const": 0
              },
              {
                "type": "integer",
                "title": "PHYSICAL_MAX_LEVEL",
                "const": 1
              },
              {
                "type": "integer",
                "title": "BALLAST_STATUS",
                "const": 2
              },
              {
                "type": "integer",
                "title": "MIN_LEVEL",
                "const": 16
              },
              {
                "type": "integer",
                "title": "MAX_LEVEL",
                "const": 17
              },
              {
                "type": "integer",
                "title": "INTRINSIC_BALLAST_FACTOR",
                "const": 20
              },
              {
                "type": "integer",
                "title": "BALLAST_FACTOR_ADJUSTMENT",
                "const": 21
              },
              {
                "type": "integer",
                "title": "LAMP_QUANTITY",
                "const": 32
              },
              {
                "type": "integer",
                "title": "LAMP_TYPE",
                "const": 48
              },
              {
                "type": "integer",
                "title": "LAMP_MANUFACTURER",
                "const": 49
              },
              {
                "type": "integer",
                "title": "LAMP_RATED_HOURS",
                "const": 50
              },
              {
                "type": "integer",
                "title": "LAMP_BURN_HOURS",
                "const": 51
              },
              {
                "type": "integer",
                "title": "LAMP_ALARM_MODE",
                "const": 52
              },
              {
                "type": "integer",
                "title": "LAMP_BURN_HOURS_TRIP_POINT",
                "const": 53
              }
            ]
          }
        }
      }
    },
    "actions": {
      "769": {
        "title": "Ballast Configuration",
        "description": "Attributes and commands for configuring a lighting ballast.",
        "input": {
          "type": "object",
          "properties": {
            "command": {
              "type": "object",
              "description": "Command to send to the device",
              "oneOf": []
            }
          }
        }
      }
    }
  },
  "1024": {
    "properties": {
      "1024": {
        "title": "Illuminance Measurement",
        "description": "Attributes and commands for configuring the measurement of illuminance, and reporting illuminance measurements.",
        "uriVariables": {
          "attribute": {
            "type": "integer",
            "description": "Attrbute to read from the device",
            "oneOf": [
              {
                "type": "integer",
                "title": "ILLUM_MEASURED_VALUE",
                "const": 0
              },
              {
                "type": "integer",
                "title": "ILLUM_MIN_MEASURED_VALUE",
                "const": 1
              },
              {
                "type": "integer",
                "title": "ILLUM_MAX_MEASURED_VALUE",
                "const": 2
              },
              {
                "type": "integer",
                "title": "ILLUM_TOLERANCE",
                "const": 3
              },
              {
                "type": "integer",
                "title": "ILLUM_LIGHT_SENSOR_TYPE",
                "const": 4
              }
            ]
          }
        }
      }
    },
    "actions": {
      "1024": {
        "title": "Illuminance Measurement",
        "description": "Attributes and commands for configuring the measurement of illuminance, and reporting illuminance measurements.",
        "input": {
          "type": "object",
          "properties": {
            "command": {
              "type": "object",
              "description": "Command to send to the device",
              "oneOf": []
            }
          }
        }
      }
    }
  },
  "1026": {
    "properties": {
      "1026": {
        "title": "Temperature Measurement",
        "description": "Attributes and commands for configuring the measurement of temperature, and reporting temperature measurements.",
        "uriVariables": {
          "attribute": {
            "type": "integer",
            "description": "Attrbute to read from the device",
            "oneOf": [
              {
                "type": "integer",
                "title": "TEMP_MEASURED_VALUE",
                "const": 0
              },
              {
                "type": "integer",
                "title": "TEMP_MIN_MEASURED_VALUE",
                "const": 1
              },
              {
                "type": "integer",
                "title": "TEMP_MAX_MEASURED_VALUE",
                "const": 2
              },
              {
                "type": "integer",
                "title": "TEMP_TOLERANCE",
                "const": 3
              }
            ]
          }
        }
      }
    },
    "actions": {
      "1026": {
        "title": "Temperature Measurement",
        "description": "Attributes and commands for configuring the measurement of temperature, and reporting temperature measurements.",
        "input": {
          "type": "object",
          "properties": {
            "command": {
              "type": "object",
              "description": "Command to send to the device",
              "oneOf": []
            }
          }
        }
      }
    }
  },
  "1027": {
    "properties": {
      "1027": {
        "title": "Pressure Measurement",
        "description": "Attributes and commands for configuring the measurement of pressure, and reporting pressure measurements.",
        "uriVariables": {
          "attribute": {
            "type": "integer",
            "description": "Attrbute to read from the device",
            "oneOf": [
              {
                "type": "integer",
                "title": "PRESSURE_MEASURED_VALUE",
                "const": 0
              },
              {
                "type": "integer",
                "title": "PRESSURE_MIN_MEASURED_VALUE",
                "const": 1
              },
              {
                "type": "integer",
                "title": "PRESSURE_MAX_MEASURED_VALUE",
                "const": 2
              },
              {
                "type": "integer",
                "title": "PRESSURE_TOLERANCE",
                "const": 3
              },
              {
                "type": "integer",
                "title": "PRESSURE_SCALED_VALUE",
                "const": 16
              },
              {
                "type": "integer",
                "title": "PRESSURE_MIN_SCALED_VALUE",
                "const": 17
              },
              {
                "type": "integer",
                "title": "PRESSURE_MAX_SCALED_VALUE",
                "const": 18
              },
              {
                "type": "integer",
                "title": "PRESSURE_SCALED_TOLERANCE",
                "const": 19
              },
              {
                "type": "integer",
                "title": "PRESSURE_SCALE",
                "const": 20
              }
            ]
          }
        }
      }
    },
    "actions": {
      "1027": {
        "title": "Pressure Measurement",
        "description": "Attributes and commands for configuring the measurement of pressure, and reporting pressure measurements.",
        "input": {
          "type": "object",
          "properties": {
            "command": {
              "type": "object",
              "description": "Command to send to the device",
              "oneOf": []
            }
          }
        }
      }
    }
  },
  "1028": {
    "properties": {
      "1028": {
        "title": "Flow Measurement",
        "description": "Attributes and commands for configuring the measurement of flow, and reporting flow measurements.",
        "uriVariables": {
          "attribute": {
            "type": "integer",
            "description": "Attrbute to read from the device",
            "oneOf": [
              {
                "type": "integer",
                "title": "FLOW_MEASURED_VALUE",
                "const": 0
              },
              {
                "type": "integer",
                "title": "FLOW_MIN_MEASURED_VALUE",
                "const": 1
              },
              {
                "type": "integer",
                "title": "FLOW_MAX_MEASURED_VALUE",
                "const": 2
              },
              {
                "type": "integer",
                "title": "FLOW_TOLERANCE",
                "const": 3
              }
            ]
          }
        }
      }
    },
    "actions": {
      "1028": {
        "title": "Flow Measurement",
        "description": "Attributes and commands for configuring the measurement of flow, and reporting flow measurements.",
        "input": {
          "type": "object",
          "properties": {
            "command": {
              "type": "object",
              "description": "Command to send to the device",
              "oneOf": []
            }
          }
        }
      }
    }
  },
  "1029": {
    "properties": {
      "1029": {
        "title": "Relative Humidity Measurement",
        "description": "Attributes and commands for configuring the measurement of relative humidity, and reporting relative humidity measurements.",
        "uriVariables": {
          "attribute": {
            "type": "integer",
            "description": "Attrbute to read from the device",
            "oneOf": [
              {
                "type": "integer",
                "title": "RELATIVE_HUMIDITY_MEASURED_VALUE",
                "const": 0
              },
              {
                "type": "integer",
                "title": "RELATIVE_HUMIDITY_MIN_MEASURED_VALUE",
                "const": 1
              },
              {
                "type": "integer",
                "title": "RELATIVE_HUMIDITY_MAX_MEASURED_VALUE",
                "const": 2
              },
              {
                "type": "integer",
                "title": "RELATIVE_HUMIDITY_TOLERANCE",
                "const": 3
              }
            ]
          }
        }
      }
    },
    "actions": {
      "1029": {
        "title": "Relative Humidity Measurement",
        "description": "Attributes and commands for configuring the measurement of relative humidity, and reporting relative humidity measurements.",
        "input": {
          "type": "object",
          "properties": {
            "command": {
              "type": "object",
              "description": "Command to send to the device",
              "oneOf": []
            }
          }
        }
      }
    }
  },
  "1030": {
    "properties": {
      "1030": {
        "title": "Occupancy Sensing",
        "description": "Attributes and commands for configuring occupancy sensing, and reporting occupancy status.",
        "uriVariables": {
          "attribute": {
            "type": "integer",
            "description": "Attrbute to read from the device",
            "oneOf": [
              {
                "type": "integer",
                "title": "OCCUPANCY",
                "const": 0
              },
              {
                "type": "integer",
                "title": "OCCUPANCY_SENSOR_TYPE",
                "const": 1
              },
              {
                "type": "integer",
                "title": "OCCUPANCY_SENSOR_TYPE_BITMAP",
                "const": 2
              },
              {
                "type": "integer",
                "title": "PIR_OCCUPIED_TO_UNOCCUPIED_DELAY",
                "description": "PIROccupiedToUnoccupiedDelay",
                "const": 16
              },
              {
                "type": "integer",
                "title": "PIR_UNOCCUPIED_TO_OCCUPIED_DELAY",
                "description": "PIRUnoccupiedToOccupiedDelay",
                "const": 17
              },
              {
                "type": "integer",
                "title": "PIR_UNOCCUPIED_TO_OCCUPIED_THRESHOLD",
                "description": "PIRUnoccupiedToOccupiedThreshold",
                "const": 18
              },
              {
                "type": "integer",
                "title": "ULTRASONIC_OCCUPIED_TO_UNOCCUPIED_DELAY",
                "description": "UltrasonicOccupiedToUnoccupiedDelay",
                "const": 32
              },
              {
                "type": "integer",
                "title": "ULTRASONIC_UNOCCUPIED_TO_OCCUPIED_DELAY",
                "description": "UltrasonicUnoccupiedToOccupiedDelay",
                "const": 33
              },
              {
                "type": "integer",
                "title": "ULTRASONIC_UNOCCUPIED_TO_OCCUPIED_THRESHOLD",
                "description": "UltrasonicUnoccupiedToOccupiedThreshold",
                "const": 34
              },
              {
                "type": "integer",
                "title": "PHYSICAL_CONTACT_OCCUPIED_TO_UNOCCUPIED_DELAY",
                "description": "PhysicalContactOccupiedToUnoccupiedDelay",
                "const": 48
              },
              {
                "type": "integer",
                "title": "PHYSICAL_CONTACT_UNOCCUPIED_TO_OCCUPIED_DELAY",
                "description": "PhysicalContactUnoccupiedToOccupiedDelay",
                "const": 49
              },
              {
                "type": "integer",
                "title": "PHYSICAL_CONTACT_UNOCCUPIED_TO_OCCUPIED_THRESHOLD",
                "description": "PhysicalContactUnoccupiedToOccupiedThreshold",
                "const": 50
              }
            ]
          }
        }
      }
    },
    "actions": {
      "1030": {
        "title": "Occupancy Sensing",
        "description": "Attributes and commands for configuring occupancy sensing, and reporting occupancy status.",
        "input": {
          "type": "object",
          "properties": {
            "command": {
              "type": "object",
              "description": "Command to send to the device",
              "oneOf": []
            }
          }
        }
      }
    }
  },
  "1283": {
    "properties": {
      "1283": {
        "title": "Wake on LAN",
        "description": "This cluster provides an interface for managing low power mode on a device that supports the Wake On LAN protocol.",
        "uriVariables": {
          "attribute": {
            "type": "integer",
            "description": "Attrbute to read from the device",
            "oneOf": [
              {
                "type": "integer",
                "title": "WAKE_ON_LAN_MAC_ADDRESS",
                "const": 0
              }
            ]
          }
        }
      }
    },
    "actions": {
      "1283": {
        "title": "Wake on LAN",
        "description": "This cluster provides an interface for managing low power mode on a device that supports the Wake On LAN protocol.",
        "input": {
          "type": "object",
          "properties": {
            "command": {
              "type": "object",
              "description": "Command to send to the device",
              "oneOf": []
            }
          }
        }
      }
    }
  },
  "1284": {
    "properties": {
      "1284": {
        "title": "Channel",
        "description": "This cluster provides an interface for controlling the current Channel on a device.",
        "uriVariables": {
          "attribute": {
            "type": "integer",
            "description": "Attrbute to read from the device",
            "oneOf": [
              {
                "type": "integer",
                "title": "CHANNEL_LIST",
                "const": 0
              },
              {
                "type": "integer",
                "title": "CHANNEL_LINEUP",
                "const": 1
              },
              {
                "type": "integer",
                "title": "CHANNEL_CURRENT_CHANNEL",
                "const": 2
              }
            ]
          }
        }
      }
    },
    "actions": {
      "1284": {
        "title": "Channel",
        "description": "This cluster provides an interface for controlling the current Channel on a device.",
        "input": {
          "type": "object",
          "properties": {
            "command": {
              "type": "object",
              "description": "Command to send to the device",
              "oneOf": [
                {
                  "type": "object",
                  "description": "Change the channel on the media player to the channel case-insensitive exact matching the value passed as an argument. ",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 0
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "Match": {
                          "type": "string",
                          "description": "CHAR_STRING"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "Change the channel on the media plaeyer to the channel with the given Number in the ChannelList attribute.",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 2
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "MajorNumber": {
                          "type": "string",
                          "description": "INT16U"
                        },
                        "MinorNumber": {
                          "type": "string",
                          "description": "INT16U"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "This command provides channel up and channel down functionality, but allows channel index jumps of size Count. When the value of the increase or decrease is larger than the number of channels remaining in the given direction, then the behavior SHALL be to return to the beginning (or end) of the channel list and continue. For example, if the current channel is at index 0 and count value of -1 is given, then the current channel should change to the last channel.",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 3
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "Count": {
                          "type": "string",
                          "description": "INT16U"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "Upon receipt, this SHALL display the active status of the input list on screen.",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 1
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "Status": {
                          "type": "string",
                          "description": "ChannelStatusEnum"
                        },
                        "Data": {
                          "type": "string",
                          "description": "CHAR_STRING"
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        }
      }
    }
  },
  "1285": {
    "properties": {
      "1285": {
        "title": "Target Navigator",
        "description": "This cluster provides an interface for UX navigation within a set of targets on a device or endpoint.",
        "uriVariables": {
          "attribute": {
            "type": "integer",
            "description": "Attrbute to read from the device",
            "oneOf": [
              {
                "type": "integer",
                "title": "TARGET_NAVIGATOR_LIST",
                "const": 0
              },
              {
                "type": "integer",
                "title": "TARGET_NAVIGATOR_CURRENT_TARGET",
                "const": 1
              }
            ]
          }
        }
      }
    },
    "actions": {
      "1285": {
        "title": "Target Navigator",
        "description": "This cluster provides an interface for UX navigation within a set of targets on a device or endpoint.",
        "input": {
          "type": "object",
          "properties": {
            "command": {
              "type": "object",
              "description": "Command to send to the device",
              "oneOf": [
                {
                  "type": "object",
                  "description": "Upon receipt, this SHALL navigation the UX to the target identified.",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 0
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "Target": {
                          "type": "string",
                          "description": "INT8U"
                        },
                        "Data": {
                          "type": "string",
                          "description": "CHAR_STRING"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "This command SHALL be generated in response to NavigateTarget commands.",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 1
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "Status": {
                          "type": "string",
                          "description": "TargetNavigatorStatusEnum"
                        },
                        "Data": {
                          "type": "string",
                          "description": "CHAR_STRING"
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        }
      }
    }
  },
  "1286": {
    "properties": {
      "1286": {
        "title": "Media Playback",
        "description": "This cluster provides an interface for controlling Media Playback (PLAY, PAUSE, etc) on a media device such as a TV or Speaker.",
        "uriVariables": {
          "attribute": {
            "type": "integer",
            "description": "Attrbute to read from the device",
            "oneOf": [
              {
                "type": "integer",
                "title": "MEDIA_PLAYBACK_STATE",
                "const": 0
              },
              {
                "type": "integer",
                "title": "MEDIA_PLAYBACK_START_TIME",
                "const": 1
              },
              {
                "type": "integer",
                "title": "MEDIA_PLAYBACK_DURATION",
                "const": 2
              },
              {
                "type": "integer",
                "title": "MEDIA_PLAYBACK_PLAYBACK_POSITION",
                "const": 3
              },
              {
                "type": "integer",
                "title": "MEDIA_PLAYBACK_PLAYBACK_SPEED",
                "const": 4
              },
              {
                "type": "integer",
                "title": "MEDIA_PLAYBACK_PLAYBACK_SEEK_RANGE_END",
                "const": 5
              },
              {
                "type": "integer",
                "title": "MEDIA_PLAYBACK_PLAYBACK_SEEK_RANGE_START",
                "const": 6
              }
            ]
          }
        }
      }
    },
    "actions": {
      "1286": {
        "title": "Media Playback",
        "description": "This cluster provides an interface for controlling Media Playback (PLAY, PAUSE, etc) on a media device such as a TV or Speaker.",
        "input": {
          "type": "object",
          "properties": {
            "command": {
              "type": "object",
              "description": "Command to send to the device",
              "oneOf": [
                {
                  "type": "object",
                  "description": "Upon receipt, this SHALL play media.",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 0
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "Upon receipt, this SHALL pause media.",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 1
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "Upon receipt, this SHALL stop media. User experience is context-specific. This will often navigate the user back to the location where media was originally launched.",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 2
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "Upon receipt, this SHALL Start Over with the current media playback item.",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 3
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "Upon receipt, this SHALL cause the handler to be invoked for \"Previous\". User experience is context-specific. This will often Go back to the previous media playback item.",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 4
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "Upon receipt, this SHALL cause the handler to be invoked for \"Next\". User experience is context-specific. This will often Go forward to the next media playback item.",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 5
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "Upon receipt, this SHALL Rewind through media. Different Rewind speeds can be used on the TV based upon the number of sequential calls to this function. This is to avoid needing to define every speed now (multiple fast, slow motion, etc).",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 6
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "Upon receipt, this SHALL Advance through media. Different FF speeds can be used on the TV based upon the number of sequential calls to this function. This is to avoid needing to define every speed now (multiple fast, slow motion, etc).",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 7
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "Upon receipt, this SHALL Skip forward in the media by the given number of seconds, using the data as follows:",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 8
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "DeltaPositionMilliseconds": {
                          "type": "string",
                          "description": "INT64U"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "Upon receipt, this SHALL Skip backward in the media by the given number of seconds, using the data as follows:",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 9
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "DeltaPositionMilliseconds": {
                          "type": "string",
                          "description": "INT64U"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "Upon receipt, this SHALL Skip backward in the media by the given number of seconds, using the data as follows:",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 11
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "position": {
                          "type": "string",
                          "description": "INT64U"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "This command SHALL be generated in response to various Playback Request commands.",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 10
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "Status": {
                          "type": "string",
                          "description": "MediaPlaybackStatusEnum"
                        },
                        "Data": {
                          "type": "string",
                          "description": "CHAR_STRING"
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        }
      }
    }
  },
  "1287": {
    "properties": {
      "1287": {
        "title": "Media Input",
        "description": "This cluster provides an interface for controlling the Input Selector on a media device such as a TV.",
        "uriVariables": {
          "attribute": {
            "type": "integer",
            "description": "Attrbute to read from the device",
            "oneOf": [
              {
                "type": "integer",
                "title": "MEDIA_INPUT_LIST",
                "const": 0
              },
              {
                "type": "integer",
                "title": "MEDIA_INPUT_CURRENT_INPUT",
                "const": 1
              }
            ]
          }
        }
      }
    },
    "actions": {
      "1287": {
        "title": "Media Input",
        "description": "This cluster provides an interface for controlling the Input Selector on a media device such as a TV.",
        "input": {
          "type": "object",
          "properties": {
            "command": {
              "type": "object",
              "description": "Command to send to the device",
              "oneOf": [
                {
                  "type": "object",
                  "description": "Upon receipt, this SHALL change the input on the media device to the input at a specific index in the Input List.",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 0
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "Index": {
                          "type": "string",
                          "description": "INT8U"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "Upon receipt, this SHALL display the active status of the input list on screen.",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 1
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "Upon receipt, this SHALL hide the input list from the screen.",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 2
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "Upon receipt, this SHALL rename the input at a specific index in the Input List. Updates to the input name SHALL appear in the TV settings menus.    ",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 3
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "Index": {
                          "type": "string",
                          "description": "INT8U"
                        },
                        "Name": {
                          "type": "string",
                          "description": "CHAR_STRING"
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        }
      }
    }
  },
  "1288": {
    "properties": {
      "1288": {
        "title": "Low Power",
        "description": "This cluster provides an interface for managing low power mode on a device.",
        "uriVariables": {
          "attribute": {
            "type": "integer",
            "description": "Attrbute to read from the device",
            "oneOf": []
          }
        }
      }
    },
    "actions": {
      "1288": {
        "title": "Low Power",
        "description": "This cluster provides an interface for managing low power mode on a device.",
        "input": {
          "type": "object",
          "properties": {
            "command": {
              "type": "object",
              "description": "Command to send to the device",
              "oneOf": [
                {
                  "type": "object",
                  "description": "This command shall put the device into low power mode.",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 0
                    }
                  }
                }
              ]
            }
          }
        }
      }
    }
  },
  "1289": {
    "properties": {
      "1289": {
        "title": "Keypad Input",
        "description": "This cluster provides an interface for controlling a device like a TV using action commands such as UP, DOWN, and SELECT.",
        "uriVariables": {
          "attribute": {
            "type": "integer",
            "description": "Attrbute to read from the device",
            "oneOf": []
          }
        }
      }
    },
    "actions": {
      "1289": {
        "title": "Keypad Input",
        "description": "This cluster provides an interface for controlling a device like a TV using action commands such as UP, DOWN, and SELECT.",
        "input": {
          "type": "object",
          "properties": {
            "command": {
              "type": "object",
              "description": "Command to send to the device",
              "oneOf": [
                {
                  "type": "object",
                  "description": "Upon receipt, this SHALL process a keycode as input to the media device.",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 0
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "KeyCode": {
                          "type": "string",
                          "description": "CecKeyCode"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "This command SHALL be generated in response to a SendKey Request command.",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 1
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "Status": {
                          "type": "string",
                          "description": "KeypadInputStatusEnum"
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        }
      }
    }
  },
  "1290": {
    "properties": {
      "1290": {
        "title": "Content Launcher",
        "description": "This cluster provides an interface for launching content on a media player device such as a TV or Speaker.",
        "uriVariables": {
          "attribute": {
            "type": "integer",
            "description": "Attrbute to read from the device",
            "oneOf": [
              {
                "type": "integer",
                "title": "CONTENT_LAUNCHER_ACCEPT_HEADER",
                "const": 0
              },
              {
                "type": "integer",
                "title": "CONTENT_LAUNCHER_SUPPORTED_STREAMING_PROTOCOLS",
                "const": 1
              }
            ]
          }
        }
      }
    },
    "actions": {
      "1290": {
        "title": "Content Launcher",
        "description": "This cluster provides an interface for launching content on a media player device such as a TV or Speaker.",
        "input": {
          "type": "object",
          "properties": {
            "command": {
              "type": "object",
              "description": "Command to send to the device",
              "oneOf": [
                {
                  "type": "object",
                  "description": "Upon receipt, this SHALL launch the specified content with optional search criteria.",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 0
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "Search": {
                          "type": "string",
                          "description": "ContentSearchStruct"
                        },
                        "AutoPlay": {
                          "type": "string",
                          "description": "BOOLEAN"
                        },
                        "Data": {
                          "type": "string",
                          "description": "CHAR_STRING"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "Upon receipt, this SHALL launch content from the specified URL.",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 1
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "ContentURL": {
                          "type": "string",
                          "description": "CHAR_STRING"
                        },
                        "DisplayString": {
                          "type": "string",
                          "description": "CHAR_STRING"
                        },
                        "BrandingInformation": {
                          "type": "string",
                          "description": "BrandingInformationStruct"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "This command SHALL be generated in response to LaunchContent command.",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 2
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "Status": {
                          "type": "string",
                          "description": "ContentLaunchStatusEnum"
                        },
                        "Data": {
                          "type": "string",
                          "description": "CHAR_STRING"
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        }
      }
    }
  },
  "1291": {
    "properties": {
      "1291": {
        "title": "Audio Output",
        "description": "This cluster provides an interface for controlling the Output on a media device such as a TV.",
        "uriVariables": {
          "attribute": {
            "type": "integer",
            "description": "Attrbute to read from the device",
            "oneOf": [
              {
                "type": "integer",
                "title": "AUDIO_OUTPUT_LIST",
                "const": 0
              },
              {
                "type": "integer",
                "title": "AUDIO_OUTPUT_CURRENT_OUTPUT",
                "const": 1
              }
            ]
          }
        }
      }
    },
    "actions": {
      "1291": {
        "title": "Audio Output",
        "description": "This cluster provides an interface for controlling the Output on a media device such as a TV.",
        "input": {
          "type": "object",
          "properties": {
            "command": {
              "type": "object",
              "description": "Command to send to the device",
              "oneOf": [
                {
                  "type": "object",
                  "description": "Upon receipt, this SHALL change the output on the media device to the output at a specific index in the Output List.",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 0
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "Index": {
                          "type": "string",
                          "description": "INT8U"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "Upon receipt, this SHALL rename the output at a specific index in the Output List. Updates to the output name SHALL appear in the TV settings menus.",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 1
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "Index": {
                          "type": "string",
                          "description": "INT8U"
                        },
                        "Name": {
                          "type": "string",
                          "description": "CHAR_STRING"
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        }
      }
    }
  },
  "1292": {
    "properties": {
      "1292": {
        "title": "Application Launcher",
        "description": "This cluster provides an interface for launching content on a media player device such as a TV or Speaker.",
        "uriVariables": {
          "attribute": {
            "type": "integer",
            "description": "Attrbute to read from the device",
            "oneOf": [
              {
                "type": "integer",
                "title": "APPLICATION_LAUNCHER_LIST",
                "const": 0
              },
              {
                "type": "integer",
                "title": "APPLICATION_LAUNCHER_CURRENT_APP",
                "const": 1
              }
            ]
          }
        }
      }
    },
    "actions": {
      "1292": {
        "title": "Application Launcher",
        "description": "This cluster provides an interface for launching content on a media player device such as a TV or Speaker.",
        "input": {
          "type": "object",
          "properties": {
            "command": {
              "type": "object",
              "description": "Command to send to the device",
              "oneOf": [
                {
                  "type": "object",
                  "description": "Upon receipt, this SHALL launch the specified app with optional data. The TV Device SHALL launch and bring to foreground the identified application in the command if the application is not already launched and in foreground. The TV Device SHALL update state attribute on the Application Basic cluster of the Endpoint corresponding to the launched application. This command returns a Launch Response.",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 0
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "Application": {
                          "type": "string",
                          "description": "ApplicationStruct"
                        },
                        "Data": {
                          "type": "string",
                          "description": "OCTET_STRING"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "Upon receipt on a Video Player endpoint this SHALL stop the specified application if it is running.",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 1
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "Application": {
                          "type": "string",
                          "description": "ApplicationStruct"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "Upon receipt on a Video Player endpoint this SHALL hide the specified application if it is running and visible.",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 2
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "Application": {
                          "type": "string",
                          "description": "ApplicationStruct"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "This command SHALL be generated in response to LaunchApp commands.",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 3
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "Status": {
                          "type": "string",
                          "description": "ApplicationLauncherStatusEnum"
                        },
                        "Data": {
                          "type": "string",
                          "description": "OCTET_STRING"
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        }
      }
    }
  },
  "1293": {
    "properties": {
      "1293": {
        "title": "Application Basic",
        "description": "This cluster provides information about an application running on a TV or media player device which is represented as an endpoint.",
        "uriVariables": {
          "attribute": {
            "type": "integer",
            "description": "Attrbute to read from the device",
            "oneOf": [
              {
                "type": "integer",
                "title": "APPLICATION_VENDOR_NAME",
                "const": 0
              },
              {
                "type": "integer",
                "title": "APPLICATION_VENDOR_ID",
                "const": 1
              },
              {
                "type": "integer",
                "title": "APPLICATION_NAME",
                "const": 2
              },
              {
                "type": "integer",
                "title": "APPLICATION_PRODUCT_ID",
                "const": 3
              },
              {
                "type": "integer",
                "title": "APPLICATION_APP",
                "const": 4
              },
              {
                "type": "integer",
                "title": "APPLICATION_STATUS",
                "const": 5
              },
              {
                "type": "integer",
                "title": "APPLICATION_VERSION",
                "const": 6
              },
              {
                "type": "integer",
                "title": "APPLICATION_ALLOWED_VENDOR_LIST",
                "const": 7
              }
            ]
          }
        }
      }
    },
    "actions": {
      "1293": {
        "title": "Application Basic",
        "description": "This cluster provides information about an application running on a TV or media player device which is represented as an endpoint.",
        "input": {
          "type": "object",
          "properties": {
            "command": {
              "type": "object",
              "description": "Command to send to the device",
              "oneOf": []
            }
          }
        }
      }
    }
  },
  "1294": {
    "properties": {
      "1294": {
        "title": "Account Login",
        "description": "This cluster provides commands that facilitate user account login on a Content App or a node. For example, a Content App running on a Video Player device, which is represented as an endpoint (see [TV Architecture]), can use this cluster to help make the user account on the Content App match the user account on the Client.",
        "uriVariables": {
          "attribute": {
            "type": "integer",
            "description": "Attrbute to read from the device",
            "oneOf": []
          }
        }
      }
    },
    "actions": {
      "1294": {
        "title": "Account Login",
        "description": "This cluster provides commands that facilitate user account login on a Content App or a node. For example, a Content App running on a Video Player device, which is represented as an endpoint (see [TV Architecture]), can use this cluster to help make the user account on the Content App match the user account on the Client.",
        "input": {
          "type": "object",
          "properties": {
            "command": {
              "type": "object",
              "description": "Command to send to the device",
              "oneOf": [
                {
                  "type": "object",
                  "description": "Upon receipt, the Content App checks if the account associated with the client Temp Account Identifier Rotating ID is the same acount that is active on the given Content App. If the accounts are the same, then the Content App includes the Setup PIN in the GetSetupPIN Response.",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 0
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "TempAccountIdentifier": {
                          "type": "string",
                          "description": "CHAR_STRING"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "Upon receipt, the Content App checks if the account associated with the client’s Temp Account Identifier (Rotating ID) has a current active Setup PIN with the given value. If the Setup PIN is valid for the user account associated with the Temp Account Identifier, then the Content App MAY make that user account active.",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 2
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "TempAccountIdentifier": {
                          "type": "string",
                          "description": "CHAR_STRING"
                        },
                        "SetupPIN": {
                          "type": "string",
                          "description": "CHAR_STRING"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "The purpose of this command is to instruct the Content App to clear the current user account. This command SHOULD be used by clients of a Content App to indicate the end of a user session.",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 3
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "This message is sent in response to the GetSetupPIN Request, and contains the Setup PIN code, or null when the accounts identified in the request does not match the active account of the running Content App.",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 1
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "SetupPIN": {
                          "type": "string",
                          "description": "CHAR_STRING"
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        }
      }
    }
  },
  "4166": {
    "properties": {
      "4166": {
        "title": "Client Monitoring",
        "description": "Client Monitoring allows for ensuring that listed clients meet the required monitoring conditions on the server.",
        "uriVariables": {
          "attribute": {
            "type": "integer",
            "description": "Attrbute to read from the device",
            "oneOf": [
              {
                "type": "integer",
                "title": "IDLE_MODE_INTERVAL",
                "const": 0
              },
              {
                "type": "integer",
                "title": "ACTIVE_MODE_INTERVAL",
                "const": 1
              },
              {
                "type": "integer",
                "title": "ACTIVE_MODE_THRESHOLD",
                "const": 2
              },
              {
                "type": "integer",
                "title": "EXPECTED_CLIENTS",
                "const": 3
              }
            ]
          }
        }
      }
    },
    "actions": {
      "4166": {
        "title": "Client Monitoring",
        "description": "Client Monitoring allows for ensuring that listed clients meet the required monitoring conditions on the server.",
        "input": {
          "type": "object",
          "properties": {
            "command": {
              "type": "object",
              "description": "Command to send to the device",
              "oneOf": [
                {
                  "type": "object",
                  "description": " Register a client to the end device ",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 0
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "ClientNodeId": {
                          "type": "string",
                          "description": "node_id"
                        },
                        "ICid": {
                          "type": "string",
                          "description": "INT64U"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": " Unregister a client from an end device ",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 1
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "ClientNodeId": {
                          "type": "string",
                          "description": "node_id"
                        },
                        "ICid": {
                          "type": "string",
                          "description": "INT64U"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "Request the end device to stay in Active Mode for an additional ActiveModeThreshold",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 2
                    }
                  }
                }
              ]
            }
          }
        }
      }
    }
  },
  "4294048773": {
    "properties": {
      "4294048773": {
        "title": "Unit Testing",
        "description": "The Test Cluster is meant to validate the generated code",
        "uriVariables": {
          "attribute": {
            "type": "integer",
            "description": "Attrbute to read from the device",
            "oneOf": [
              {
                "type": "integer",
                "title": "BOOLEAN",
                "const": 0
              },
              {
                "type": "integer",
                "title": "BITMAP8",
                "const": 1
              },
              {
                "type": "integer",
                "title": "BITMAP16",
                "const": 2
              },
              {
                "type": "integer",
                "title": "BITMAP32",
                "const": 3
              },
              {
                "type": "integer",
                "title": "BITMAP64",
                "const": 4
              },
              {
                "type": "integer",
                "title": "INT8U",
                "const": 5
              },
              {
                "type": "integer",
                "title": "INT16U",
                "const": 6
              },
              {
                "type": "integer",
                "title": "INT24U",
                "const": 7
              },
              {
                "type": "integer",
                "title": "INT32U",
                "const": 8
              },
              {
                "type": "integer",
                "title": "INT40U",
                "const": 9
              },
              {
                "type": "integer",
                "title": "INT48U",
                "const": 10
              },
              {
                "type": "integer",
                "title": "INT56U",
                "const": 11
              },
              {
                "type": "integer",
                "title": "INT64U",
                "const": 12
              },
              {
                "type": "integer",
                "title": "INT8S",
                "const": 13
              },
              {
                "type": "integer",
                "title": "INT16S",
                "const": 14
              },
              {
                "type": "integer",
                "title": "INT24S",
                "const": 15
              },
              {
                "type": "integer",
                "title": "INT32S",
                "const": 16
              },
              {
                "type": "integer",
                "title": "INT40S",
                "const": 17
              },
              {
                "type": "integer",
                "title": "INT48S",
                "const": 18
              },
              {
                "type": "integer",
                "title": "INT56S",
                "const": 19
              },
              {
                "type": "integer",
                "title": "INT64S",
                "const": 20
              },
              {
                "type": "integer",
                "title": "ENUM8",
                "const": 21
              },
              {
                "type": "integer",
                "title": "ENUM16",
                "const": 22
              },
              {
                "type": "integer",
                "title": "FLOAT_SINGLE",
                "const": 23
              },
              {
                "type": "integer",
                "title": "FLOAT_DOUBLE",
                "const": 24
              },
              {
                "type": "integer",
                "title": "OCTET_STRING",
                "const": 25
              },
              {
                "type": "integer",
                "title": "LIST",
                "const": 26
              },
              {
                "type": "integer",
                "title": "LIST_OCTET_STRING",
                "const": 27
              },
              {
                "type": "integer",
                "title": "LIST_STRUCT_OCTET_STRING",
                "const": 28
              },
              {
                "type": "integer",
                "title": "LONG_OCTET_STRING",
                "const": 29
              },
              {
                "type": "integer",
                "title": "CHAR_STRING",
                "const": 30
              },
              {
                "type": "integer",
                "title": "LONG_CHAR_STRING",
                "const": 31
              },
              {
                "type": "integer",
                "title": "EPOCH_US",
                "const": 32
              },
              {
                "type": "integer",
                "title": "EPOCH_S",
                "const": 33
              },
              {
                "type": "integer",
                "title": "TEST_VENDOR_ID",
                "const": 34
              },
              {
                "type": "integer",
                "title": "LIST_OF_STRUCTS_WITH_OPTIONALS",
                "const": 35
              },
              {
                "type": "integer",
                "title": "SIMPLE_ENUM",
                "const": 36
              },
              {
                "type": "integer",
                "title": "STRUCT",
                "const": 37
              },
              {
                "type": "integer",
                "title": "RANGE_RESTRICTED_INT8U",
                "const": 38
              },
              {
                "type": "integer",
                "title": "RANGE_RESTRICTED_INT8s",
                "const": 39
              },
              {
                "type": "integer",
                "title": "RANGE_RESTRICTED_INT16U",
                "const": 40
              },
              {
                "type": "integer",
                "title": "RANGE_RESTRICTED_INT16s",
                "const": 41
              },
              {
                "type": "integer",
                "title": "LIST_LONG_OCTET_STRING",
                "const": 42
              },
              {
                "type": "integer",
                "title": "LIST_FABRIC_SCOPED",
                "const": 43
              },
              {
                "type": "integer",
                "title": "TIMED_WRITE_BOOLEAN",
                "const": 48
              },
              {
                "type": "integer",
                "title": "GENERAL_ERROR_BOOLEAN",
                "const": 49
              },
              {
                "type": "integer",
                "title": "CLUSTER_ERROR_BOOLEAN",
                "const": 50
              },
              {
                "type": "integer",
                "title": "NULLABLE_BOOLEAN",
                "const": 16384
              },
              {
                "type": "integer",
                "title": "NULLABLE_BITMAP8",
                "const": 16385
              },
              {
                "type": "integer",
                "title": "NULLABLE_BITMAP16",
                "const": 16386
              },
              {
                "type": "integer",
                "title": "NULLABLE_BITMAP32",
                "const": 16387
              },
              {
                "type": "integer",
                "title": "NULLABLE_BITMAP64",
                "const": 16388
              },
              {
                "type": "integer",
                "title": "NULLABLE_INT8U",
                "const": 16389
              },
              {
                "type": "integer",
                "title": "NULLABLE_INT16U",
                "const": 16390
              },
              {
                "type": "integer",
                "title": "NULLABLE_INT24U",
                "const": 16391
              },
              {
                "type": "integer",
                "title": "NULLABLE_INT32U",
                "const": 16392
              },
              {
                "type": "integer",
                "title": "NULLABLE_INT40U",
                "const": 16393
              },
              {
                "type": "integer",
                "title": "NULLABLE_INT48U",
                "const": 16394
              },
              {
                "type": "integer",
                "title": "NULLABLE_INT56U",
                "const": 16395
              },
              {
                "type": "integer",
                "title": "NULLABLE_INT64U",
                "const": 16396
              },
              {
                "type": "integer",
                "title": "NULLABLE_INT8S",
                "const": 16397
              },
              {
                "type": "integer",
                "title": "NULLABLE_INT16S",
                "const": 16398
              },
              {
                "type": "integer",
                "title": "NULLABLE_INT24S",
                "const": 16399
              },
              {
                "type": "integer",
                "title": "NULLABLE_INT32S",
                "const": 16400
              },
              {
                "type": "integer",
                "title": "NULLABLE_INT40S",
                "const": 16401
              },
              {
                "type": "integer",
                "title": "NULLABLE_INT48S",
                "const": 16402
              },
              {
                "type": "integer",
                "title": "NULLABLE_INT56S",
                "const": 16403
              },
              {
                "type": "integer",
                "title": "NULLABLE_INT64S",
                "const": 16404
              },
              {
                "type": "integer",
                "title": "NULLABLE_ENUM8",
                "const": 16405
              },
              {
                "type": "integer",
                "title": "NULLABLE_ENUM16",
                "const": 16406
              },
              {
                "type": "integer",
                "title": "NULLABLE_FLOAT_SINGLE",
                "const": 16407
              },
              {
                "type": "integer",
                "title": "NULLABLE_FLOAT_DOUBLE",
                "const": 16408
              },
              {
                "type": "integer",
                "title": "NULLABLE_OCTET_STRING",
                "const": 16409
              },
              {
                "type": "integer",
                "title": "NULLABLE_CHAR_STRING",
                "const": 16414
              },
              {
                "type": "integer",
                "title": "NULLABLE_SIMPLE_ENUM",
                "const": 16420
              },
              {
                "type": "integer",
                "title": "NULLABLE_STRUCT",
                "const": 16421
              },
              {
                "type": "integer",
                "title": "NULLABLE_RANGE_RESTRICTED_INT8U",
                "const": 16422
              },
              {
                "type": "integer",
                "title": "NULLABLE_RANGE_RESTRICTED_INT8s",
                "const": 16423
              },
              {
                "type": "integer",
                "title": "NULLABLE_RANGE_RESTRICTED_INT16U",
                "const": 16424
              },
              {
                "type": "integer",
                "title": "NULLABLE_RANGE_RESTRICTED_INT16S",
                "const": 16425
              },
              {
                "type": "integer",
                "title": "WRITE_ONLY_INT8U",
                "const": 16426
              },
              {
                "type": "integer",
                "title": "UNSUPPORTED",
                "const": 255
              }
            ]
          }
        }
      }
    },
    "actions": {
      "4294048773": {
        "title": "Unit Testing",
        "description": "The Test Cluster is meant to validate the generated code",
        "input": {
          "type": "object",
          "properties": {
            "command": {
              "type": "object",
              "description": "Command to send to the device",
              "oneOf": [
                {
                  "type": "object",
                  "description": "\n        Simple command without any parameters and without a specific response\n      ",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 0
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "\n        Simple command without any parameters and without a specific response not handled by the server\n      ",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 1
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "\n        Simple command without any parameters and with a specific response\n      ",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 2
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "\n        Simple command that should not be added to the server.\n      ",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 3
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "\n        Command that takes two arguments and returns their sum.\n      ",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 4
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "arg1": {
                          "type": "string",
                          "description": "INT8U"
                        },
                        "arg2": {
                          "type": "string",
                          "description": "INT8U"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "\n        Command that takes an argument which is bool\n      ",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 5
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "arg1": {
                          "type": "string",
                          "description": "BOOLEAN"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "\n        Command that takes various arguments that are arrays, including an array of structs which have a list member.\n      ",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 6
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "arg1": {
                          "type": "string",
                          "description": "NestedStructList"
                        },
                        "arg2": {
                          "type": "string",
                          "description": "SimpleStruct"
                        },
                        "arg3": {
                          "type": "string",
                          "description": "SimpleEnum"
                        },
                        "arg4": {
                          "type": "string",
                          "description": "BOOLEAN"
                        },
                        "arg5": {
                          "type": "string",
                          "description": "SimpleEnum"
                        },
                        "arg6": {
                          "type": "string",
                          "description": "BOOLEAN"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "\n        Command that takes an argument which is struct.  The response echoes the\n        'b' field of the single arg.\n      ",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 7
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "arg1": {
                          "type": "string",
                          "description": "SimpleStruct"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "\n        Command that takes an argument which is nested struct.  The response\n        echoes the 'b' field of ar1.c.\n      ",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 8
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "arg1": {
                          "type": "string",
                          "description": "NestedStruct"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "\n        Command that takes an argument which is a list of structs.  The response\n        returns false if there is some struct in the list whose 'b' field is\n        false, and true otherwise (including if the list is empty).\n      ",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 9
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "arg1": {
                          "type": "string",
                          "description": "SimpleStruct"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "\n        Command that takes an argument which is a list of INT8U.  The response\n        returns false if the list contains a 0 in it, true otherwise (including\n        if the list is empty).\n      ",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 10
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "arg1": {
                          "type": "string",
                          "description": "INT8U"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "\n        Command that takes an argument which is a Nested Struct List.  The\n        response returns false if there is some struct in arg1 (either directly\n        in arg1.c or in the arg1.d list) whose 'b' field is false, and true\n        otherwise.\n      ",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 11
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "arg1": {
                          "type": "string",
                          "description": "NestedStructList"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "\n        Command that takes an argument which is a list of Nested Struct List.\n        The response returns false if there is some struct in arg1 (either\n        directly in as the 'c' field of an entry 'd' list of an entry) whose 'b'\n        field is false, and true otherwise (including if the list is empty).\n      ",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 12
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "arg1": {
                          "type": "string",
                          "description": "NestedStructList"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "\n        Command that takes an argument which is a list of INT8U and expects a\n        response that reverses the list.\n      ",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 13
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "arg1": {
                          "type": "string",
                          "description": "INT8U"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "\n        Command that sends a vendor id and an enum.  The server is expected to\n        echo them back.\n      ",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 14
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "arg1": {
                          "type": "string",
                          "description": "vendor_id"
                        },
                        "arg2": {
                          "type": "string",
                          "description": "SimpleEnum"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "\n        Command that takes an argument which is nullable and optional.  The\n        response returns a boolean indicating whether the argument was present,\n        if that's true a boolean indicating whether the argument was null, and\n        if that' false the argument it received.\n      ",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 15
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "arg1": {
                          "type": "string",
                          "description": "INT8U"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "\n        Command that takes various arguments which can be nullable and/or optional.  The\n        response returns information about which things were received and what\n        their state was.\n      ",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 16
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "NullableInt": {
                          "type": "string",
                          "description": "INT16U"
                        },
                        "OptionalInt": {
                          "type": "string",
                          "description": "INT16U"
                        },
                        "NullableOptionalInt": {
                          "type": "string",
                          "description": "INT16U"
                        },
                        "NullableString": {
                          "type": "string",
                          "description": "CHAR_STRING"
                        },
                        "OptionalString": {
                          "type": "string",
                          "description": "CHAR_STRING"
                        },
                        "NullableOptionalString": {
                          "type": "string",
                          "description": "CHAR_STRING"
                        },
                        "NullableStruct": {
                          "type": "string",
                          "description": "SimpleStruct"
                        },
                        "OptionalStruct": {
                          "type": "string",
                          "description": "SimpleStruct"
                        },
                        "NullableOptionalStruct": {
                          "type": "string",
                          "description": "SimpleStruct"
                        },
                        "NullableList": {
                          "type": "string",
                          "description": "SimpleEnum"
                        },
                        "OptionalList": {
                          "type": "string",
                          "description": "SimpleEnum"
                        },
                        "NullableOptionalList": {
                          "type": "string",
                          "description": "SimpleEnum"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "\n        Command that takes an argument which is a struct.  The response echoes\n        the struct back.\n      ",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 17
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "arg1": {
                          "type": "string",
                          "description": "SimpleStruct"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "\n        Command that just responds with a success status if the timed invoke\n        conditions are met.\n      ",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 18
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "\n        Command that takes an optional argument which is bool. It responds with a success value if the optional is set to any value.\n      ",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 19
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "arg1": {
                          "type": "string",
                          "description": "BOOLEAN"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "\n        Command that takes identical arguments to the fields of the TestEvent and logs the TestEvent to the buffer.  Command returns an event ID as the response.\n      ",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 20
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "arg1": {
                          "type": "string",
                          "description": "INT8U"
                        },
                        "arg2": {
                          "type": "string",
                          "description": "SimpleEnum"
                        },
                        "arg3": {
                          "type": "string",
                          "description": "BOOLEAN"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "\n        Command that takes identical arguments to the fields of the TestFabricScopedEvent and logs the TestFabricScopedEvent to the buffer.  Command returns an event ID as the response.\n      ",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 21
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "arg1": {
                          "type": "string",
                          "description": "INT8U"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "\n        Simple response for TestWithResponse with a simple return value\n      ",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 0
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "returnValue": {
                          "type": "string",
                          "description": "INT8U"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "\n        Response for TestAddArguments that returns the sum.\n      ",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 1
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "returnValue": {
                          "type": "string",
                          "description": "INT8U"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "\n        Simple response for TestSimpleArgumentRequest with a simple return value\n      ",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 2
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "returnValue": {
                          "type": "string",
                          "description": "BOOLEAN"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "\n        Response for TestStructArrayArgumentRequest with complicated return arguments\n      ",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 3
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "arg1": {
                          "type": "string",
                          "description": "NestedStructList"
                        },
                        "arg2": {
                          "type": "string",
                          "description": "SimpleStruct"
                        },
                        "arg3": {
                          "type": "string",
                          "description": "SimpleEnum"
                        },
                        "arg4": {
                          "type": "string",
                          "description": "BOOLEAN"
                        },
                        "arg5": {
                          "type": "string",
                          "description": "SimpleEnum"
                        },
                        "arg6": {
                          "type": "string",
                          "description": "BOOLEAN"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "\n        Response that delivers the reversed list of uint8.\n      ",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 4
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "arg1": {
                          "type": "string",
                          "description": "INT8U"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "\n        Response that delivers a vendor id and an enum..\n      ",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 5
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "arg1": {
                          "type": "string",
                          "description": "vendor_id"
                        },
                        "arg2": {
                          "type": "string",
                          "description": "SimpleEnum"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "\n        Delivers information about the argument TestNullableOptionalRequest had,\n        and the original value if there was one.\n      ",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 6
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "wasPresent": {
                          "type": "string",
                          "description": "BOOLEAN"
                        },
                        "wasNull": {
                          "type": "string",
                          "description": "BOOLEAN"
                        },
                        "value": {
                          "type": "string",
                          "description": "INT8U"
                        },
                        "originalValue": {
                          "type": "string",
                          "description": "INT8U"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "\n        Delivers information about the arguments TestComplexNullableOptionalRequest had.\n      ",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 7
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "NullableIntWasNull": {
                          "type": "string",
                          "description": "BOOLEAN"
                        },
                        "NullableIntValue": {
                          "type": "string",
                          "description": "INT16U"
                        },
                        "OptionalIntWasPresent": {
                          "type": "string",
                          "description": "BOOLEAN"
                        },
                        "OptionalIntValue": {
                          "type": "string",
                          "description": "INT16U"
                        },
                        "NullableOptionalIntWasPresent": {
                          "type": "string",
                          "description": "BOOLEAN"
                        },
                        "NullableOptionalIntWasNull": {
                          "type": "string",
                          "description": "BOOLEAN"
                        },
                        "NullableOptionalIntValue": {
                          "type": "string",
                          "description": "INT16U"
                        },
                        "NullableStringWasNull": {
                          "type": "string",
                          "description": "BOOLEAN"
                        },
                        "NullableStringValue": {
                          "type": "string",
                          "description": "CHAR_STRING"
                        },
                        "OptionalStringWasPresent": {
                          "type": "string",
                          "description": "BOOLEAN"
                        },
                        "OptionalStringValue": {
                          "type": "string",
                          "description": "CHAR_STRING"
                        },
                        "NullableOptionalStringWasPresent": {
                          "type": "string",
                          "description": "BOOLEAN"
                        },
                        "NullableOptionalStringWasNull": {
                          "type": "string",
                          "description": "BOOLEAN"
                        },
                        "NullableOptionalStringValue": {
                          "type": "string",
                          "description": "CHAR_STRING"
                        },
                        "NullableStructWasNull": {
                          "type": "string",
                          "description": "BOOLEAN"
                        },
                        "NullableStructValue": {
                          "type": "string",
                          "description": "SimpleStruct"
                        },
                        "OptionalStructWasPresent": {
                          "type": "string",
                          "description": "BOOLEAN"
                        },
                        "OptionalStructValue": {
                          "type": "string",
                          "description": "SimpleStruct"
                        },
                        "NullableOptionalStructWasPresent": {
                          "type": "string",
                          "description": "BOOLEAN"
                        },
                        "NullableOptionalStructWasNull": {
                          "type": "string",
                          "description": "BOOLEAN"
                        },
                        "NullableOptionalStructValue": {
                          "type": "string",
                          "description": "SimpleStruct"
                        },
                        "NullableListWasNull": {
                          "type": "string",
                          "description": "BOOLEAN"
                        },
                        "NullableListValue": {
                          "type": "string",
                          "description": "SimpleEnum"
                        },
                        "OptionalListWasPresent": {
                          "type": "string",
                          "description": "BOOLEAN"
                        },
                        "OptionalListValue": {
                          "type": "string",
                          "description": "SimpleEnum"
                        },
                        "NullableOptionalListWasPresent": {
                          "type": "string",
                          "description": "BOOLEAN"
                        },
                        "NullableOptionalListWasNull": {
                          "type": "string",
                          "description": "BOOLEAN"
                        },
                        "NullableOptionalListValue": {
                          "type": "string",
                          "description": "SimpleEnum"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "\n        Delivers a single boolean argument. What the argument means depends on\n        what we're responding to.\n      ",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 8
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "value": {
                          "type": "string",
                          "description": "BOOLEAN"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "\n        Command that returns a single argument which is a struct.  The contents\n        of the struct depend on what we are responding to.\n      ",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 9
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "arg1": {
                          "type": "string",
                          "description": "SimpleStruct"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "\n        Delivers the ID of an event in response to test command emitting fabric scoped events.\n      ",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 10
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "value": {
                          "type": "string",
                          "description": "INT64U"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "\n        Delivers the ID of an event in response to test command emitting fabric scope events.\n      ",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 11
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "value": {
                          "type": "string",
                          "description": "INT64U"
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        }
      }
    }
  },
  "4294048774": {
    "properties": {
      "4294048774": {
        "title": "Fault Injection",
        "description": "The Fault Injection Cluster provide a means for a test harness to configure faults(for example triggering a fault in the system).",
        "uriVariables": {
          "attribute": {
            "type": "integer",
            "description": "Attrbute to read from the device",
            "oneOf": []
          }
        }
      }
    },
    "actions": {
      "4294048774": {
        "title": "Fault Injection",
        "description": "The Fault Injection Cluster provide a means for a test harness to configure faults(for example triggering a fault in the system).",
        "input": {
          "type": "object",
          "properties": {
            "command": {
              "type": "object",
              "description": "Command to send to the device",
              "oneOf": [
                {
                  "type": "object",
                  "description": "Configure a fault to be triggered deterministically",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 0
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "Type": {
                          "type": "string",
                          "description": "FaultType"
                        },
                        "Id": {
                          "type": "string",
                          "description": "INT32U"
                        },
                        "NumCallsToSkip": {
                          "type": "string",
                          "description": "INT32U"
                        },
                        "NumCallsToFail": {
                          "type": "string",
                          "description": "INT32U"
                        },
                        "TakeMutex": {
                          "type": "string",
                          "description": "BOOLEAN"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "Configure a fault to be triggered randomly, with a given probability defined as a percentage",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "const": 1
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "Type": {
                          "type": "string",
                          "description": "FaultType"
                        },
                        "Id": {
                          "type": "string",
                          "description": "INT32U"
                        },
                        "Percentage": {
                          "type": "string",
                          "description": "INT8U"
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        }
      }
    }
  }
}